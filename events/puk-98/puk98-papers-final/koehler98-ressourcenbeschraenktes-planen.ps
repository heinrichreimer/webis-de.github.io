%!PS-Adobe-2.0
%%Creator: dvipsk 5.58f Copyright 1986, 1994 Radical Eye Software
%%Title: puk-98.dvi
%%Pages: 8
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSCommandLine: dvips puk-98
%DVIPSParameters: dpi=600, compressed, comments removed
%DVIPSSource:  TeX output 1998.03.26:1358
%%BeginProcSet: texc.pro
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end
%%EndProcSet
%%BeginProcSet: pstricks.pro
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
%%EndProcSet
%%BeginProcSet: pst-dots.pro
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%%EndProcSet
%%BeginProcSet: pst-node.pro
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
%%EndProcSet
%%BeginProcSet: special.pro
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end
%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (puk-98.dvi)
@start /Fa 1 111 df<380F03F0383F87FC3833DC1EEA63F8EAC3F013E0EA03C0A24848
5AA3EC7820D80F00136014F015C014F1001EEB7F80000CEB3E001B127D9125>110
D E /Fb 1 51 df<49B5FC130F133F01FFC7FCEA01F8EA03E0EA078048C8FC121E121C12
3C123812781270A212F05AA2B7FCA300E0C8FCA27E1270A212781238123C121C121E7E6C
7EEA03E0EA01F86CB4FC013FB5FC130F130120277AA12D>50 D E
/Fc 2 85 df<BB12FC86A3D87FC0C9001F7FF0007F6C6C17076C6C050113806C6CEF007F
1A1F6C6CF00FC06C6C18076C6C1803F201E06C6D17006D6C1860013F19706E18306D7E6D
6C18181B006D7E6D7E6D7EA26D7F6E7E6E7EA26E7E6E7E6E7EA26E7E6E7E80826F7E6F7E
A26F7E6F7E6F5A5EA24B5A5E4BCBFC153E157E5D5D4A5A4A5A14075D4A5A4ACCFC143E14
7E147C5C4948181801031930495A4A18704948186049CC12E0491801017EF003C0017C18
0749180F4848F01F800003197F49EF01FF4848050713004848173F48CA000FB5FC48BA5A
A25ABB5AA24D537B7F58>80 D<913801FFE0020F13FC027FEBFF8049B612E04981010F15
FC499038003FFED93FF8EB07FFD97FC001007F49486E7E4848C8EA1FE048486F7E48486F
7E48486F7E49150148486F7E49167E003F177F90CA7EA2481880007E171FA200FE18C048
170FB3B3B3A40078EF07803A537B7F45>84 D E /Fd 4 116 df<EB1F80EB7FC0EBF0E7
3803C03FEA078048487EA2121E003E133E123C127CA2485BA4485B1530A3903801F060A2
EA7803010E13C0393C1CF980381FF07F3907C01E001C1B7C9924>97
D<133EEA07FEA2EA007CA213FCA25BA21201A25BA21203EC07809038E01FC0EC38600007
EB61E014C3EBC187EBC307D80FC613C09038CC038001B8C7FC13E0487E13FEEB3F80EB0F
C0486C7E1303003E1460A2127EECC0C0127CECC18012FC903801E30038F800FE0070137C
1B297CA723>107 D<3907801FC0390FE07FF03918F0E0F83930F1807CEBFB00D860FE13
3C5B5B00C1147C5B1201A248485BA34A5AEA07C01660EC03E0A23A0F8007C0C0A2EDC180
913803C300D81F0013C7EC01FE000EEB00F8231B7D9929>110 D<EB0FE0EB7FF8EBF03C
3801C00E0003131E3807803EA2143C000F1318EBE0006CB4FC14C06C13E06C13F06C13F8
13071301EA3C00007E1378A24813F05A387001E0EB03C0383C0F80381FFE00EA07F8171B
7C991F>115 D E /Fe 1 98 df<EA01FCEA07FF001F13804813C0383E07E0383803F0EA
3001002013F8C7FCA5131FEA01FF120FEA1FFEEA3F80EA7E0012F8A31301EAFC03EA7E0F
EA7FFFEA3FFEEA1FF8380FE000151D7D9B1E>97 D E /Ff 1 37
df<EC0380A3EC1FE0EC7FFC49B5FC903907F71F8090390F8703C090391F0701E0013EEB
00F0017C1470D9F80E1330EA01F01638D803E0EB01F815031507000790381C0FF013C0A2
01E0EB07E0ED03C092C7FC6D5A13F813FC13FE3803FFF8806CEBFF806C8015F0013F7F6D
7F130701007F14EF14E3ECE0FFA28149487EA2121E127F1381A239FF03803EA212FE00D8
143C00C0147C12E039600700F84A5A12700078495A003C495A001EEB1F80260F8E7EC7FC
6CB45A000113F038007F80010EC8FCA25BA2254379BD2A>36 D E
/Fg 20 122 df<121C127FEAFF80A5EA7F00121C0909798817>58
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817>I<EF0180EF07C0171F177F933801FF00EE07FCEE1FF0EE7FC04B48C7
FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC0
4848CAFCEA07FCEA1FF0EA7FC048CBFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0
EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF9238
007FC0EE1FF0EE07FCEE01FF9338007FC0171F1707EF0180323279AD41>I<124012F812
FE6C7EEA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC
03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF
3FC0A2EFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03
FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3F
E0EAFF8048CBFC12F81260323279AD41>62 D<DCFF8013E0030F13F0037F9038FC01C091
3A01FF803E03913A07FC000F07DA0FE0EB038FDA3FC0903801DF804AC812FFEB01FED903
F8157F4948ED3F00495A495A494881017F161E49C9FC5B12014848161C5B1207485A1818
121F4993C7FCA2485AA3127F5BA312FF90CCFC93387FFFFE93B5FCA29338007FC0715A17
7F95C7FCA27E5F5F7F123F16016C7E5F6C6C14036D14071207D803FCEC1EF86C6C143C26
007F80EBF07890393FF007E0010FB5EA8030010349C9FC9038003FE03B3D7DBA41>71
D<0003B812FEA25A903AF8003FC00101C0913880007E4848163C90C7007F141C121E001C
92C7FCA2485CA200305C007017180060130112E0485CA21403C716005DA21407A25DA214
0FA25DA2141FA25DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CEB0F
FC003FB6FC5AA237397EB831>84 D<147E903803FF8090390FC1C38090391F00EFC0017E
137F49133F485A4848EB1F8012075B000F143F48481400A2485A5D007F147E90C7FCA215
FE485C5AA214015D48150CA21403EDF01C16181407007C1538007E010F1330003E131F02
7B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F0026267DA42C>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0FCEBE3FF9038E707
C0390FFE03E09038F801F001F013F8EBE000485A15FC5BA2123F90C7FCA214015A127EA2
140312FE4814F8A2140715F05AEC0FE0A215C0EC1F80143F00781400007C137E5C383C01
F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924>I<163FED1FFFA3ED007F167EA216FE
A216FCA21501A216F8A21503A216F0A21507A2027E13E0903803FF8790380FC1CF90381F
00EF017EEB7FC049133F485A4848131F000715805B000F143F485A1600485A5D127F90C7
127EA215FE5A485CA21401A248ECF80CA21403161CEDF0181407007C1538007E010F1330
003E131F027B13706C01E113E03A0F83C0F9C03A03FF007F80D800FCEB1F00283B7DB92B
>100 D<EC3FC0903801FFF0903807E07890381F801C90387E001E49130E485A485A1207
485A49131E001F141C153C484813F8EC03E0007FEB3FC09038FFFE0014E090C8FC5A5AA7
007E140315071506003E140E153C6C14706C6C13E0EC07C03903E03F003801FFF838003F
C020267DA427>I<EC07E0EC1FF891387C1C38903901F80EFC903803F007903807E003EB
0FC090381F8001D93F0013F85B017E130313FE16F0485A150712034914E0A2150F120749
14C0A2151FA2491480A2153FA2160000035C6D5B00015B4A5A3900F8077E90387C1EFEEB
1FF8903807E0FC90C7FC1401A25DA21403001E5C123F387F80075D00FF495A49485A4849
C7FC007C137E383C01F8381FFFE0000390C8FC26367FA428>103
D<14E0EB03F8A21307A314F0EB01C090C7FCAB13F8EA03FEEA070F000E1380121C121812
381230EA701F1260133F00E0130012C05BEA007EA213FE5B1201A25B12035BA200071318
13E01438000F133013C01470EB806014E014C01381EB838038078700EA03FEEA00F81539
7EB71D>105 D<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017E
EB07C0ED1FF0ED783801FEEBE0F89039FC01C1FCEC0383EC07070001130ED9F81C13F891
383803F091387001E0000349C7FCEBF1C0EBF38001F7C8FCEA07FEA2EBFFE0EBE7F8380F
E0FEEBC07F6E7E141F001F80D9800F1330A21670003F011F136001001380A216E04815C0
007E1481020F1380158300FE903807870048EB03FE0038EB00F8263B7CB92B>107
D<D803E0017F14FE3D07F801FFE003FFC03D0E3C0781F00F03E03D1C3E1E00F83C01F026
383F38D9FC707F00304914E04A90387DC000007049EB7F8000604991C7FCA200E090C700
FE1301485A017E5CA200000201140301FE5F495CA203031407000160495C180F03075D12
03494A011F13601980030F023F13E00007F000C0495C1901031F023E1380000F1803494A
150061033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E043267EA449>109
D<D803E0137F3A07F801FFE03A0E3C0781F03A1C3E1E00F826383F387F00305B4A137C00
705B00605BA200E090C712FC485A137EA20000140101FE5C5BA2150300015D5B15075E12
0349010F133016C0031F13700007ED80605B17E0EE00C0000F15014915801603EE070000
1FEC0F0E49EB07FC0007C7EA01F02C267EA432>I<3903E001F83907F807FE390E3C1E07
391C3E381F3A183F703F800038EBE07F0030EBC0FF00705B00601500EC007E153CD8E07F
90C7FCEAC07EA2120013FE5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC
21267EA425>114 D<14FF010313C090380F80F090383E00380178131C153C4913FC0001
130113E0A33903F000F06D13007F3801FFE014FC14FF6C14806D13C0011F13E013039038
003FF014071403001E1301127FA24814E0A348EB03C012F800E0EB07800070EB0F006C13
3E001E13F83807FFE0000190C7FC1E267CA427>I<EB01C0497E1307A4130F5CA3131F5C
A3133F91C7FC007FB51280A2B6FCD8007EC7FCA313FE5BA312015BA312035BA312075BA3
120FEBC006A2140E001F130CEB801C141814385C146014E0380F81C038078780D803FEC7
FCEA00F819357EB31E>I<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD8
01C09038383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7
FC1218A2C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD8
7F81143801835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF0
0FFC3907C003F029267EA42F>120 D<13F8D803FE1470D8070F14F8000EEB8001121C12
1800381403003015F0EA701F1260013F130700E0010013E012C05BD8007E130F16C013FE
5B151F000115805BA2153F000315005BA25D157EA315FE5D1401000113033800F8079038
7C1FF8EB3FF9EB0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E00
7C5B00705B6C485A381E07C06CB4C8FCEA01FC25367EA429>I E
/Fh 16 107 df<007FB81280B912C0A26C17803204799641>0 D<EB0380497EA7397803
803C00FC147E00FE14FE397F8383FC393FC387F8390FE38FE03903FBBF803900FFFE00EB
3FF8EB0FE0A2EB3FF8EBFFFE3903FBBF80390FE38FE0393FC387F8397F8383FC39FE0380
FE00FC147E0078143C390007C000A76D5A1F247BA62A>3 D<020FB6128091B712C01303
010F1680D91FF8C9FCEB7F8001FECAFCEA01F8485A485A485A5B48CBFC5A123E123C127C
A2127812F8A25AA77EA21278127CA2123C123E123F7E6C7E7F6C7E6C7E6C7EEA00FEEB7F
80EB1FF86DB71280010316C01300020F158091CAFCAD001FB812804817C0A26C17803242
79B441>18 D<EF0380EF0FC0173FEFFF80933803FE00EE0FF8EE3FE0EEFF80DB03FEC7FC
ED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0ECFF80D903FEC9FCEB0FF8EB3FE0EBFF
80D803FECAFCEA0FF8EA3FE0EAFF8048CBFC6C7EEA7FE0EA0FF8EA03FEC66C7EEB3FE0EB
0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED3FE0ED0FF8ED03FE923800
FF80EE3FE0EE0FF8EE03FE933800FF80EF3FC0170FEF038094C7FCAD007FB81280B912C0
A26C1780324279B441>20 D<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0EB1F
F0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0ED1FF0ED07FCED01FF92
38007FC0EE1FF0EE07FCEE01FF9338007FC0171F177F933801FF80933807FC00EE1FF0EE
7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB
1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAD007FB81280B912C0
A26C1780324279B441>I<D90FF0ED07F0D93FFEED3FFE90B56C91B5FC00036E903903F8
07C02707F07FF0903907C001E0270F801FF890390F8000F090260007FC013EC71270001E
6D6C491438486D6C0178141C00386D6D5A48DA7FC1150E92383FE3E0006091261FF3C014
06EEF78000E0DA0FFF1507486E90C812036F5AA26F7E6F7F707EA24C7E6C4A6D14070060
DBEFF81406ED03CF0070912607C7FC140E92380F83FE6CDB01FF141CDB1E006D133C6C02
3E6D6C13786C4A6D6C13F0000FD901F090381FF8016C6C484890390FFE0FE02703E01FC0
0103B512C0C6B5C76C1400D97FFC9138007FFCD90FE0ED0FF048267BA453>49
D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB7F8001FEC8FCEA01F8485A485A485A
5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16FFA216FE00F0C9FCA27EA21278127C
A27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB1FF06DB512FE010314FF1300021F13
FE283279AD37>I<EE0180EE03C01607A2EE0F80A2EE1F00A2163EA25EA25EA24B5AA24B
5AA24B5A150F5E4BC7FCA2153EA25DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143E
A25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA25B13FC5B485AA2485AA2485A
A2485AA248CAFCA2123EA25AA25AA25A12602A4E75BB00>54 D<0060161800F0163C6C16
7CA200781678007C16F8A2003C16F0003E1501A26CED03E0A26C16C06D1407A200071680
6D140FA26C6CEC1F00A26CB612FEA36C5D01F8C7127CA2017C5CA2013C5C013E1301A201
1E5C011F1303A26D6C485AA201075CECC00FA2010391C7FC6E5AA2903801F03EA2010013
3CECF87CA2EC7878EC7CF8A2EC3FF0A26E5AA36E5AA36E5A6EC8FC2E3C80B92F>56
D<007FB612F0B712F8A27EC91278B3A5003FB612F85AA27EC91278B3A5007FB612F8B7FC
A26C15F0253A7CB92E>I<156015F0A21401EB07F190383FFFE0EB7C1FEBF00748486C5A
D803C07F4848487ED80F007FA248497E001E14BC153C003E143E141FA248EB1E1F143EA2
143CA2147C00FC1580147814F8A214F0A21301A214E01303A214C0A21307A21480A2130F
A214005B007C1500131EA2D87E3E5BA2D83E3C133E137CA21378001F5C13F8000F147849
13F800075C0003495AEBE0033901F007802603FC1FC7FCEBFFFEEBC7F0D807C0C8FCA25B
A26CC9FC21477CBF2A>59 D<0060161800F0163CB3B26C167CA2007C16F8A26CED01F000
3F15036C6CEC07E06C6CEC0FC0D807F0EC3F80D803FE903801FF003A00FFC00FFC6DB55A
011F14E0010391C7FC9038007FF82E347CB137>91 D<EC7FF80103B5FC011F14E0017F14
F89039FFC00FFC3A03FE0001FFD807F09038003F80D80FC0EC0FC04848EC07E048C8EA03
F0003E150148ED00F8A248167CA248163CB3B2006016182E347CB137>I<EC01F8140FEC
3F80ECFC00495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FC
EA7FE0EA03F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF8
14011D537ABD2A>102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A78013
07806D7E6D7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C
133F91C7FC137E485AEA07F0EAFFC000FCC8FC1D537ABD2A>I<126012F0B3B3B3B3A912
60045377BD17>106 D E /Fi 55 125 df<EB01C0497EA6EB0FFC90387FFF8048B512E0
0007804880391FFBEFFC393FC3E1FE903803E07F007E80127C00FC158012F8157FA300FC
EC3F00A2007E91C7FC127FEA3FC313FBEA1FFF6C13FC6C13FF000114C06C6C7F011F13F8
01037F14E7ECE1FEECE07F81001880007E1580150F12FFA312FE151F1600007E5C007F14
3ED83F8313FE9038C3E1FC391FFBEFF86CB55A6C5C6C5CC691C7FCEB1FF8EB03E0A66D5A
21417BB92C>36 D<143814FC13011303EB07F8EB0FF0EB1FC0EB3F80EB7F0013FE485A48
5A5B12075B120F5B485AA2123F90C7FCA25A127EA312FE5AAC7E127EA3127F7EA27F121F
A26C7E7F12077F12037F6C7E6C7E137FEB3F80EB1FC0EB0FF0EB07F8EB03FC1301130014
38164272B92C>40 D<127012FC7E7E6C7E6C7EEA0FE06C7E6C7E6C7E6C7E137F7F148013
1F14C0130FEB07E0A214F01303A214F81301A314FC1300AC130114F8A3130314F0A21307
14E0A2EB0FC0131F1480133F14005B13FE485A485A485A485AEA3FC0485A48C7FC5A5A12
70164279B92C>I<EB0380497EA60020140800F8143E00FE14FE00FF13C1EBC7C7EBE7CF
003FB512F8000F14E0000314806C140038007FFCA248B5FC481480000F14E0003F14F839
FFE7CFFEEBC7C7EB07C100FE13C000F8143E0020140800001400A66D5A1F247AAA2C>I<
147814FCAF007FB612F0B712F8A46C15F0C700FCC7FCAF147825267DAB2C>I<EA0F80EA
1FE0EA3FF0EA7FF8A213FCA3123F121F120F120013F8A21201EA03F01207EA1FE0EA7FC0
EAFF80130012FC12700E17718A2C>I<007FB6FCB71280A46C150021067B9B2C>I<121FEA
3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B708A2C>I<1507ED0F80151FA2153F16
005D157E15FE5D14015D14035DA214075D140F5D141F5D143F92C7FC5C147E14FE5CA213
015C13035C13075C130F5C131F5CA2133F91C8FC5B137E13FE5B12015B12035B12075BA2
120F5B121F5B123F90C9FC5A127E12FE5AA25A127821417BB92C>I<EB03F8EB0FFE9038
3FFF80497F90B57E3901FE0FF03903F803F848486C7EEBE0004848137EA248487FA248C7
EA1F80A2003E140F007E15C0A3007C140700FC15E0AC6C140F007E15C0A46CEC1F80A36C
6CEB3F00A26C6C137E6D13FE00075CEBF0016C6C485A3901FE0FF06CB55A6D5B6D5BD90F
FEC7FCEB03F823357CB32C>I<1307497EA2131FA2133F137F13FF5A1207127FB5FC13DF
139FEA7C1F1200B3AE007FB512E0B612F0A36C14E01C3477B32C>I<EB0FF890387FFF80
48B512E00007804814FC391FF80FFE393FE001FF903880007F48C7EA3F80007E141F00FE
15C0150F6C15E01507A3127E123CC8FCA2150F16C0151F1680153F16005D15FE4A5A1403
4A5A4A5A4A5A4A5AECFF804948C7FC495A495A495AEB3FE0EB7F8049C8FC485A4848EB03
C04848EB07E0EA1FE0485A48B6FCB7FCA36C15C023347CB32C>I<EB0FFC90387FFF8048
B512E0000714F84880391FF807FEEBC0004848137F6D7F1680151FA26C5A6CC7FCC8FC15
3F16005D15FE14014A5AEC1FF890381FFFF0495BA215F86D7F90380007FEEC00FF81ED3F
80ED1FC0150FA216E01507A2123C127EB4FC150F16C0A248141F007FEC3F806DEB7F006C
6C5B391FF807FE6CB55A6C5C6C14E0C66C1380D90FFCC7FC23357CB32C>I<EC07F04A7E
141F143FA2147EA214FCEB01F8A2EB03F0EB07E0A2EB0FC0EB1F80A2EB3F00137EA25B48
5AA2485A5B1207485AA2485A48C7FCA2127E5AB712FC16FEA36C15FCC8EAF800AA91387F
FFF091B512F8A36E13F027347EB32C>I<000FB512FE4880A35D0180C8FCADEB83FE9038
9FFF8090B512E015F8819038FE03FE9038F000FF01C07F49EB3F8090C7121F6C15C0C812
0FA2ED07E0A4123C127EB4FC150F16C0A248141F007EEC3F80007FEC7F006C6C5B6D485A
391FF80FFC6CB55A6C5C000114C06C6C90C7FCEB0FF823347CB22C>I<EC3FC0903801FF
F801077F011F7F497F90387FE07F9039FF003F804848137FEA03F8485A5B000FEC3F0048
48131E4990C7FC123F90C9FCA25A127EEB03FE90381FFF80D8FC7F13E000FDB57EB67E90
38FE07FC9038F001FE9038C0007F49EB3F8090C7121F16C048140F16E01507A3127EA47E
150F6D14C0001F141F6D1480000F143F6DEB7F003907F801FE3903FE07FC6CB55A6C5C6D
5B011F1380D907FCC7FC23357CB32C>I<1278B712C016E0A316C000FCC7EA3F80ED7F00
15FE00785CC712014A5A4A5A5D140F5D4A5A143F92C7FC5C147E14FE5C13015CA2495AA2
13075CA3495AA4495AA5133F91C8FCAA131E23357CB32C>I<EB07FC90383FFF8090B512
E0000314F84880390FFC07FE391FF001FF9038C0007F4848EB3F8090C7121F4815C0007E
140FA56CEC1F80A26C6CEB3F006D5B390FF001FE3903FC07F86CB55A6C6C13C0D907FCC7
FC90387FFFC048B512F03903FC07F8390FF001FE391FC0007F497F48C7EA1F80007EEC0F
C0A248EC07E0A7007EEC0FC0A2007F141F6C6CEB3F806C6CEB7F009038F001FF390FFC07
FE6CB55A6C5CC614E0013F1380D907FCC7FC23357CB32C>I<121FEA3F80EA7FC0EAFFE0
A5EA7FC0EA3F80EA1F00C7FCAE121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B24
70A32C>58 D<EA0F80EA1FC0EA3FE0EA7FF0A5EA3FE0EA1FC0EA0F80C7FCAEEA0F80EA1F
C0EA3FE0127F13F0A4123F121F120F1201120313E01207EA0FC0A2EA3F80EA7F005A5A12
F812700C3071A32C>I<003FB612E04815F0B712F8A36C15F0CAFCA8007FB612F0B712F8
A36C15F06C15E025147DA22C>61 D<127012FC7E6C7E13E06C7EEA1FFC6C7E3803FF80C6
7FEB7FF0EB1FF8EB0FFEEB03FF6D13C06D6C7EEC3FF8EC0FFC6EB4FC0201138080A25C02
071300EC0FFCEC3FF8EC7FE049485A4990C7FCEB0FFEEB1FF8EB7FF0EBFFC000035BD80F
FEC8FC485AEA7FF0485A138048C9FC5A1270212A7BAD2C>I<EB3FFE0003B512C0000F14
F04814FC4880397FE007FF90C7FC00FEEC3F806C141FA3153F007EEC7F00003C5CC7EA03
FEEC0FFC4A5AEC3FE04A5A4AC7FC495A495A5C13075C130F5CA76D5A90C9FCA8EB0380EB
0FE0A2497EA36D5AA2EB038021337BB22C>I<14FE497EA4497FA214EFA2130781A214C7
A2010F7FA314C390381F83F0A590383F01F8A490387E00FCA549137E90B512FEA34880A2
9038F8003FA34848EB1F80A4000715C049130FD87FFEEBFFFC6D5AB514FE6C15FC497E27
347EB32C>65 D<007FB512E015F8B612FE6C8016C03903F0003FED0FE0ED07F01503A2ED
01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15FF16C09039F0001FE0ED07
F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F8150FED3FF0007FB612E016C0
B712806CECFE0015F027337FB22C>I<007FB5FCB612C015F0816C803907E003FEEC00FF
ED7F80153FED1FC0ED0FE0A2150716F0150316F81501A4ED00FCACED01F8A3150316F0A2
150716E0150FED1FC0153FED7F80EDFF00EC03FE007FB55AB65A5D15C06C91C7FC26337E
B22C>68 D<007FB612F0B712F8A37E3903F00001A7ED00F01600A4EC01E04A7EA490B5FC
A5EBF003A46E5A91C8FCA5163C167EA8007FB612FEB7FCA36C15FC27337EB22C>I<387F
FFE0B57EA36C5BD803F0C8FCB3AE16F0ED01F8A8007FB6FCB7FCA36C15F025337DB22C>
76 D<007FB512C0B612F88115FF6C15802603F00013C0153FED0FE0ED07F0A2150316F8
1501A6150316F01507A2ED0FE0ED3FC015FF90B61280160015FC5D15C001F0C8FCB0387F
FF80B57EA36C5B25337EB22C>80 D<90381FF80790B5EA0F804814CF000714FF5A381FF0
1F383FC003497E48C7FC007E147F00FE143F5A151FA46CEC0F00007E91C7FC127F7FEA3F
E0EA1FFCEBFFC06C13FC0003EBFFC06C14F06C6C7F01077F9038007FFEEC07FF02001380
153FED1FC0A2ED0FE0A20078140712FCA56CEC0FC0A26CEC1F806D133F01E0EB7F009038
FE01FF90B55A5D00F914F0D8F83F13C0D8700790C7FC23357CB32C>83
D<387FFFFCB512FEA314FC00FCC7FCB3B3B3B512FC14FEA36C13FC17416FB92C>91
D<387FFFFCB512FEA37EC7127EB3B3B3387FFFFEB5FCA36C13FC17417DB92C>93
D<3801FFF0000713FE001F6D7E15E048809038C01FF81407EC01FC381F80000006C77EC8
127EA3ECFFFE131F90B5FC1203120F48EB807E383FF800EA7FC090C7FC12FE5AA47E007F
14FEEB8003383FE01F6CB612FC6C15FE6C14BF0001EBFE1F3A003FF007FC27247CA32C>
97 D<EA7FF0487EA3127F1201AAEC1FE0ECFFF801FB13FE90B6FC16809138F07FC09138
801FE091380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13
036DEB07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F83900F03FC027
337FB22C>I<903803FFE0011F13F8017F13FE48B5FC48804848C6FCEA0FF0485A49137E
4848131890C9FC5A127EA25AA8127EA2127F6C140F6DEB1F806C7E6D133F6C6CEB7F0039
07FE03FF6CB55A6C5C6C6C5B011F13E0010390C7FC21247AA32C>I<EC0FFE4A7EA380EC
003FAAEB07F8EB3FFE90B512BF4814FF5A3807FC0F380FF00348487E497E48487F90C7FC
007E80A212FE5AA87E007E5CA2007F5C6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CEC
BFFE6C143FEB3FFC90390FF01FFC27337DB22C>I<EB03FE90381FFFC0017F13F048B57E
48803907FE03FE390FF800FFD81FE0EB3F805B4848EB1FC090C7120F5A007E15E015075A
B7FCA416C000FCC9FC7E127EA2127F6CEC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001
FF13FF000190B512806C1500013F13FC010F13F00101138023247CA32C>I<EC0FF8EC3F
FE91B5FC4914805B903807FC7F14F090390FE03F0014C092C7FCA6007FB512FEB7FCA36C
5C26000FC0C7FCB3A8003FB512F04880A36C5C21337DB22C>I<ED03F8903907F80FFC90
391FFE3FFE017FB6FC48B7FC48ECFE7F9038FC0FF82607F003133E3A0FE001FC1CD9C000
1300001F8049137EA66D13FE000F5CEBE0016C6C485A3903FC0FF048B5FC5D481480D99F
FEC7FCEB87F80180C8FCA37F6C7E90B512F06C14FE48ECFF804815E04815F03A3FC0001F
F848C7EA03FC007E1400007C157C00FC157E48153EA46C157E007E15FCD87F801303D83F
E0EB0FF8D81FFCEB7FF06CB612E0000315806C1500D8003F13F8010713C028387EA42C>
I<EA7FF0487EA3127F1201AAEC1FE0EC7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC0
1F02807FEC000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029337FB22C>I<
1307EB1FC0A2497EA36D5AA20107C7FC90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007F
B512FCB612FEA36C14FC1F3479B32C>I<EA7FE0487EA3127F1201AA91381FFFF04A13F8
A36E13F0913800FE004A5A4A5A4A5A4A5A4A5A4A5A4AC7FC14FEEBF1FC13F3EBF7FE90B5
FCA2EC9F80EC0FC001FE7FEBFC07496C7E496C7E811400157E811680151F3A7FFFC0FFFC
B500E113FEA36C01C013FC27337EB22C>107 D<387FFFE0B57EA37EEA0003B3B3A5007F
B61280B712C0A36C158022337BB22C>I<3A7F83F007E09039CFFC1FF83AFFDFFE3FFCD8
7FFF13FF91B57E3A07FE1FFC3E01FCEBF83F496C487E01F013E001E013C0A301C01380B3
3B7FFC3FF87FF0027F13FFD8FFFE6D13F8D87FFC4913F0023F137F2D2481A32C>I<397F
F01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC000F5B
5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C>I<EB07FCEB1FFF017F
13C048B512F048803907FC07FC390FF001FE48486C7E0180133F003F158090C7121F007E
EC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F6C6CEB7F006D5B6C6C
485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247CA32C>I<397FF01FE0
39FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE091380007F049EB03F8
5BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE0
9138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387FFFE0B57EA36C5B2736
7FA32C>I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39003F7FE1ECFF019138
FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C5C26247EA32C>114
D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015AA36CEB00F0007F1400
13F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB0007EC00FE0078147F00
FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815E000F8148039701FFC
0020247AA32C>I<131E133FA9007FB6FCB71280A36C1500D8003FC8FCB1ED03C0ED07E0
A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F89038003FE0232E7EAD2C>I<
3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D137F3900FE03FF90B7
FC6D15807F6D13CF902603FE07130029247FA32C>I<3A3FFF03FFF048018713F8A36C01
0313F03A00FC007E005D90387E01F8013F5BEB1F83EC87E090380FCFC0903807EF80EB03
FF6D90C7FC5C6D5A147C14FE130180903803EF80903807CFC0EB0FC7EC83E090381F01F0
013F7FEB7E00017C137C49137E0001803A7FFF01FFFC1483B514FE6C15FC140127247EA3
2C>120 D<3A7FFF01FFFCB5008113FE148314816C010113FC3A03E0000F806C7E151F6D
140012005D6D133E137C017E137E013E137CA2013F13FC6D5BA2EB0F815DA2EB07C1ECC3
E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A2143EA2147E147CA214FC5CA2EA0C
01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC6C5A6C5AEA07E027367EA32C>
I<003FB612E04815F0A4007EC7EA1FE0ED3FC0ED7F80EDFF004A5A003C495AC7485A4A5A
4A5A4A5A4A5A4AC7FCEB01FC495AEB0FF0495A495A495A49C8FC4848EB01E04848EB03F0
485A485A485A485A485AB7FCA46C15E024247DA32C>I<127812FCB3B3B3A9127806416D
B92C>124 D E /Fj 40 122 df<913803FFC0027F13F00103B512FC010FEB00FED93FF8
133FD97FE0EBFF8049485A5A1480484A13C04A6C1380A36F1300167E93C7FCA592383FFF
C0B8FCA4000390C7FCB3ABB5D8FC3F13FFA4303A7EB935>12 D<913903FFC7C0027F13FF
0103B6FC010F130090383FF80190387FE003EBFFC05A14805A4A7EA281A9B8FCA4000390
C7FCB3ABB5D8FC3F13FFA4303A7EB935>I<141C143C14F8EB01F0EB03E01307EB0FC0EB
1F8014005B137E13FE5B12015B1203A2485AA2120F5B121FA25B123FA4485AA512FFB112
7FA56C7EA4121F7FA2120F7F1207A26C7EA212017F12007F137E7F7F1480EB0FC0EB07E0
1303EB01F0EB00F8143C141C165377BD25>40 D<12E07E127C7E7E7F6C7E6C7E12037F6C
7E7F12007F137E137FA2EB3F80A214C0131F14E0A2130F14F0A4EB07F8A514FCB114F8A5
EB0FF0A414E0131FA214C0133F1480A2EB7F00A2137E13FE5B12015B485A5B1207485A48
5A90C7FC123E5A12F05A16537BBD25>I<B61280A819087F9620>45
D<49B4FC010F13E0017F13FC9038FF83FE4848C67E4848EB7F804848EB3FC04848EB1FE0
A2001F15F0A24848EB0FF8A3007F15FCA500FF15FEB3007F15FCA4003F15F8A26D131F00
1F15F0A2000F15E06D133F000715C06C6CEB7F806C6CEBFF003900FF83FE6DB45A011F13
F0010190C7FC27387CB630>48 D<141E143E14FE1307133FB5FCA313CFEA000FB3B3A600
7FB61280A4213779B630>I<EB0FFC90387FFFC048B512F0000714FC390FF03FFF261F80
0F1380263F000313C05AD9C00113E0486C6C13F07FA2ED7FF8A46C5A6C5A000FC7FCC8FC
EDFFF0A216E05C16C04A138016004A5A5D4A5A4A5A4A5AEC7F8092C7FC14FEEB01F84948
1378495A495A495A013EC712F84914F05B4848130148B6FCA25A5A5A5A4815E0B7FCA425
377BB630>I<EB03FF011F13F0017F13FC3901FC07FF2603F003138048486C13C0496C13
E0EA0FF001FC14F0121F7FA56C4814E0A23803F001C714C04A138016004A5A4A5AEC3FF0
90380FFFC092C7FC15F090380007FE913801FF806E13C016E0ED7FF016F816FC153FA216
FEEA1FC0487E487E487EA416FCA249EB7FF8127F01C0EBFFF06C4814E06C6C4813C0260F
FC0713806CB61200000114FC6C6C13F0010790C7FC27387CB630>I<ED07C0150FA2151F
153F157F15FFA25C5C5C5CA2141E5C147C5C5C495A495A1307495A5C131E5B137C5B5B48
5A485A1207485A90C7FC121E5A127C5AB81280A4C70001EBC000AA0103B61280A429377D
B630>I<001C15C0D81F80130701F8137F90B61280A216005D5D15F05D15804AC7FC14F0
90C9FCA8EB07FE90383FFFE090B512F89038FC07FC9038E003FFD98001138090C713C012
0EC813E0157F16F0A216F8A21206EA3F80EA7FE012FF7FA44914F0A26C4813FF90C713E0
007C15C06C5B6C491380D9C0071300390FF01FFE6CB512F8000114E06C6C1380D90FF8C7
FC25387BB630>I<EA0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F80C7FCABEA
0F80EA3FE0EA7FF0A2EAFFF8A5EA7FF0A2EA3FE0EA0F800D2579A41B>58
D<ED03E04B7EA24B7EA34B7EA24B7EA34B7EA292B57EA34A8015F302038015E1A2020780
15C0020F80ED807FA2021F80ED003F4A80023E131FA2027E80027C7F02FC814A7FA20101
824A7F49B77EA3498202C0C7FC010F824A147FA2011F8291C8123F4982013E151FA2017E
82017C8101FE83B500F80107B61280A4413A7DB948>65 D<B812C017FC17FF18C028007F
F000037F04007F717E717E171F84A2717EA74D5AA260173F4D5A4D5A4C13C0040F5B91B6
00FCC7FCA2EFFF8002F0C713F0EF3FF8717E717E717E19807113C0A319E0A719C0A25F4D
138019005FEF7FFE4C485AB912F018C095C7FC17F03B397DB844>I<B87E17F817FF18C0
28007FF8000713F09338007FF8EF1FFE717E050313807113C0A27113E0F07FF0A2F03FF8
A219FC181FA219FEA419FFAC19FEA419FC183FA219F8187F19F0F0FFE0A24D13C04D1380
4D1300EF1FFEEF7FFC933807FFF0B912C095C7FC17FC178040397DB849>68
D<B612FCA439007FF800B3B3ADB612FCA41E397DB824>73 D<B7FCA426007FF8C9FCB3AC
EF0780A5170F1800A35FA25FA25F5F5E5EEE0FFE167FB8FCA431397DB839>76
D<B500F80403B512F06E5EA26E5ED8007FF1E000A2D97BFF161EA201796D5DA201786D5D
A26E6C5DA36E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C4A5AA26E6C141EA36E6D5BA26E6D
5BA26F6C5BA26F6C485AA36F6C485AA26F6C485AA26F6C48C7FCA2923803FF1EA36F13BC
A26F13F8A2705AA2705AA213FCB500FC6D4848B612F0A2EE0F80EE070054397DB85B>I<
B500FC0203B512F0A28080C66C6D90390003F0006F6E5A81017B7F13798101787F6E7E6E
7E6E7F6E7FA26E7F6E7F6E7F6E7F6F7E153F826F13806F13C06F13E06F13F06F13F88117
FCEE7FFEEE3FFF7013817013C17013E18218F17013F97013FDEF7FFF8383A28383838383
187FA2183F181F01FC160FB500FC150718031801A244397DB84B>I<B8FC17F017FEEFFF
8028007FF8000F13C0040113E07013F0EF7FF8EF3FFCA2EF1FFEA218FFA818FEA2EF3FFC
A2EF7FF8EFFFF04C13E0040F13C091B7120017FC17E002F8C9FCB3A4B612FCA438397DB8
41>80 D<B712FCEEFFE017FC17FF28007FF8000F13C004017F707F717E717EA2717EA284
A760A24D5A604D5A4D5A04035B041F90C8FC91B612FC17E0839139F8003FFCEE0FFF707F
707F8284A2707FA584A51A601AF084177F1901DD3FFE13E0B600FC011F130394390FFF87
C071EBFF8005011400CBEA1FFC443A7DB848>82 D<003FB91280A4D9F800EBF003D87FC0
9238007FC049161F007EC7150FA2007C1707A200781703A400F818E0481701A4C892C7FC
B3AE010FB7FCA43B387DB742>84 D<007FB5D8F803B512F8A4C66C48C7D80FF0C7FC6D6C
5D6D5E6F495A6D6D49C8FC7F6D6D137E6F5B6DEBF8016D5D6F485A6E6C485A023F130FDA
1FFF5BEE9F806E01FFC9FC805E6E5B6E5B80826F7E153F826F7F5D4B7F92B57EA2DA01F9
7FDA03F17F03F07F913807E07FDA0FC07F021F6D7E4B7E4A486C7F027E8102FE6D7F4A7F
49488149486D7F0107804A6E7E49488149486E7E013F81017F83B60107B61280A441397D
B848>88 D<EB3FFE0003B512E0000F14F8391FF00FFE003FEB03FF6D6C7F6E7FA26F7EA2
6C5A6C5AEA0380C8FCA2EC3FFF010FB5FC137F3901FFF87F00071380380FFE00EA3FF85B
485A12FF5BA415FF6D5A127F263FF00713F83B1FFC1FBFFFC0390FFFFE1F0003EBF80F39
003FE0032A257DA42E>97 D<13FFB5FCA412077EAF4AB47E020F13F0023F13FC9138FE03
FFDAF00013804AEB7FC00280EB3FE091C713F0EE1FF8A217FC160FA217FEAA17FCA3EE1F
F8A217F06E133F6EEB7FE06E14C0903AFDF001FF80903AF8FC07FE009039F03FFFF8D9E0
0F13E0D9C00390C7FC2F3A7EB935>I<EE7F80ED7FFFA4150381AF903801FF81010F13F1
013F13FD9038FFC07F0003EB001FD807FC1307000F8048487F5B123FA2485AA312FFAA12
7FA27F123FA26C6C5B000F5C6C6C5B6C6C4913C02701FF80FD13FE39007FFFF9011F13E1
010313012F3A7DB935>100 D<903803FF80011F13F0017F13FC3901FF83FE3A03FE007F
804848133F484814C0001FEC1FE05B003FEC0FF0A2485A16F8150712FFA290B6FCA301E0
C8FCA4127FA36C7E1678121F6C6C14F86D14F000071403D801FFEB0FE06C9038C07FC06D
B51200010F13FC010113E025257DA42C>I<EC1FF0903801FFFC010713FF90391FF87F80
90383FE0FFD9FFC113C0A2481381A24813016E1380A2ED3E0092C7FCA8B6FCA4000390C8
FCB3ABB512FEA4223A7DB91D>I<161FD907FEEBFFC090387FFFE348B6EAEFE02607FE07
138F260FF801131F48486C138F003F15CF4990387FC7C0EEC000007F81A6003F5DA26D13
FF001F5D6C6C4890C7FC3907FE07FE48B512F86D13E0261E07FEC8FC90CAFCA2123E123F
7F6C7E90B512F8EDFF8016E06C15F86C816C815A001F81393FC0000F48C8138048157F5A
163FA36C157F6C16006D5C6C6C495AD81FF0EB07FCD807FEEB3FF00001B612C06C6C91C7
FC010713F02B377DA530>I<13FFB5FCA412077EAFED7FC0913803FFF8020F13FE91381F
03FFDA3C01138014784A7E4A14C05CA25CA291C7FCB3A3B5D8FC3F13FFA4303A7DB935>
I<EA01F0EA07FC487EA2487EA56C5AA26C5AEA01F0C8FCA913FF127FA412077EB3A9B512
F8A4153B7DBA1B>I<13FFB5FCA412077EB3B3ACB512FCA4163A7DB91B>108
D<01FEEB7FC000FF903803FFF8020F13FE91381F03FFDA3C011380000713780003497E6D
4814C05CA25CA291C7FCB3A3B5D8FC3F13FFA430257DA435>110
D<903801FFC0010F13F8017F13FFD9FF807F3A03FE003FE048486D7E48486D7E48486D7E
A2003F81491303007F81A300FF1680A9007F1600A3003F5D6D1307001F5DA26C6C495A6C
6C495A6C6C495A6C6C6CB45A6C6CB5C7FC011F13FC010113C029257DA430>I<9039FF01
FF80B5000F13F0023F13FC9138FE07FFDAF00113800003496C13C00280EB7FE091C713F0
EE3FF8A2EE1FFCA3EE0FFEAA17FC161FA217F8163F17F06E137F6E14E06EEBFFC0DAF003
13809139FC07FE0091383FFFF8020F13E0020390C7FC91C9FCACB512FCA42F357EA435>
I<9038FE03F000FFEB0FFEEC3FFF91387C7F809138F8FFC000075B6C6C5A5CA29138807F
80ED3F00150C92C7FC91C8FCB3A2B512FEA422257EA427>114 D<90383FF0383903FFFE
F8000F13FF381FC00F383F0003007E1301007C130012FC15787E7E6D130013FCEBFFE06C
13FCECFF806C14C06C14F06C14F81203C614FC131F9038007FFE140700F0130114007E15
7E7E157C6C14FC6C14F8EB80019038F007F090B512C000F8140038E01FF81F257DA426>
I<130FA55BA45BA25B5BA25A1207001FEBFFE0B6FCA3000390C7FCB21578A815F86CEB80
F014816CEBC3E090383FFFC06D1380903803FE001D357EB425>I<01FFEC3FC0B5EB3FFF
A4000714016C80B3A35DA25DA26C5C6E4813E06CD9C03E13FF90387FFFFC011F13F00103
138030257DA435>I<B539F001FFF8A4000390C7EA3F00161E6E133E6C153C6E137C6C15
786E13F8017F5CECF001013F5C14F8011F495AA2ECFC07010F5CECFE0F010791C7FC6E5A
6D131E15BE6D13BC15FC6D5BA36E5AA26E5AA26E5AA26E5AA292C8FCA25C141E003F133E
387F803C38FFC07C147814F8EBC1F0EBC3E06C485A387D1F80D83FFFC9FCEA1FFCEA07F0
2D357EA432>121 D E /Fk 27 121 df<123C127EB4FCA21380A2127F123D1201A31203
1300A25A1206120E5A5A5A126009157A8714>44 D<B512C0A412047F9018>I<123C127E
12FFA4127E123C08087A8714>I<B712FCA23903F800030001EC007C163E161E160EA216
06A3160716031518A21600A31538157815F890B5FCA2EBF800157815381518A592C7FCAB
487EB512F8A2282D7EAC2E>70 D<007FB712F8A29039000FC003007C150000701638A200
601618A200E0161CA248160CA5C71500B3A94A7E011FB512E0A22E2D7EAC33>84
D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF137F3801
FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF8C391F
83C7FC390FFF03F83901FC01E01F207D9E23>97 D<EA07C012FFA2120F1207AC14FE9038
C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16C0A9ED1F
80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FCC7FC222F
7EAD27>I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A003EEB0F00
007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007003801F0
3E38007FF8EB1FC01A207E9E1F>I<15F8141FA214011400ACEB0FE0EB7FF83801F81E38
03E0073807C003380F8001EA1F00481300123E127EA25AA9127C127EA2003E13017EEB80
03000F13073903E00EFC3A01F03CFFC038007FF090391FC0F800222F7EAD27>I<EB1F80
EBFFF03803E0783807C03E380F801E381F001FEC0F80123E007E130715C0127C12FCA3B6
FCA200FCC8FCA5127EA2003E14C0123F6C1301390F80038001C013003803E00F3801F03C
38007FF8EB1FC01A207E9E1F>I<EB03F0EB0FFCEB3E1EEB7C3F13F8EA01F0A23803E00C
1400AAB512E0A23803E000B3A6487E387FFF80A2182F7FAE16>I<013F13F89038FFC3FE
3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C133EA26C6C5A00071378380F
E1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814FF6C14C04814F0391E0007F8
48130048147C12F848143CA46C147C007C14F86CEB01F06CEB03E03907E01F803901FFFE
0038003FF01F2D7E9D23>I<EA07C012FFA2120F1207AC14FE9038C3FF809038C703E090
38DE01F013F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2222E7EAD27>I<EA0780EA
0FC0EA1FE0A4EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E
7EAD14>I<EA07C012FFA2120F1207ADEC1FFEA2EC0FF0EC07C05D020EC7FC5C5C5C5CEB
C3C013C7EBCFE0EBDFF013F9EBF0F8497EEBC07E143E80816E7E14076E7E816E7E486C48
7E3AFFFE07FF80A2212E7EAD25>107 D<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFE
A20F2E7EAD14>I<2607C07FEB07F03BFFC3FFC03FFC903AC783F0783F3C0FCE01F8E01F
803B07DC00F9C00F01F8D9FF8013C04990387F000749137EA249137CB2486C01FEEB0FE0
3CFFFE0FFFE0FFFEA2371E7E9D3C>I<3807C0FE39FFC3FF809038C703E0390FDE01F0EA
07F8496C7EA25BA25BB2486C487E3AFFFE1FFFC0A2221E7E9D27>I<EB1FE0EB7FF83801
F03E3803C00F3907800780390F0003C04814E0003EEB01F0A248EB00F8A300FC14FCA900
7C14F8A26CEB01F0A26CEB03E0A2390F8007C03907C00F803901F03E0038007FF8EB1FE0
1E207E9E23>I<3807C0FE39FFC7FF809038CF03E0390FDC01F03907F800FC49137E4913
3E49133FED1F80A3ED0FC0A8151F1680A2ED3F00A26D137E6D137C5D9038FC01F09038CE
07E09038C7FF80D9C1FCC7FC01C0C8FCA9487EEAFFFEA2222B7E9D27>I<380781F838FF
87FEEB8E3FEA0F9CEA07B813B0EBF01EEBE000A45BB0487EB5FCA2181E7E9D1C>114
D<3801FE183807FFB8381E01F8EA3C00481378481338A21418A27E7EB41300EA7FF06CB4
FC6C13C06C13F0000113F838001FFC130138C0007E143EA26C131EA27EA26C133CA26C13
7838FF01F038E3FFC000C0130017207E9E1C>I<1360A413E0A312011203A21207121FB5
12F0A23803E000AF1418A714383801F03014703800F860EB3FE0EB0F80152A7FA81B>I<
D807C013F800FF131FA2000F130100071300B21401A314033803E007EC0EFC3A01F81CFF
C038007FF890391FE0F800221F7E9D27>I<3AFFFC01FFC0A23A0FE0007E000007147C15
380003143015706C6C1360A26C6C5BA390387C0180A26D48C7FCA2EB3F07EB1F06A2EB0F
8CA214DCEB07D8A2EB03F0A36D5AA26D5A221E7F9C25>I<3BFFFC3FFE07FFA23B0FE003
F001F801C09038E000F00007010114E0812603E00314C0A2913807F8012701F006781380
A29039F80E7C030000D90C3C1300A290397C181E06A2151F6D486C5AA2168C90391F6007
98A216D890390FC003F0A36D486C5AA36DC75A301E7F9C33>I<3AFFFC07FF80A23A0FF0
03FC000003EB01F0000114C06D485A000091C7FCEB7C06EB3E0E6D5A14B8EB0FB0EB07E0
13036D7E497E1307EB067C497EEB1C1F01387FEB700F496C7E6E7ED803C07F00076D7E39
1FE003FC3AFFF007FFC0A2221D7F9C25>I E /Fl 2 51 df<13E01201120712FF12F912
01B3A7487EB512C0A212217AA01E>49 D<EA01FC3807FF80381C0FC0383003E0386001F0
EB00F812F86C13FCA2147C1278003013FCC7FC14F8A2EB01F0EB03E014C0EB0780EB0F00
131E13385B5B3801C00CEA0380380600185A5A383FFFF85AB512F0A216217CA01E>I
E /Fm 62 122 df<04FFEB03F003039038E00FFC923A0FC0F01F1E923A3F00783E0F923A
7E01F87C3FDB7C03EBFC7F03FC14F8DA01F813F905F1137EDC01E1133C913B03F00003F0
00A314074B130760A3140F4B130F60A3010FB812C0A3903C001F80001F8000A3023F143F
92C790C7FCA44A5C027E147EA402FE14FE4A5CA413014A13015FA313034A13035FA31307
4A495AA44948495AA44948495AA3001CD9038090C8FC007E90380FC03F013E143E00FE01
1F5B133C017C5C3AF8780F01E0D878F0EB07C0273FE003FFC9FC390F8000FC404C82BA33
>11 D<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B1307A24A
5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F80007EA217FE
023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1C0A2161F
1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7FCA35C13
1FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82BA2F>I<
EE7FE0923903FFFC7E92380FC03E92381F000F033EEB3FFE4B137F03FC14FC5D1401173D
4A48EB01F8A21703A24A4814F0A21707A2020F15E05D170FA218C0010FB7FCA3903B001F
80001F80A2173F143F92C71300A25FA24A147E147E17FEA25F14FE4A1301A25FA2010114
035CEFF070A21607010316F04AECE0E0A3EFE1C013074A14C3933803E380EE01E7933800
FF004948143C94C7FCA3495AA3001C90CAFC127E133E12FE133C137CEAF878EA78F0EA3F
E0EA0F80374C82BA31>I<3901E003C03907F00FE0000F131F01F813F0001F133FA3000F
131F3907B00F6038003000A2017013E0016013C0EBE00101C01380000113030180130000
035B3807000E000E5B485B485B485B48485A00C05B1C1971B92B>34
D<EA01E0EA07F0120F13F8121FA3120FEA07B0EA0030A21370136013E013C01201138012
03EA0700120E5A5A5A5A5A0D196EB919>39 D<150C151C153815F0EC01E0EC03C0EC0780
EC0F00141E5C147C5C5C495A1303495A5C130F49C7FCA2133EA25BA25BA2485AA212035B
12075BA2120F5BA2121FA290C8FCA25AA2123EA2127EA2127CA412FC5AAD1278A57EA312
1C121EA2120E7EA26C7E6C7EA212001E5274BD22>I<140C140E80EC0380A2EC01C015E0
A2140015F0A21578A4157C153CAB157CA715FCA215F8A21401A215F0A21403A215E0A214
07A215C0140F1580A2141F1500A2143EA25CA25CA2495AA2495A5C1307495A91C7FC5B13
3E133C5B5B485A12035B48C8FC120E5A12785A12C01E527FBD22>I<EA03C0EA07F0120F
121F13F8A313F0EA07B0EA003013701360A213E013C01201EA038013005A120E5A5A5A5A
5A0D197A8819>44 D<387FFFF8A2B5FCA214F0150579941E>I<120EEA3F80127F12FFA3
1300127E123C0909778819>I<15181538157815F0140114031407EC0FE0141F147FEB03
FF90383FEFC0148FEB1C1F13001580A2143FA21500A25CA2147EA214FEA25CA21301A25C
A21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA291C7FC497EB61280A31D3877
B72A>49 D<EC03F8EC0FFE91383C0F809138F007C0903901E003E0D903C013F090380780
01020013F8130E131E90391C6000FCEB3870EC30011370A213F013E0EC70030001016013
F813C014E0ECC00701C114F0903881800F018314E09039C7001FC001FEEB3F80D8007814
0090C7127E5D4A5A4A5AEC07C0EC1F80023EC7FC14FCEB01F0EB07C0495A011EC8FC137C
4914C0484813015B485A4848130348C71380000E1407001E140F48EC1F00D83FF85B397F
FFC07E39783FFFFCEA700FD8F0075BD8E0015B6D13C0021FC7FC263A79B72A>I<EC03FC
EC1FFF91387E07C09138F003E0903903C001F0D9078013F849C7FC131E011C14FC133CEB
38C0EB78E0EB7060150101F014F813E0A2ECE003D971C013F090387F8007D91E0013E090
C7EA0FC0ED1F80ED3F00157E5D49B45A4913E092C7FC9038000FC0EC03F014016E7E81A3
81A5007E130100FE5CA31403485C00E05C14074A5A5D4A5A007049C7FC0078137E6C13F8
381E07F03807FF80D801FCC8FC263A78B72A>I<16E0ED01F01503A3150716E0A3150F16
C0A2151F1680A2ED3F00A3157EA2157C15FC5D14015D14035D14075D140F5D141F92C7FC
143EA25CECF81C153E903801F07EEB03E014C090380780FE130F49485A133EEB7C011378
01F05BEA01E03803C003EA0FFE391FFFC3F04813FB267C01FF13403AF0003FFFE0006013
07C71400EC0FE05DA3141F5DA3143F92C7FCA4143E141C24487DB72A>I<010314186E13
F8903907F007F091B512E016C01600495B15F8010E13E0020CC7FC011EC8FC131CA3133C
1338A313781370A2147F9038F3FFC09038EF83E09038FC01F0496C7E485A497F49137CC8
FC157EA315FEA41401000C5C123F5A1403485C5A4A5A12F800E05C140F4A5A5D6C49C7FC
0070137E00785B387C01F8383E07F0381FFFC06C90C8FCEA01F8253A77B72A>I<157F91
3803FFC0020F13E0EC3F8191387E00F002F81370903903F003F0903807E007EB0FC0EB1F
80020013E04914C0017E90C7FC13FE5B485AA21203485AA2380FE07E9038E3FF809038E7
83E0391FCE01F09038DC00F813F84848137C5B49137EA2485AA290C7FC15FE5A5AA21401
5D5AA214035DA348495A5D140F5D4A5A6C49C7FC127C147C6C485A6C485A6CB45A6C1380
D801FCC8FC243A76B72A>I<D9707C130ED9F3FE131E496C133C48B5133816784815F0EC
0F019039FC0703E03A07F00307C001E0138F3A0FC001FF80497E48C7EA0F00001E5C4814
1E153E48143C157C485C5A4A5AC7FC4A5AA24A5A140FA24A5AA24AC7FCA25C147E14FE5C
1301A25C1303A2495AA3130F5CA2131F5CA2133FA25C137FA391C8FC137E133C273A74B7
2A>I<133C137E13FF5AA313FE13FCEA00701300B2120EEA3F80127F12FFA31300127E12
3C102477A319>58 D<EE01C01603A21607160FA2161F83163FA2167F16FF16EF150116CF
ED038FA2ED070FA2150E151E151C1538A203707FA2EDE007A2EC01C014031580EC0700A2
140EA25CA25C027FB5FCA291B6FC9139E00007F849481303A2495A130791C7FC5B130E5B
A25B1378137013F0EA03F8486C4A7EB56C48B512F0A3343C7BBB3E>65
D<DB03FE130E92393FFF801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC
4AC7EA1FF802FE140FEB03FC49481407494815F049481403495A5C49C813E05B485A5B00
0317C0485AA2485A1880485A94C7FCA2485AA3127F5BA312FF90CBFCA41738A217784816
707E17F06C5E16015F16036C6C4A5A94C7FC001F150E6D141E000F5D6D5C6C6C495A6C6C
EB03C0D801FEEB0F8027007F807EC8FC6DB45A010F13E0010090C9FC373D74BA3B>67
D<0103B612FEEFFFC018F0903B0007F8000FF84BEB03FCEF00FE020F157FF03F804B141F
19C0021F150F19E05D1807143F19F05DA2147FA292C8FCA25C180F5CA2130119E04A151F
A2130319C04A153FA201071780187F4A1600A2010F16FEA24A4A5A60011F15034D5A4A5D
4D5A013F4B5A173F4A4AC7FC17FC017FEC03F84C5A91C7EA1FC04949B45A007F90B548C8
FCB712F016803C397CB83F>I<0107B8FCA3903A000FF000034BEB007F183E141F181E5D
A2143FA25D181C147FA29238000380A24A130718004A91C7FC5E13015E4A133E167E49B5
12FEA25EECF8000107147C163C4A1338A2010F147818E04A13701701011F16C016004A14
031880013F150718004A5CA2017F151E173E91C8123C177C4915FC4C5A4914070001ED7F
F0B8FCA25F38397BB838>I<0107B712FEA3903A000FF000074B1300187C021F153CA25D
A2143FA25D1838147FA292C8FCEE03804A130718004A91C7FCA201015CA24A131E163E01
0314FE91B5FC5EA2903807F800167C4A1378A2130FA24A1370A2011F14F0A24A90C8FCA2
133FA25CA2137FA291CAFCA25BA25B487EB6FCA337397BB836>I<DB03FE130E92393FFF
801E92B5EAE03C913903FE01F0913A0FF000787CDA3FC0EB3CFC4AC7EA1FF802FE140FEB
03FC49481407494815F049481403495A5C49C813E05B485A5B000317C0485AA2485A1880
485A94C7FCA2485AA3127F5BA312FF90CBFC0307B512E0A392390007FC00705A16075FA3
6C150F5FA36C6C141FA2001F5E6D143F6C7E167F6C6C4A5A6C6CEB03EFD801FEEB07C73A
007FC03F0790273FFFFC03C7FC010F01F0C8FC01001380373D74BA40>I<0103B512F8A3
90390007F8005DA2140FA25DA2141FA25DA2143FA25DA2147FA292C7FCA25CA25CA21301
A25CA21303A25CA21307A25CA2130FA25CA2131FA25CA2133FA25CA2137FA291C8FC497E
B6FCA25C25397CB820>73 D<0207B512F0A391390007FC006F5AA215075EA3150F5EA315
1F5EA3153F5EA3157F93C7FCA35D5DA314015DA314035DA31407A25DA2140FA2003F5C5A
141F485CA24A5A12FC00E049C8FC14FE00705B495A6C485A381E0FC06CB4C9FCEA01F82C
3B78B82C>I<0107B512FCA25E9026000FF8C7FC5D5D141FA25DA2143FA25DA2147FA292
C8FCA25CA25CA21301A25CA21303A25CA21307A25CA2130F170C4A141CA2011F153C1738
4A1478A2013F157017F04A14E01601017F140317C091C71207160F49EC1F80163F4914FF
000102071300B8FCA25E2E397BB834>76 D<902607FFF8923807FFF0614F13E0D9000FEF
F0004F5AA2021F167FF1EFC0141DDA1CFCEC01CF023C16DF9538039F800238ED071FA202
78ED0E3F97C7FC0270151CA202F04B5AF0707E14E0037E14E0010117FE4D485A02C0EC03
80A20103ED0701610280140EA20107ED1C0305385B14006F137049160705E05B010EEC01
C0A2011E913803800F61011CEC0700A2013C020E131F4C5C1338ED1FB80178163F04F091
C8FC01705CA201F04A5B187E00015DD807F816FEB500C09039007FFFFC151E150E4C397A
B84A>I<902603FFF891B512E0A281D90007923807F8006F6E5A61020F5E81DA0E7F5DA2
021E6D1307033F92C7FC141C82DA3C1F5C70130EEC380FA202786D131E0307141C147082
DAF003143C70133814E0150101016E1378030014705C8201036E13F0604A1480163F0107
15C1041F5B91C7FC17E149EC0FE360010E15F31607011E15FF95C8FC011C80A2013C805F
1338160013785F01F8157CEA03FC267FFFE0143CB51538A243397CB83E>I<ED03FE9238
3FFFC09238FC07F0913903E001F891390F80007C023FC77E027E8002F815804948EC0FC0
EB07E04948EC07E0131F4A15F049C81203137E01FE16F8485AA2485AA2485AA2120F5B00
1F16075B123FA34848ED0FF0A448C9EA1FE0A3EF3FC0A21880177F18005F5F16015F6C4B
5A4C5AA24C5A6C4B5A6D4A5A001F93C7FC6D147E000F5D6C6CEB03F06C6C495A6C6CEB0F
806C6C013FC8FC90383F01FC90381FFFE0010190C9FC353D74BA40>I<0107B612F817FF
1880903B000FF0003FE04BEB0FF0EF03F8141FEF01FC5DA2023F15FEA25DA2147FEF03FC
92C7FCA24A15F817074A15F0EF0FE01301EF1FC04AEC3F80EFFE0001034A5AEE0FF091B6
12C04CC7FCD907F8C9FCA25CA2130FA25CA2131FA25CA2133FA25CA2137FA291CAFCA25B
A25B1201B512FCA337397BB838>I<0103B612F017FEEFFF80903B0007F8003FC04BEB0F
F01707020FEC03F8EF01FC5DA2021F15FEA25DA2143FEF03FC5DA2027FEC07F818F092C7
120F18E04AEC1FC0EF3F004A14FEEE01F80101EC0FE091B6128004FCC7FC9138FC003F01
03EC0F80834A6D7E8301071403A25C83010F14075F5CA2011F140FA25CA2133F161F4AEC
E007A2017F160F180E91C7FC49020F131C007F01FE153CB5913807F078040313F0CAEAFF
E0EF3F80383B7CB83D>82 D<92383FC00E913901FFF01C020713FC91391FC07E3C91393F
001F7C027CEB0FF84A130749481303495A4948EB01F0A2495AA2011F15E091C7FCA34915
C0A36E90C7FCA2806D7E14FCECFF806D13F015FE6D6D7E6D14E0010080023F7F14079138
007FFC150F15031501A21500A2167C120EA3001E15FC5EA3003E4A5AA24B5AA2007F4A5A
4B5A6D49C7FC6D133ED8F9F013FC39F8FC03F839F07FFFE0D8E01F138026C003FCC8FC2F
3D7ABA2F>I<0007B812E0A25AD9F800EB001F01C049EB07C0485AD900011403121E001C
5C003C17801403123800785C00701607140700F01700485CA2140FC792C7FC5DA2141FA2
5DA2143FA25DA2147FA292C9FCA25CA25CA21301A25CA21303A25CA21307A25CA2130FA2
5CEB3FF0007FB512F8B6FCA2333971B83B>I<B5D8F80FB590381FFFF06102F018E0D807
FEC7D87FE0903803FE00D803F8DA3F806D5AF100F0A24F5A621903621907047F92C7FC19
0E16FF4B5DA2DB03BF5C7F0001DA073F5CA2030E5D83DB1C1F495A180303385D4EC8FC15
7003F0140E15E0DA01C05CA2DA03805CA2DA07005CA2020E5D17C14A5DEFC3805C027802
C7C9FC14704A14CE13FE6C6C4814DCA24A14F8A291C75B160F495D5F5B5F5B4992CAFCA2
49140E4C3B6FB853>87 D<EC0FFFA35C1500141EA2143EA2143CA2147CA21478A214F8A2
5CA21301A25CA21303A25CA21307A25CA2130FA291C7FCA25BA2131EA2133EA2133CA213
7CA21378A213F8A25BA21201A25BA21203A25BA21207A25BA2120FA290C8FCA25AA2121E
A2123EA2123CA2127CA21278A2EAFFF8A25BA220537CBD19>91 D<011813300138137090
38F001E03901C003800180130000035B3807000E000E5B000C1318001C1338485B003013
60A2007013E000605BA238EF01DE38FF81FFA66CC65A003C13781C196AB92B>I<EC0FFF
A4EC001F151EA3153E153CA3157C1578A315F815F0A3140115E0A3140315C0A314071580
A3140F1500A35C141EA3143E143CA3147C1478A314F85CA313015CA313035CA313075CA3
130F91C7FCA35B131EA3133E133CA3137C1378A2EAFFF8A25BA2205382BD19>I<14F8EB
07FE90381F871C90383E03FE137CEBF801120148486C5A485A120FEBC001001F5CA2EA3F
801403007F5C1300A21407485C5AA2140F5D48ECC1C0A2141F15831680143F1587007C01
7F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0222677A42A>97
D<133FEA1FFFA3C67E137EA313FE5BA312015BA312035BA31207EBE0F8EBE7FE9038EF0F
80390FFC07C013F89038F003E013E0D81FC013F0A21380A2123F1300A214075A127EA214
0F12FE4814E0A2141F15C05AEC3F80A215005C147E5C387801F8007C5B383C03E0383E07
C0381E1F80D80FFEC7FCEA01F01C3B77B926>I<147F903803FFC090380FC1E090381F00
70017E13784913383901F801F83803F003120713E0120FD81FC013F091C7FC485AA2127F
90C8FCA35A5AA45AA3153015381578007C14F0007EEB01E0003EEB03C0EC0F806CEB3E00
380F81F83803FFE0C690C7FC1D2677A426>I<ED01F815FFA3150316F0A21507A216E0A2
150FA216C0A2151FA21680A2153FA202F81300EB07FE90381F877F90383E03FF017C5BEB
F80112013803F00048485B120FEBC001121F5DEA3F801403127F01005BA214075A485CA2
140FA248ECC1C0A2141F15C3ED8380143F1587007C017F1300ECFF076C485B9038038F8E
391F0F079E3907FE03FC3901F000F0253B77B92A>I<147F903803FFC090380FC1E09038
3F00F0017E13785B485A485A485A120F4913F8001F14F0383F8001EC07E0EC1F80397F81
FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C14381578007E14F0003EEB01E0EC03C0
6CEB0F806CEB3E00380781F83803FFE0C690C7FC1D2677A426>I<ED07C0ED1FF0ED3E38
ED7C3CEDF8FC15F9140115F1020313F8EDF0F0160014075DA4140F5DA4141F5D010FB512
C05B16809039003F800092C7FCA45C147EA414FE5CA413015CA413035CA413075CA4130F
5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C137C1378EAF8F01278EA3FC0EA0F80264C
82BA19>I<EC07C0EC3FF09138FC38E0903901F01FF0EB03E0903807C00FEB0F80011F13
07D93F0013E05B017E130F13FE4914C01201151F1203491480A2153F1207491400A25DA2
49137EA215FEA25D00031301140314076C6C485A0000131FEB787BEB3FF390380FC3F0EB
00031407A25DA2140F5D121C007E131F5D00FE49C7FC147E5C387801F8387C07E0381FFF
80D803FEC8FC24367CA426>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91
C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F1400485A16C05B49EB
1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001131C15F8163C003F
01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801E38048903800FF00
0038143C263B7BB92A>I<EB01C0EB07E014F0130F14E01307EB038090C7FCAB13F0EA03
FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65AA212015B1203A25B1207
5BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2130E6C5AEA07F8EA01E0
143879B619>I<EB03F0EA01FFA3EA00075CA3130F5CA3131F5CA3133F91C8FCA35B017E
EB0F80ED3FE015F09039FE01C1F09038FC0387EC0707140E0001011C13E0EBF838913830
03800270C7FC00035BEBF1C0EBF38001FFC8FCEA07FC7FEBFFC0EBE7F8380FE1FCEBC07E
147F80001F809039801F81C0A21583003F013F138001001303A21507481500007E133EEC
1E0E151E00FE6D5A48EB07F80038EB01E0243B7BB926>107 D<EB0FC0EA07FFA3EA001F
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F813
78EA7870EA7CE0121FEA0F80123B79B915>I<D801E001FEEB07F03C07F803FF801FFC3C
0E3C0F07C0783E3C1E3E3C03E1E01F261C1F78D9F3C013803C383FF001F7800F02E01400
007801C013FE007018C002805B4A4848EB1F80EAF07FD8E07E5CA200000207143F01FE17
00495CA2030F5C0001177E495C18FE031F5C120349DA8001131C18F8033F153C00070403
133849020013F0A24B1570000F17E049017E15F019E003FEECE1C0001FEE01E349499038
00FF000007C70038143C3E2679A444>I<D801E013FE3A07F803FF803A0E3C0F07C03A1E
3E3C03E0261C1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA200
00140701FE5C5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049
137EA2160E000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F>
I<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A>I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC0017049
7EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2
010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E
3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A>I<ECF8
03903807FE0790381F871F90383E03BF017C13FEEBF80112013803F000484813FC120F5B
001F130115F8EA3F80A2007F1303010013F0A34813074814E0A3140F4814C0A3141F1580
143FA2007C137FECFF006C5AEB03BF381F0F7F3807FE7EEA01F0C7FC14FE5CA313015CA3
13035C130748B512C0A3203577A426>I<3903C003F0390FF01FFC391E783C0F381C7C70
3A3C3EE03F8038383FC0EB7F800078150000701300151CD8F07E90C7FCEAE0FE5BA21200
12015BA312035BA312075BA3120F5BA3121F5BA3123F90C9FC120E212679A423>I<14FE
903807FF8090380F83C090383E00E04913F00178137001F813F00001130313F0A215E000
03EB01C06DC7FC7FEBFFC06C13F814FE6C7F6D13807F010F13C01300143F141F140F123E
127E00FE1480A348EB1F0012E06C133E00705B6C5B381E03E06CB45AD801FEC7FC1C267A
A422>I<EB0380EB07C0130FA4131F1480A3133F1400A35B137E007FB5FCA2B6FC3800FC
00A312015BA312035BA312075BA3120F5BA3121FEB801CA2143C003F1338EB0078147014
F014E0EB01C0EA3E03381F0780380F0F00EA07FCEA01F0183579B31C>I<13F8D803FEEB
01C0D8078FEB03E0390E0F8007121E121C0038140F131F007815C01270013F131F00F013
0000E015805BD8007E133FA201FE14005B5D120149137EA215FE120349EBFC0EA2020113
1E161C15F813E0163CD9F003133814070001ECF07091381EF8F03A00F83C78E090393FF0
3FC090390FC00F00272679A42D>I<01F0130ED803FC133FD8071EEB7F80EA0E1F121C12
3C0038143F49131F0070140FA25BD8F07E140000E08013FEC6485B150E12015B151E0003
141C5BA2153C000714385B5DA35DA24A5A140300035C6D48C7FC0001130E3800F83CEB7F
F8EB0FC0212679A426>I<01F01507D803FC903903801F80D8071E903907C03FC0D80E1F
130F121C123C0038021F131F49EC800F00701607A249133FD8F07E168000E0ED000313FE
C64849130718000001147E5B03FE5B0003160E495BA2171E00070101141C01E05B173C17
38A217781770020314F05F0003010713016D486C485A000190391E7C07802800FC3C3E0F
C7FC90393FF81FFE90390FE003F0322679A437>I<903907E007C090391FF81FF8903978
7C383C9038F03E703A01E01EE0FE3803C01F018013C0D8070014FC481480000E1570023F
1300001E91C7FC121CA2C75AA2147EA214FEA25CA21301A24A1370A2010314F016E0001C
5B007E1401010714C000FEEC0380010F1307010EEB0F0039781CF81E9038387C3C393FF0
3FF03907C00FC027267CA427>I<13F0D803FCEB01C0D8071EEB03E0D80E1F1307121C12
3C0038140F4914C01270A249131FD8F07E148012E013FEC648133F160012015B5D000314
7E5BA215FE00075C5BA214015DA314035D14070003130FEBF01F3901F87FE038007FF7EB
1FC7EB000F5DA2141F003F5C48133F92C7FC147E147C007E13FC387001F8EB03E06C485A
383C1F80D80FFEC8FCEA03F0233679A428>I E /Fn 7 62 df<EC0380A24A7E4A7EA24A
7EA2EC3BF81433EC61FCA2ECC0FE157E903801807F81D903007F496D7E1306010E6D7E13
0C011C6D7E1318496D7E15014980150049800001157F5B0003ED3F8090C8FC48ED1FC012
06000EED0FE0120C48ED07F01603003FB712F8A24816FCB812FEA22F2A7DA937>1
D<1306130C13181330136013E0EA01C0EA0380A2EA07005A120E121EA2121C123CA35AA5
12F85AAB7E1278A57EA3121C121EA2120E120F7EEA0380A2EA01C0EA00E0136013301318
130C13060F3B7AAB1A>40 D<12C012607E7E7E120E7EEA0380A2EA01C013E0120013F0A2
13701378A3133CA5133E131EAB133E133CA51378A3137013F0A213E0120113C0EA0380A2
EA0700120E120C5A5A5A5A0F3B7DAB1A>I<140EB3A2B812E0A3C7000EC8FCB3A22B2B7D
A333>43 D<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
0012065A001FB5FC5A485BB5FCA219267DA521>I<007FB712C0B812E0A2CBFCABB812E0
A26C16C02B117D9633>61 D E /Fo 7 115 df<1407A24A7EA34A7EA3EC37E0A2EC77F0
1463A2ECC1F8A201017F1480A2903803007EA301067FA2010E80010C131FA2496D7EA201
3FB57EA29038300007496D7EA3496D7EA200018149130012036D801207D81FE0903801FF
80D8FFF8010F13F8A22D2C7DAB33>97 D<91383FE003903901FFF807903907E01E0F9039
1F00078F017EEB01DF496DB4FC484880484880484880485A001F815B003F8190C8FC5A82
A212FE93C7FCA892383FFFF8A2007F02001380EE3F00A27E7F121F7F120F6C7E6C7E6C6C
5C6C7E017E5C011FEB01CF903907E00F87903901FFFE039026003FF0C7FC2D2D7BAB35>
103 D<B539C07FFFE0A23B07F80003FC006C486D5AB190B6FCA29038F00001B2486C497E
B539C07FFFE0A22B2B7CAA33>I<B512E0A2D807F8C8FC6C5AB3A61660A416C0A31501A2
1503A21507ED1F80486C13FFB7FCA2232B7CAA2B>108 D<D8FFF0903807FFE07F000702
0013006C6C143C7F017F14187F806D7E130F806D7E6D7EA26D7E6D7E147E147FEC3F8014
1F15C0EC0FE0EC07F0140315F8EC01FC140015FE157FED3F98151F16D8ED0FF81507A215
031501A2486C13001678D81FE01438EAFFFC16182B2B7CAA33>110
D<B612E015FC3907F800FE6C48EB1F80ED0FC0ED07E016F01503A216F8A516F0A2150716
E0ED0FC0ED1F80EDFE0090B55A15E001F0C8FCB1487EB512C0A2252B7CAA2E>112
D<B67E15F03907F800FE6C48133FED0FC06F7EA26F7E82A65E4B5AA24B5A033FC7FC15FE
90B512F05D9038F001F8EC007E816F7EA26F7EA582A4171816F015071738486C903803F8
30B5D8C00113709238007FE0C9EA1F802D2C7CAA32>114 D E /Fp
13 86 df<B512FCA516057F941C>45 D<EB03F8EB1FFF017F13C090B57E48803903FE0F
F83907F803FC48486C7EEBE0004848137F497F003F1580A290C7121F4815C0A3007E140F
A300FE15E0B3007FEC1FC0A56C6CEB3F80A36C6CEB7F00A26C6C13FEEBF0016C6C485A39
03FE0FF86CB55A6C5C6D5B011F90C7FCEB03F8233A7DB72A>48 D<001FB512FEA601C0C8
FCADEBC1FCEBCFFF01DF13C090B57E819038FE07F89038F803FC496C7E496C7E5B497FC8
1380A2153F16C0A9ED7F8012101238EDFF00007C5BB4495A6C6C485A393FF01FF86CB55A
6C5C6C5C6C5CC649C7FCEB1FF022387DB52A>53 D<007FB812F8B912FCA3CCFCAEB912FC
A36C17F836167B9F41>61 D<B67E15F815FE6F7E82D9000113F09138003FF8150F6F7E6F
7E150115008282A45E5E15014B5A15074B5AED3FF0EDFFC090B65A4BC7FC15F815FF16C0
D9000313F09138003FF8ED07FC6F7EED00FFEE7F80EE3FC0A2161F17E0160FA4161F17C0
163FA2EE7F80ED01FF4B1300ED0FFEED7FFC90B65A16E016804BC7FC15E02B3A79B937>
66 D<B712F0A690C9FCB390B612C0A590C9FCB3A390B612FCA7263A78B932>69
D<12FFB3B3B3A4083A79B917>73 D<D8FFC0ED07FFA36D5DA26D5D00FE177FA26D153F01
78153EA2017C157EA26D15FCA3013F14016D15F8A26E1303010F15F06E1307A2010715E0
6E130FA2010315C06E131FA2010115806E133FA2010015006E5B027C137E027E13FEA202
3E5BEC3F01A2021F5B1583A2020F5B15C702075BA3913803EFC0A215FF6E5BA26E90C7FC
A392C8FCA2383A78B949>77 D<D8FFE0EC1FC0A27FA27FA2487EA2137EA2137F7F80131F
A26D7EA280130780130380130180130080A2147FA2EC3F80A2EC1FC0A2140F15E0140715
F0140315F8140115FC1400A2157EA2157F153F169F151FA2ED0FDFA2ED07FFA281A281A2
2A3A78B93B>I<EC07F891387FFF8049B512E04980010F14FC90391FFC0FFE90393FE001
FF903A7F80007F8049C76C7E48486E7E48486E7E49140700078248486E7E491401001F82
491400A2003F824981007F1780A390C9123FA24817C0AC6C6CED7F80A56C6CEDFF00A26D
5C001F5EA26C6C4A5AA26C6C4A5A6C6C4A5A6D141F00015E6C6C4A5AD97FC0EBFF806D6C
4890C7FC90391FFC0FFE6DB55A6D5C010114E06D6C1380DA07F8C8FC323E7BBB3D>I<B6
12C015F815FF8216E090C77FED1FF8ED07FC15036F7E150082821780A2163FA4167FA217
005E5E15014B5A1507ED1FF8EDFFF090B65A168093C7FC15F815C090CAFCB3A6293A79B9
35>I<B67E15F815FE6F7E8290C77FED1FF06F7EED03FC150182150082A282A35EA25E15
015E1503ED0FF84B5AEDFFE090B65A5E4BC7FC15F815E09038000FF01407811403811401
816E7E8182153F826F7EA26F7EA26F7E1503826F7EA26F7EA2EE7F80EE3FC0A2EE1FE02B
3A78B936>82 D<B4ED1FC0B3B3A76CED3F807FA36C6CEC7F00A26C6C14FE6C6C13016D49
5A6C6C495A6C6CEB1FF03A01FFC07FE06C90B55A013F5C6D49C7FC010713F89038007FC0
2A3C79B939>85 D E /Fq 80 124 df<1506150FA24B7EA24B7EA24B7EA2EDDFF0A29138
018FF8A291380307FCA291380603FEA291380E01FF140CDA1C007F141802386D7E143002
706D7E146002E06D7E5C01016E7E5C01036E7E91C7FC496E7E1306010E6E7E130C011C6E
7F131801386F7E133001706F7E136001E06F7E5B170F484882170748C97F170300068317
01488383481880001FB9FC4818C0A24818E0A2BA12F0A23C3C7CBB45>1
D<DA0FF813FC91397FFF07FF903B01F807DF83C0903A07E001FF0F903B1F8007FE1FE090
393F000FFC137E16F85B9338F007804848010790C7FC1503ACB812F8A32801F80003F0C7
FCB3AB486C497E267FFFE0B512F0A3333B7FBA30>11 D<EC0FF8EC7FFE903901F8078090
3907E001C090391F8000E090383F0007017E497EA25BA2485A6F5AED018092C8FCA9ED03
F0B7FCA33901F8000F1503B3AA486C497E267FFFE0B512C0A32A3B7FBA2E>I<EC0FFC91
387FFF70903901F803F0903807E00790381F800FEB3F00137EA25B150748481303ADB7FC
A33901F80003B3AB486C497E267FFFE0B512C0A32A3B7FBA2E>I<DA0FF0EB1FF0DA7FFE
EBFFFC903B01F80F83F00F903C07E001CFC00380903C1F8000FF0001C090273F0007FE13
0F017E4948497EA2495CA248485C03076E5A03030203C7FC95C8FCA9F007E0BAFCA33C01
F80003F0001F1807B3AA486C496C497E267FFFE0B500C1B51280A3413B7FBA45>I<001C
131C007F137F39FF80FF80A26D13C0A3007F137F001C131C00001300A400011301018013
80A20003130301001300485B00061306000E130E485B485B485B006013601A197DB92A>
34 D<EB0380A3EB0FF0EB7FFE48B512803903F38FC03907C381E0390F8380F0D81F0313
38123E003C141C007C140C150E0078143E00F814FE1481A400FCEB80FC157800FE140012
FF127F13C313E3EA3FFF6C7F14F86C13FE6CEBFF80000114C06C14E0013F13F01303ECBF
F8148FEC83FC1481A2EC80FE157E123C12FF153EA412FE00F8143C00E0147C1260007014
7815F8003814F0003C1381001EEB83E0000FEB87C03907E39F803901FFFE006C5BEB1FE0
EB0380A41F437BBD2A>36 D<141FEC7FC0903801F0E0903803C0600107137090380F8030
90381F00381518A25BA2133E133F15381530A215705D5D140190381F838092CAFC148714
8E02DC49B51280EB0FF85C4A9039003FF8000107ED0FC06E5D71C7FC6E140E010F150CD9
1DFC141C01391518D970FE143801E015302601C07F1470D803805D00076D6C5BD80F00EB
C00148011F5C4890380FE003003E6E48C8FC007E903807F8060203130E00FE6E5A6E6C5A
1400ED7F706C4B13036F5A6F7E6C6C6D6C5B7013066C6C496C130E6DD979FE5B281FF001
F07F133C3C07F80FE03FC0F86CB539800FFFF0C69026FE000313C0D91FF0D9007FC7FC39
3E7DBB41>38 D<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA21207
5B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203
A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812
F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<121C127FEAFF80A213C0A3
127F121C1200A412011380A2120313005A1206120E5A5A5A12600A19798817>I<B512FC
A516057F941C>I<121C127FEAFF80A5EA7F00121C0909798817>I<150C151E153EA2153C
157CA2157815F8A215F01401A215E01403A215C01407A21580140FA215005CA2141E143E
A2143C147CA2147814F8A25C1301A25C1303A2495AA25C130FA291C7FC5BA2131E133EA2
133C137CA2137813F8A25B1201A25B1203A25B1207A25B120FA290C8FC5AA2121E123EA2
123C127CA2127812F8A25A12601F537BBD2A>I<EB03F8EB1FFF90387E0FC09038F803E0
3901E000F0484813780007147C48487FA248C77EA2481580A3007EEC0FC0A600FE15E0B3
007E15C0A4007F141F6C1580A36C15006D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C48
5A90387E0FC0D91FFFC7FCEB03F8233A7DB72A>I<EB01C013031307131F13FFB5FCA213
1F1200B3B3A8497E007FB512F0A31C3879B72A>I<EB0FF0EB7FFE48B57E3903E03FE039
0F000FF0000E6D7E486D7E486D7E123000706D7E126012FCB4EC7F807FA56CC7FC121CC8
FCEDFF00A34A5A5D14035D4A5A5D140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8
FC011EEB01805B5B49130348481400485A485A000EC75A000FB6FC5A5A485CB6FCA32138
7CB72A>I<EB07F8EB3FFF4913C03901F80FF03903C007F848486C7E380E0001000F8038
1FE0006D7FA56C5A6C5AC85A1401A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF8090
38000FE06E7EEC01FC816E7EED7F80A216C0A2153F16E0A2121EEA7F80487EA416C04913
7F007F1580007EC7FC0070ECFF006C495A121E390F8003F83907F00FF00001B512C06C6C
90C7FCEB0FF8233A7DB72A>I<1538A2157815F8A2140114031407A2140F141F141B1433
1473146314C313011483EB030313071306130C131C131813301370136013C01201EA0380
13005A120E120C5A123812305A12E0B712F8A3C73803F800AB4A7E0103B512F8A325397E
B82A>I<0006140CD80780133C9038F003F890B5FC5D5D158092C7FC14FC38067FE090C9
FCABEB07F8EB3FFE9038780F803907E007E090388003F0496C7E12066E7EC87EA28181A2
1680A4123E127F487EA490C71300485C12E000605C12700030495A00385C6C1303001E49
5A6C6C485A3907E03F800001B5C7FC38007FFCEB1FE0213A7CB72A>I<EC3FC0903801FF
F0010713FC90380FE03E90383F800790387E001F49EB3F804848137F485AA2485A000FEC
3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801
F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121F
ED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03
FC233A7DB72A>I<12301238123E003FB612E0A316C05A168016000070C712060060140E
5D151800E01438485C5D5DC712014A5A92C7FC5C140E140C141C5CA25CA214F0495AA213
03A25C1307A2130FA3495AA3133FA5137FA96DC8FC131E233B7BB82A>I<EB03F8EB1FFF
017F13C09038FC07F03901E001F848486C7E4848137C90C77E48141E000E141F001E80A3
121FA27F5D01E0131E6C6C133E01FC133C6D5B6C6C6C5AECC1E06CEBF3C06C01FFC7FC6C
5BEB3FFF6D13C081017F13F801F07F3903E07FFE3907801FFF48486C1380481303003E6D
13C0003CEB007F007C143F0078EC0FE000F814075A1503A21501A36C15C012781503007C
15806CEC07006C5C6C6C131ED807E0137C3903F803F0C6B55A013F1380D907FCC7FC233A
7DB72A>I<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49137E
121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA26C6C
13FF6C6C13DF000313013901F0039F3900FC0F1FD93FFC13C0EB07F090C7FC153F1680A3
16005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC3807
FFFC000113F038003FC0233A7DB72A>I<121C127FEAFF80A5EA7F00121CC7FCB2121C12
7FEAFF80A5EA7F00121C092479A317>I<007FB812F8B912FCA3CCFCAEB912FCA36C17F8
36167B9F41>61 D<1538A3157CA315FEA34A7EA34A6C7EA202077FEC063FA2020E7FEC0C
1FA2021C7FEC180FA202387FEC3007A202707FEC6003A202C07F1501A2D901807F81A249
C77F167FA20106810107B6FCA24981010CC7121FA2496E7EA3496E7EA3496E7EA213E070
7E1201486C81D80FFC02071380B56C90B512FEA3373C7DBB3E>65
D<B712E016FC16FF0001903980007FC06C90C7EA1FE0707E707E707EA2707EA283A75F16
035F4C5A4C5A4C5A4C5AEEFF8091B500FCC7FCA291C7EA7F80EE1FE0EE07F0707E707E83
707EA21880177F18C0A7188017FFA24C13005F16034C5AEE1FF8486DEB7FF0B812C094C7
FC16F832397DB83B>I<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03
FC000F0FD90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F48
48150FA248481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A312
3F7F001F160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE0
5C6D6CEB03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D
7BBA3C>I<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E
177FA2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F
18C0EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397D
B83F>I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A3170783
16C0A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C7
12C0A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839>I<
B812F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED01
80A21700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612
C0A32F397DB836>I<DBFF8013C0020FEBF001023F13FC9139FF803F03903A03FC000787
D90FF0EB03CF4948EB00EF4948147F4948143F49C8121F485A4848150F48481507A24848
1503A2485A1701123F5B007F1600A448481600AB93B6FCA26C7E9338007FE0EF3FC0A212
3F7F121FA26C7EA26C7EA26C7E6C7E6C6C157F6D7E6D6C14FF6D6C14EFD90FF8EB03C7D9
03FEEB0783903A00FFC03F0191393FFFFC00020F01F0130002001380383D7CBA41>I<B6
48B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C71201B3A6486D497EB6
48B512FEA337397DB83E>I<B612C0A3C6EBC0006D5AB3B3AD497EB612C0A31A397EB81E>
I<013FB512E0A39039001FFC00EC07F8B3B3A3123FEA7F80EAFFC0A44A5A1380D87F005B
0070131F6C5C6C495A6C49C7FC380781FC3801FFF038007F80233B7DB82B>I<B649B5FC
A3000101809038007FF06C90C8EA3F80053EC7FC173C17385F5F4C5A4C5A4CC8FC160E5E
5E5E5E4B5AED0780030EC9FC5D153E157E15FF5C4A7F4A6C7E140E4A6C7E4A6C7E14704A
6C7E4A6C7E14804A6C7E6F7EA26F7F707EA2707E707EA2707EA2707E707EA2707E707F84
84486D497FB6011FEBFF80A339397DB841>I<B612E0A3000101C0C8FC6C90C9FCB3AD17
18A517381730A31770A317F0A216011603160FEE1FE0486D13FFB8FCA32D397DB834>I<
B5933807FFF86E5DA20001F0FC002600DFC0ED1BF8A2D9CFE01533A3D9C7F01563A3D9C3
F815C3A2D9C1FCEC0183A3D9C0FEEC0303A2027F1406A36E6C130CA36E6C1318A26E6C13
30A36E6C1360A26E6C13C0A3913901FC0180A3913900FE0300A2ED7F06A3ED3F8CA2ED1F
D8A3ED0FF0A3486C6D5A487ED80FFC6D48497EB500C00203B512F8A2ED018045397DB84C
>I<B5913807FFFE8080C69238007FE06EEC1F80D9DFF0EC0F001706EBCFF8EBC7FCA2EB
C3FEEBC1FFA201C07F6E7EA26E7E6E7E81140F6E7E8114036E7E168080ED7FC016E0153F
ED1FF0ED0FF8A2ED07FCED03FEA2ED01FF6F1386A2EE7FC6EE3FE6A2EE1FF6EE0FFEA216
071603A216011600A2177E486C153E487ED80FFC151EB500C0140EA2170637397DB83E>
I<EC03FF021F13E09138FE01FC903901F8007ED907E0EB1F8049486D7ED93F80EB07F049
C76C7E01FE6E7E48486E7E49157E0003167F4848ED3F80A24848ED1FC0A2001F17E04915
0F003F17F0A3007F17F8491507A300FF17FCAC007F17F86D150FA3003F17F0A26C6CED1F
E0A36C6CED3FC0000717806D157F000317006C6C15FEA26C6C4A5A017F4A5A6D6C495A6D
6C495AD907E0EB1F80D903F8017FC7FC903900FE01FC91381FFFE0020390C8FC363D7BBA
41>I<B712C016F816FE000190398001FF806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17
FE1601A217FFA717FEA2EE03FCA2EE07F817F0EE0FE0EE3FC0923801FF0091B512FC16F0
91C9FCB3A5487FB6FCA330397DB839>I<B612FEEDFFE016F8000190388007FE6C90C76C
7EEE3FC0707E707E707EA2707EA283A65FA24C5AA24C5A4C5AEE3F8004FFC8FCED07FC91
B512E05E9138000FF0ED03F8ED00FE82707E707EA2161F83A583A6F00180A217F8160F18
03486D01071400B66D6C5A04011306933800FE0ECAEA3FFCEF07F0393B7DB83D>82
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
I<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A3006017
30A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C>I<B69038
07FFFEA3000101809038007FE06C90C8EA1F80EF0F001706B3B2170E6D150C80171C133F
17186D6C14385F6D6C14F06D6C5C6D6C495A6D6CEB07806D6C49C7FC91387F807E91381F
FFF8020713E09138007F80373B7DB83E>I<B5D8FC07B5D8F001B5FCA30007902780001F
FEC7EA1FF86C48C7D80FF8EC07E000010307ED03C01B807F6C6F6C1500A26E5F017F6E6C
1406A280013F4A6C5CA280011F4A6D5BEE067FA26D6C010E6D5BEE0C3FA26D6C011C6D5B
EE181FA26D6C6F5BEE300FA26D6C6F485AEE6007A26D6C4CC7FC9338C003FCA203805D91
3B7F818001FE06A203C1150EDA3FC3C7EAFF0CA203E3151CDA1FE6EC7F98A215F6DA0FFC
EC3FF0A302075E4B141FA202035E4B140FA202015E4B1407A2020093C8FC4B80503B7EB8
55>87 D<B500FE91383FFFE0A3000301E0913807FE00C649EC03F0017F6F5A606D6C5D6D
6C140395C7FC6D6C1406A26D6C5C6D6C141C17186D6C143817306D6D5B6E6C13E05F9138
3FE0015F91381FF003DA0FF890C8FC1606913807FC0E160C913803FE1C913801FF185E6E
13B016E0157F6F5AB3A24B7E023FB512C0A33B397FB83E>89 D<003FB7FCA39039FC0001
FE01C0130349495A003EC7FC003C4A5A5E0038141F00784A5A12704B5A5E006014FF4A90
C7FCA24A5A5DC712074A5AA24A5A5D143F4A5AA24A5A92C8FC5B495AA2495A5C130F4948
EB0180A2495A5C137F495A16034890C7FC5B1203485AEE0700485A495C001F5D48485C5E
4848495A49130FB8FCA329397BB833>I<EAFFF8A4EAF000B3B3B3B3A3EAFFF8A40D5378
BD17>I<3901800180000313033907000700000E130E485B001813180038133800301330
0070137000601360A200E013E0485BA400CE13CE39FF80FF806D13C0A3007F137FA2393F
803F80390E000E001A1974B92A>I<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17>
I<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A>97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F3801F
809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E16
FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E9038
00FFF8C7EA1FC0283B7EB92E>I<EB03FC90381FFF8090387E03E03901F80070484813F8
3907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E127F
A26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C090381F
FF00EB07F81F277DA525>I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E078F
9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA12
7E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F90
381FFE0FD907F813C0283B7DB92E>I<EB07F8EB1FFF90387C0FC03901F803E03903F001
F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FCA5
127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C13709038
7E03E090381FFF80903803FC0020277EA525>I<147E903803FF8090380FC1E0EB1F8790
383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFFF8
A31C3B7FBA19>I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE03903
E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A6D
48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF804815
C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03E0
003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA52A
>I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EBF7
0013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E>I<EA0380EA0FE0
487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>I<
EB01C0EB07F0EB0FF8A5EB07F0EB01C090C7FCAAEB01F813FFA313071301B3B3A2123C12
7E00FF13F01303A214E038FE07C0127C383C0F00EA0FFEEA03F8154984B719>I<EA03F0
12FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7FC141E14
38147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400157E157F
811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C>I<EA03F012FFA3120F1203B3B3
AD487EB512C0A3123A7EB917>I<2703F00FF0EB1FE000FFD93FFCEB7FF8913AF03F01E0
7E903BF1C01F83803F3D0FF3800FC7001F802603F70013CE01FE14DC49D907F8EB0FC0A2
495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA340257EA445>I<3903F00FF000
FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F70013FE496D7EA25BA35BB3A3486C
497EB500C1B51280A329257EA42E>I<EB03FE90380FFF8090383E03E09038F800F84848
137C48487F48487F4848EB0F80001F15C090C712074815E0A2007EEC03F0A400FE15F8A9
007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D131F6C6CEB3F006C6C137EC66C
13F890387E03F090381FFFC0D903FEC7FC25277EA52A>I<3903F01FE000FFEB7FF89038
F1E07E9039F3801F803A07F7000FC0D803FEEB07E049EB03F04914F849130116FC150016
FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB0FE001F614C09039F7803F0090
38F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328357EA42E>I<D903F813C09038
1FFE0190387E07819038FC01C33903F000E3000714774848133749133F001F141F485A15
0F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C6C137F6C6C13EF3901F801CF39
007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FCA328357DA42C>I<3807E01F00
FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE9038EC03E09038FC0080491300
A45BB3A2487EB512F0A31C257EA421>I<EBFF03000313E7380F80FF381E003F487F487F
00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C13F86C7F00037FC67F01071380
EB007F141F00C0EB0FC01407A26C1303A37E15806C13077EEC0F00B4131E38F3C07C38E1
FFF038C03F801A277DA521>I<1318A51338A31378A313F8120112031207001FB5FCB6FC
A2D801F8C7FCB215C0A93800FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220
>I<D803F0EB07E000FFEB01FFA3000FEB001F00031407B3A4150FA3151F12016D133F00
00EC77F86D9038E7FF8090383F03C790381FFF87903A03FC07E00029267EA42E>I<B538
803FFEA33A0FF8000FF06C48EB07E00003EC03C06D148000011500A26C6C1306A26D130E
017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001075BA2903803F180A3D901FBC7
FCA214FF6D5AA2147CA31438A227257EA32C>I<B53A1FFFE03FFEA3260FF8009038000F
F86C48017EEB03E018C00003023EEB0180A26C6C013FEB0300A36C6CEC8006156FA2017E
9038EFC00C15C7A2D93F016D5A15830281EBF038D91F831430150102C3EBF87090260FC6
001360A2D907E66D5A02EC137CA2D903FCEB7F804A133FA2010192C7FC4A7FA20100141E
4A130E0260130C37257EA33C>I<B538807FFFA33A03FE003FF00001EC1F80000092C7FC
017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB03FB6DB4C8FC6D5AA2147F804A
7E8114CF903801C7E090380383F090380703F8EB0601496C7E011C137E49137F01787F49
6D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C>I<B538803FFEA33A0FF8000F
F06C48EB07C00003EC03806C7E16007F00001406A2017E5BA2137F6D5BA26D6C5AA2ECC0
70010F1360A26D6C5AA214F101035BA2D901FBC7FCA214FF6D5AA2147CA31438A21430A2
14701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0EEA701C6C5AEA1FF0EA0FC02735
7EA32C>I<003FB512FCA2EB8003D83E0013F8003CEB07F00038EB0FE012300070EB1FC0
EC3F800060137F150014FE495AA2C6485A495AA2495A495A495AA290387F000613FEA248
5A485A0007140E5B4848130C4848131CA24848133C48C7127C48EB03FC90B5FCA21F247E
A325>I<B81280A2290280962A>I E /Fr 42 122 df<EEFFFC031FEBFF804AB612E00207
81021F9038C00FF8913A7FFE0003FCDAFFF0EB00FE4949EB03FF4901805B4990C7487F49
485CA2495A4D7F013F6F5B5CA37190C7FC715AEF01F894C9FCA90403B512C0BAFCA52600
3FFCC7120783B3B3A6003FB5D8FC03B612C0A542547DD34B>12 D<EA07F0EA1FF8487E48
7E7FB5FC1480A314C0A37EA27E7EEA07F3EA0003A213071480A3130F1400A25B131E133E
133C137C5BA2485A485A485A485A48C7FC121E120C1228769025>44
D<B712F0AB240B7F9F2D>I<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13
F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC
013F14FF90B712C048D9C07F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48
488001F01680486C6E13C07F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914
E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B
5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495A
D91F80140749C8FC013E150F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD
43>I<91380FFFC091B512FC0107ECFF80011F15E090263FF8077F9026FF800113FC4848
C76C7ED803F86E7E491680D807FC8048B416C080486D15E0A4805CA36C17C06C5B6C90C7
5AD801FC1680C9FC4C13005FA24C5A4B5B4B5B4B13C04B5BDBFFFEC7FC91B512F816E016
FCEEFF80DA000713E0030113F89238007FFE707E7013807013C018E07013F0A218F8A270
13FCA218FEA2EA03E0EA0FF8487E487E487EB57EA318FCA25E18F891C7FC6C17F0495C6C
4816E001F04A13C06C484A1380D80FF84A13006CB44A5A6CD9F0075BC690B612F06D5D01
1F1580010302FCC7FCD9001F1380374F7ACD43>I<177C17FEA2160116031607160FA216
1F163F167FA216FF5D5DA25D5DED1FBFED3F3F153E157C15FCEC01F815F0EC03E01407EC
0FC01580EC1F005C147E147C5C1301495A495A5C495A131F49C7FC133E5B13FC485A5B48
5A1207485A485A90C8FC123E127E5ABA12C0A5C96C48C7FCAF020FB712C0A53A4F7CCE43
>I<D80380150ED807E0157E01FEEC03FED9FFF0137F91B65A5F5F5F5F5F94C7FC5E5E16
F016C093C8FC15F801E190C9FC01E0CAFCABEC0FFF027F13F001E3B512FE01E76E7E9026
FFF8077FDAC0017F49C713F8496E7E49143F4981496E7E6C481680C9FC18C08218E0A418
F0A3EA0FE0487E487E487E487EA418E0A35B6C484A13C05B491680003EC85A003F17006C
6C4A5A6D5D6C6C4A5AD807F8495BD803FE01075B2701FFC03F5B6C90B65A013F4AC7FC6D
14F8010314C09026007FF8C8FC344F79CD43>I<ED0FFF92B512E0020780021F14FC9139
7FFE03FE903A01FFF0007F4901C0EB3F804990C7121F4948EC7FC0494814FF49484913E0
49485B01FF5C485BA2485B5AA2486F13C04A6D1380486F1300177E94C7FC5AA291CAFC5A
A21508913801FFF8020713FFB54814C04A14F04AC66C7E023C6D7E4A6D7E4A6D7E701380
4A15C0A24A15E07013F05C18F8A491C714FCA37EA67EA46C17F880A27E18F06C5D18E06C
6D15C07E6E4913806C6D15006D6C495A6D6CEB7FFC6DB448485A6D90B55A010315C00100
92C7FC023F13FC020713C0364F7ACD43>I<171F4D7E4D7EA24D7EA34C7FA24C7FA34C7F
A34C7FA24C7FA34C8083047F80167E8304FE804C7E03018116F8830303814C7E03078116
E083030F814C7E031F81168083033F8293C77E4B82157E8403FE824B800201835D840203
834B800207835D844AB87EA24A83A3DA3F80C88092C97E4A84A2027E8202FE844A820101
85A24A820103854A82010785A24A82010F855C011F717FEBFFFCB600F8020FB712E0A55B
547BD366>65 D<932601FFFCEC01C0047FD9FFC013030307B600F81307033F03FE131F92
B8EA803F0203DAE003EBC07F020F01FCC7383FF0FF023F01E0EC0FF94A01800203B5FC49
4848C9FC4901F8824949824949824949824949824990CA7E494883A2484983485B1B7F48
5B481A3FA24849181FA3485B1B0FA25AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7F
A21B0F6C6D1980A26C1A1F6C7F1C006C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D
4C5A6D6D4C5A6D01FC4C5A6D6DEE7F806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF8
0203903AFFE001FFF0020091B612C0033F93C8FC030715FCDB007F14E0040101FCC9FC52
5479D261>67 D<BC1280A5D8000701F8C7000114C0F0001F19071901851A7F1A3F1A1FA2
F20FE0A21A07A31A03A318F81BF01A01A497C7FC1701A317031707170F177F92B6FCA592
38F8007F170F170717031701A317001B3EA31B7CA395C8FCA21BFCA21BF8A21A01A31A03
1BF01A071A0FA21A1F1A3FF27FE0F101FF1907191F0603B5FCBCFCA21BC0A34F517CD058
>69 D<BB12FEA5D8000701F8C700077FF0007F191F190785858586861B80A21A1FA31A0F
A41BC006F81307A497C7FCA31701A317031707170F177F92B6FCA59238F8007F170F1707
17031701A31700A795C9FCB3B812F8A54A517CD055>I<932601FFFCEC01C0047FD9FFC0
13030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01FCC7383FF0
FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F882494982494982494982494982
4990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA25AA298C8FC
5CA2B5FCAE6C057FB712E0A280A36C94C7003FEBC000A36C7FA36C7FA27E6C7FA26C7F6C
7FA26D7E6D7F6D7F6D6D5E6D7F6D01FC93B5FC6D13FF6D6C6D5C6E01F0EC07FB020F01FE
EC1FF10203903AFFF001FFE0020091B6EAC07F033FEE001F030703FC1307DB007F02E013
01040149CAFC5B5479D26A>I<B600FC073FB512FE6F61A26F96B6FCA2D80007F5C00070
EF01EFA202EF6DEF03CFA202E76DEF078FA202E36DEF0F0FA202E16D171EA302E06D173C
A26F6C1778A26F6C17F0A26F6DED01E0A26F6DED03C0A36F6DED0780A26F6DED0F00A26F
6D151EA26F6D5DA3706C5DA2706C5DA2706D495AA2706D495AA2706D495AA3706D49C7FC
A2706D131EA2706D5BA2716C5BA3716C5BA271EB81E0A271EBC3C0A271EBE780A27101FF
C8FCA3715BA2715BA2725AA2725AA2D93FFC6F5AB74DB712FEA2725AA2725A77527CD180
>77 D<BAFC19F819FF1AE086D8000701F0C7001F13FC060113FF726C13807313C0070F13
E01BF0857313F81BFCA27313FEA41BFFA81BFEA31BFC61A21BF84F13F04F13E0614F13C0
4F13004E485A061F5B92B812F01AC04FC7FC19E003F8CBFCB3AEB812C0A550527CD15C>
80 D<B912F0F0FF8019F819FF1AC0D8000701F0C714F0060F7F060113FE727F737F737F
85737F87A2737FA387A863A2616363A24F5B4F5B4F90C8FC4F5A06035B060F13F095B512
C092B8C9FC19F819E019F89226F0000313FE9439007FFF80727F727F727F727F727F8684
A28684A787A71D1C75133EA38575137E73157C7513FC731401B86C6D9038F803F8070390
38FE07F07390B512E0736C14C0080F1400CEEA7FFC5F537CD164>82
D<91260FFF80130791B500F85B010702FF5B011FEDC03F49EDF07F9026FFFC006D5A4801
E0EB0FFD4801800101B5FC4848C87E48488149150F001F824981123F4981007F82A28412
FF84A27FA26D82A27F7F6D93C7FC14C06C13F014FF15F86CECFF8016FC6CEDFFC017F06C
16FC6C16FF6C17C06C836C836D826D82010F821303010082021F16801400030F15C0ED00
7F040714E01600173F050F13F08383A200788200F882A3187FA27EA219E07EA26CEFFFC0
A27F6D4B13806D17006D5D01FC4B5A01FF4B5A02C04A5A02F8EC7FF0903B1FFFC003FFE0
486C90B65AD8FC0393C7FC48C66C14FC48010F14F048D9007F90C8FC3C5479D24B>I<00
3FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001E08449197F49193F90
C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3B3AC91B912F0A55351
7BD05E>I<B700FE031FB512FEA5D8001F01F0CA383FFE00F307F06D626F170F6D62811B
1F6D6D601B3F6D97C7FC6F5F6D197E821BFE6E6D5E1A016E6D5E1A036E60701507A26E6D
5E1A0F6E6D5E1A1F6E6070153FA26E6D93C8FC626E6E147E1AFE6F5E711301A26F6D5C19
036F6D5C19076F5E71130FA26F6D5C191F6F6D5C193F6F93C9FC715BA26FEC807E19FE70
6D5A18C1705C18E3705C18F318F770EBFFE0A2705CA2705CA37091CAFCA2705BA2715AA3
715AA2715AA2715A715A5F537DD166>86 D<EC7FFF0107B512F0013F14FE90B77E48D9E0
0F7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C
5AC9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F048
5B485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F8
6C9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E00101
01E090C8FC3C387CB641>97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033F
EBFFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F
4A824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A
5B6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F
01FCC8FC90C7000313C041547BD24B>I<913801FFF8021FEBFF8091B612F0010315FC01
0F9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F
138091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15
C07E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF00103
90B55A01001580023F49C7FC020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707
B3A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101
B5FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37E
A26C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07F
CF6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC002
3F13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D
7E48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFC
A6127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F
806D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113
F034387CB63D>I<ED3FFC0203B5FC020F14C0023F14E09139FFF81FF0499038C03FF849
EB807F49903800FFFC495A495AA2495AA2EE7FF8495AEE3FF0EE0FC093C7FCAEB712E0A5
26007FF8C8FCB3B3A7007FB512FEA52E547CD329>I<DA3FFF14FF0103B5D8F00713C001
0FDAFC1F13E0013FECFF7F90267FFC0F9038FF9FF09026FFE001EBF83F48496C13E04849
90387FF01F4890C7D83FF813E0489338FC0FC0F0078048486E6CC7FCA2003F82A9001F5E
A26C6C4A5AA26C5E6C6D495A6C6D495A6C6D485BDAFC0F5B4890B6C8FCD803EF14FC01C3
14F02607C03F90C9FC91CBFCA2120FA37FA213F813FE90B7FC6C16F817FF18C06C836C83
6C836D828448B9FC12074848C700031480D81FF8EC003F4848150748486F13C083485A83
A56D5D007F18806D5D003F18006C6C4B5AD80FFEED1FFC6C6C6CEC7FF86C01E049485A6C
01FE011F5B6C6CB71280010F03FCC7FC010115E0D9000F01FCC8FC3C4F7CB543>I<EB3F
F0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391FE07FFC92393F001FFE
037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0
A542537BD24B>I<137F497E000313E0487FA2487FA76C5BA26C5BC613806DC7FC90C8FC
ADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB3FF0B5FCA512017EB3B3B3
B1B612F0A51C537BD225>108 D<D93FF0D91FFCEDFFE0B591B500C0010713FE030302F0
011F6D7E030F6E017F8092271FE07FFCD9FF037F922A3F001FFE01F8007F0003027C9126
FF03E080C602F06DD90780137FDAF1E0038FC77FDAF3C0159EDAF7806D01BC143F07FC81
02FFC75C4A5EA24A5EA44A5EB3ACB6D8F807B6D8C03FB512FEA567367BB570>I<D93FF0
EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07F
DAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B
>I<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF8
6D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F
1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D
495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91
C8FC020113E03A387CB643>I<903A3FF001FFE0B5010F13FE033FEBFFC092B612F002F3
01017F913AF7F8007FFE0003D9FFE0EB1FFFC602806D7F92C76C7F4A824A6E7F4A6E7FA2
717FA285187F85A4721380AC1A0060A36118FFA2615F616E4A5BA26E4A5B6E4A5B6F495B
6F4990C7FC03F0EBFFFC9126FBFE075B02F8B612E06F1480031F01FCC8FC030313C092CB
FCB1B612F8A5414D7BB54B>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1F
F89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8
EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90
B7FC120348EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01
F091C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F
15C01300020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E
6D141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F8
07148048C601F8C7FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F13
1F133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F
0015806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF891
3801FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC
01E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E0
91C7FC42377BB54B>I<B600F00107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E
6E157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D
93C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16
FF6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A40367DB447>I<B6D8E07F
B5D8C003B512C0A5000101F0C701F0C7381FF8006E027FED07E06C715DA26E023F150F01
7F705DA26E181F013F4B6C92C7FC6E606D70143E94B5FC6F177E6D4A6E137C03C001F315
FC6D715B160303E001E114016D020702E05B03F013C06D71485A160F03F8D9807F13076D
05F85B93381F003F03FC160F027F4902FC5BDBFE3E011F131F023F04FE90C8FC167EDBFF
7C010F5B6E01FCECFF3E4C6D137E6E5FA24C7F6E5F4C7F6E5FA24C7F6E5F4C147FA26E5F
93C8123F6F5EA2033E6FC9FC5A367DB461>I<007FB500F090387FFFFEA5C66C48C7000F
90C7FC6D6CEC07F86D6D5C6D6D495A6D4B5A6F495A6D6D91C8FC6D6D137E6D6D5B91387F
FE014C5A6E6C485A6EEB8FE06EEBCFC06EEBFF806E91C9FCA26E5B6E5B6F7E6F7EA26F7F
834B7F4B7F92B5FCDA01FD7F03F87F4A486C7E4A486C7E020F7FDA1FC0804A486C7F4A48
6C7F02FE6D7F4A6D7F495A49486D7F01076F7E49486E7E49486E7FEBFFF0B500FE49B612
C0A542357EB447>I<B600F00107B5FCA5C601F8C8EA7FE06EED3F00A26D6C153E187E01
3F167C6E15FC6D5E6F13016D5E6F13036D5E8117076D6D5C170F6D6D5C171F6D93C7FC6F
5B027F143E6F137E023F147C6F13FCA26E6D5A16816EEBC1F016C36E5C16E76E5C16FF6E
5CA26E91C8FCA36F5AA26F5AA26F5AA26F5AA26F5AA35E150F5E151F93C9FC5DD81FC013
3E486C137E486C137C486C13FC5D14015D14034A5A6C48485A49485A263FC07FCAFCEB81
FE6CB45A6C13F000035BC690CBFC404D7DB447>I E /Fs 34 128
df<B612C0A61A067F9721>45 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A78891B>
I<14FF010713E090381F81F890383E007C01FC133F4848EB1F8049130F4848EB07C04848
EB03E0A2000F15F0491301001F15F8A2003F15FCA390C8FC4815FEA54815FFB3A46C15FE
A56D1301003F15FCA3001F15F8A26C6CEB03F0A36C6CEB07E0000315C06D130F6C6CEB1F
806C6CEB3F00013E137C90381F81F8903807FFE0010090C7FC28447CC131>48
D<143014F013011303131F13FFB5FC13E713071200B3B3B0497E497E007FB6FCA3204278
C131>I<121CA2EA1F8090B712C0A3481680A217005E0038C8120C0030151C00705D0060
153016705E5E4814014B5A4BC7FCC81206150E5D151815385D156015E04A5AA24A5A1407
92C8FC5CA25C141E143EA2147E147CA214FCA21301A3495AA41307A6130FAA6D5AEB01C0
2A457BC231>55 D<14FF010713E0011F13F890387F80FC9038FC007E48487F4848EB1F80
4848EB0FC0000FEC07E0485AED03F0485A16F8007F140190C713FCA25AA216FE1500A516
FFA46C5CA36C7E5D121F7F000F5C6C6C1306150E6C6C5B6C6C5BD8007C5B90383F01E090
390FFF80FE903801FE0090C8FC150116FCA4ED03F8A216F0D80F801307486C14E0486C13
0F16C0ED1F80A249EB3F0049137E001EC75A001C495A000F495A3907E01FE06CB51280C6
49C7FCEB1FF028447CC131>57 D<ED1FFC4AB512C0913907E003F0021EC7123C0278140F
D901E0EC03C0D90380EC00E0010FC91278011C161C4982498249707E4916010001844848
D90FF06D7E90C7D83FFC146048DAFC0F1470000E902703F003C07F000C902707C000E013
18001CD91F800170131C0018013F6E130C003891C76C130E0030017E91380FF00614FE00
704902071307D8600183A2495AA200E019804848481601AB6C6C7E1260A26D7E1903D870
00180000306D140F147E00386D141F00186E013F5B001C011F02771306000CD907C09038
E3F80E000E902703F003C35B6C903B00FC0F00FC386CDA3FFCEB7FF06DD90FF0EB0FC06C
6C90CBFC12007F13707F7F010FEF1F80D90380167FD901E0923803FE00D90078ED1FF002
1E913801FF80DA07E0D97FF8C7FC0201B6C8FCDA001F13C041477BC54C>64
D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA3ED30FFA203707FED607FA203E07FEDC03F
A2020180ED801FA2DA03007F160FA20206801607A24A6D7EA34A6D7EA34A6D7EA2027081
0260147FA202E08191B7FCA249820280C7121FA249C87F170FA20106821707A2496F7EA3
496F7EA3496F7EA201788313F8486C83D80FFF03037FB500E0027FEBFFC0A342477DC649
>I<B912F0A3000101C0C7127F6C6C48EC0FF817031701170018781838A2181CA3180CA4
180E1806160CA21800A5161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA216
0CA793C8FCB08048487EB612F8A337447CC340>70 D<B612F0A3C6EBF0006D5A6D5AB3B3
B3A4497E497EB612F0A31C447DC323>73 D<010FB512FEA3D9000313806E130080B3B3AB
123F487E487EA44A5A13801300006C495A00705C6C13076C5C6C495A6CEB1F802603E07F
C7FC3800FFFCEB1FE027467BC332>I<B600C049B512C0A3000101E0C8387FFC006C49ED
3FE06D481680063EC7FC183C183860604D5A4D5A4DC8FC171E17385F5F4C5A4C5A4CC9FC
160E5E5E5E5E4B5A4B7E4B7E150F4B7E4B7E1577EDE3FE913881C1FFEC8381DA87007F02
8E6D7E149C02B86D7E02F06D7E14C04A6D7E707EA2707E707EA2707F717EA2717E717EA2
717E717EA2717E717EA2717F8585496C82486D4A13FCB600C0011FEBFFE0A343447CC34C
>I<B612F8A3000101E0C9FC6C6C5A5CB3B31830A418701860A518E0A3EF01C0A2170317
07A2170F173F177FEE01FF48486C011F1380B9FCA334447CC33D>I<B600C0010FB5FCA3
000101E0C813F026007F80ED1F80F00F00A21806B3B3A7180E6D6C150CA2181C131F6E15
18010F163818306D6C1570606D6C14016D6C5D6D6CEC0780027F4AC7FC6E6C131EDA1FE0
137C913907FC03F00201B55A6E6C1380DB07FCC8FC40467CC349>85
D<EB07FC90383FFF809038F80FE03903C003F048C66C7E000E6D7ED80FC0137E486C137F
6D6D7EA36F7EA26C5AEA0380C8FCA4EC0FFF49B5FC90380FFE1FEB3FC0EBFF00EA03FC48
5A485A485A485A127F5B176048C7FCA3153FA36D137F007F14EF6D9038C7E0C0003F1301
3A1FE00783F13B07F81E03FF802701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120712031201B3EC03FC91380FFF8091383C07E091387001F89039FDE0
007E02807F01FFEC1F8091C713C049EC0FE049140717F0A2EE03F8A217FCA2160117FEAB
17FC1603A217F8A2EE07F0A26DEC0FE017C06D141F01FBEC3F80D9F380EB7E00D9E1C05B
9039E0F001F89039C03C07E09039801FFF80C7D803FCC7FC2F467DC436>I<167FED3FFF
A315018182B3EC7F80903803FFF090380FC07C90383F000E017E1307496D5AD803F87F48
487F5B000F81485AA2485AA2127FA290C8FC5AAB7E7FA2123FA26C7EA2000F5D7F6C6C5B
00035C6C6C9038077F806C6C010E13C0013F011C13FE90380FC0F8903803FFE09026007F
0013002F467DC436>100 D<EB01FE903807FFC090381F03F090387E00FC49137E48487F
485A4848EB1F80000F15C049130F121F484814E01507A2007F15F090C7FCA25AA390B6FC
A290C9FCA67EA27FA2123F16306C7E1670000F15606D14E06C6C14C0000314016C6CEB03
806C6CEB0700013E131E90381F80F8903803FFE0010090C7FC242E7DAC2B>I<EC0FE0EC
7FF8903801F81E903803F03F90390FE07F8090381FC0FF5C133F495AA2ED7F0001FE131C
92C7FCAFB67EA3C648C8FCB3B2486C7E007F13FFA321467EC51E>I<EE0F80D901FCEB7F
E0903A0FFF81F0F090393F07E3819039FC01FF033A01F800FE014848017E13E00007027F
C7FC497F000F8149131F001F81A9000F5D6D133F000792C7FC6D5B0003147E6C6C5B6D48
5A3903BF07E090380FFF80260701FCC8FC90CAFCA25AA37F6C7E7F90B512F86C14FF16E0
6C15F86C6C8048B67E3A07C0000FFF48481300003FC8EA3F80003E151F48ED0FC0A24815
07A56C150F007C1680007E151F003E16006C153E6C6C5CD807E0495AD801F8EB07E0D800
7FEB3F8090261FFFFEC7FC010113E02C427DAC31>I<EA01FC12FFA3120712031201B3EC
01FE913807FFC091381E07F091383801F802707FECE000D9FDC07F5C01FF147F91C7FCA2
5BA35BB3A8486CECFF80B5D8F83F13FEA32F457DC436>I<EA01E0EA07F8A2487EA46C5A
A2EA01E0C8FCADEA01FC12FFA3120712031201B3B0487EB512F8A315437DC21C>I<EA01
FC12FFA3120712031201B3A292381FFFE0A36F1300ED07F816E05E5E030EC7FC5D5D5D5D
4A5A4A5A4AC8FC5CEC3F804A7E14FF9038FDCFE09038FF8FF01407496C7E01FC7F14016E
7E81816F7E82151F6F7E821507826F7E8282486C491380B5D8F81F13F8A32D457DC433>
107 D<EA01FC12FFA3120712031201B3B3B3A5487EB512F8A315457DC41C>I<D801FC01
FFEC1FE000FF010701E0EBFFFC913B0F03F801E07F913C3C01FC07803F800007903C7000
FE0E001FC0000349D97E1C130F2601FDC0D97F38804A143001FFDA3FF06D7E91C75BA249
5DA3495DB3A8486C4A6C497EB5D8F81FB50003B512E0A34B2C7DAB52>I<3901FC01FE00
FF903807FFC091381E07F091383801F8000701707F0003EBE0002601FDC07F5C01FF147F
91C7FCA25BA35BB3A8486CECFF80B5D8F83F13FEA32F2C7DAB36>I<EC7F80903803FFF0
90380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A24848147E
003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE00
0F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF890
38007F802A2E7DAC31>I<3903F803F000FFEB1FFCEC3C3EEC707F0007EBE0FF3803F9C0
00015B13FBEC007E153C01FF13005BA45BB3A748B4FCB512FEA3202C7DAB26>114
D<90383FE0183901FFFC383907E01F78390F0003F8001E1301481300007C1478127800F8
1438A21518A27EA27E6C6C13006C7E13FC383FFFE06C13FC6C13FF6C14C06C14E0C614F0
011F13F81300EC0FFC140300C0EB01FE1400157E7E153EA27EA36C143C6C147C15786C14
F86CEB01F039F38003E039F1F00F8039E07FFE0038C00FF01F2E7DAC26>I<1306A5130E
A4131EA3133E137EA213FE12011207001FB512F0B6FCA2C648C7FCB3A4150CAA017E131C
017F1318A26D133890381F8030ECC070903807E0E0903801FFC09038007F001E3E7EBC26
>I<D801FC147F00FFEC3FFFA300071401000380000181B3A85EA35DA212006D5B017E90
38077F80017F010E13C06D011C13FE90380FC078903803FFF09026007F8013002F2D7DAB
36>I<B539F001FFFCA3000790C7EA7FE06C48EC1F8000011600160E1200160C017F5CA2
80013F5CA26E1370011F146080010F5CA2ECF00101075CA26D6C48C7FCA26E5A01011306
A26D6C5AA214FF6E5AA215B8EC3FB015F06E5AA36E5AA26E5AA36EC8FC2E2C7EAA33>I<
B500E0B539E03FFF80A30007903C000FFE000FFC00D803FCD903F8EB03F8F001E0120103
015D6D80000060A26D6E13036DD9037E91C7FCA20280017F5B013FD9063F1306A2D91FC0
6E5AED0C1FA2D90FE06E5AED180FA2D907F06E5AED3007A2D903F86E5AED6003A2902601
FCE06D5AEDC00117FCD900FFECFD80ED800017FF027F92C8FC92C77EA26E147E023E143E
A2021E143C021C141CA2412C7EAA46>I<001EEB0780007FEB0FE039FF801FF0EBC03FA4
EB801F397F000FE0001EEB07801C0A76C231>127 D E /Ft 21 119
df<B812C0AD2A0D7EA636>45 D<4DB5ED03C0057F02F014070407B600FE140F047FDBFF
C0131F4BB800F0133F030F05FC137F033F9127F8007FFE13FF92B6C73807FF814A02F002
0113C3020702C09138007FE74A91C9001FB5FC023F01FC16074A01F08291B54882490280
824991CB7E49498449498449498449865D49498490B5FC484A84A2484A84A24891CD127F
A25A4A1A3F5AA348491A1FA44899C7FCA25CA3B5FCB07EA380A27EA2F50FC0A26C7FA37E
6E1A1F6C1D80A26C801D3F6C6E1A00A26C6E616D1BFE6D7F6F4E5A7F6D6D4E5A6D6D4E5A
6D6D4E5A6D6E171F6D02E04D5A6E6DEFFF806E01FC4C90C7FC020F01FFEE07FE6E02C0ED
1FF8020102F8ED7FF06E02FF913803FFE0033F02F8013F1380030F91B648C8FC030117F8
6F6C16E004071680DC007F02F8C9FC050191CAFC626677E375>67
D<BB7E1AFCF2FFC01BF81BFE757ED800010280C7001F80070114F0736C7F081F7F747F74
7F7414807414C0A27414E0A21DF0A27513F8A41DFCA91DF8A498B512F0A21DE0A25014C0
1D8062501400505B505B087F5B4FB512E0071F5C93B9C7FC1BFC1BF01B8008F0C8FC04C0
CCFCB3B3A2B97EA65E627AE16E>80 D<BA12F8F1FFE01AFEF2FFC01BF01BFED800010280
C76C7F070714C0070014F0747F081F7F747F747F7480A2748089A37480A389A865A3505C
A265A2505C9AC9FC505B505B505B087F5B4FB55A0707148096B548CAFC93B812F81BC050
CBFC621AFF932680000314C0DE007F7F071F13F8737F737F737F73808885888688A2747F
A688A688A676140FF71F80A374801F3F86771400745E746E5BB96E6E5B746E485A75EBFE
07091F90B55A090715E009015DCF003F91C7FC0A0013FC71647AE178>82
D<DBFFFCEC01E0020FD9FFE01303027F02FC130749B7130F0107EEC01F011F16F049D9C0
07EBF83F4948C7383FFE7FD9FFF8020FB5FC4801E014014849804849153F91C97E484882
001F834982003F83845B007F187FA2193FA200FF181FA27F190FA27FA26D17078080806C
01F893C7FC80ECFF8015F86CECFFC016FC6CEDFFE017FE6CEEFFE018F86C17FE6C717E6C
846C846D17F86D836D836D8313036D18806D6C17C0020F17E01401DA000F16F015000407
15F8EE007F1703050014FC183F84060713FE84A2007C8300FC83A2197FA3193F7EA31AFC
7EA27F1AF86D177F7F1AF06D17FF6D18E06D5E01FF18C06E4B138002E04B130002F84B5A
02FFED3FFC01CF01E0ECFFF8018301FF010F5B010191B65A6D6C5E48011F93C7FC480103
15FC48D9003F14E048020149C8FC476677E35A>I<001FBEFCA64849C79126E0000F1480
02E0180091C8171F498601F81A0349864986A2491B7FA2491B3F007F1DC090C9181FA400
7E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3021FBAFCA663617AE070>I<913803FF
FE027FEBFFF00103B612FE010F6F7E4916E090273FFE001F7FD97FE001077FD9FFF80101
7F486D6D7F717E486D6E7F85717FA2717FA36C496E7FA26C5B6D5AEB1FC090C9FCA74BB6
FC157F0207B7FC147F49B61207010F14C0013FEBFE004913F048B512C04891C7FC485B48
13F85A5C485B5A5CA2B55AA45FA25F806C5E806C047D7F6EEB01F96C6DD903F1EBFF806C
01FED90FE114FF6C9027FFC07FC01580000191B5487E6C6C4B7E011F02FC130F010302F0
01011400D9001F90CBFC49437CC14E>97 D<92380FFFF04AB67E020F15F0023F15FC91B7
7E01039039FE001FFF4901F8010113804901E0010713C04901804913E0017F90C7FC4948
4A13F0A2485B485B5A5C5A7113E0485B7113C048701380943800FE0095C7FC485BA4B5FC
AE7EA280A27EA2806C18FCA26C6D150119F87E6C6D15036EED07F06C18E06C6D150F6D6D
EC1FC06D01E0EC7F806D6DECFF00010701FCEB03FE6D9039FFC03FFC010091B512F0023F
5D020F1580020102FCC7FCDA000F13C03E437BC148>99 D<F17FF8050FB5FCA6EF000F84
84B3A892380FFF804AB512F8020F14FE023FECFF8391B712E301039138807FF3499039F8
000FFB011F01E00103B5FC494913004990C87E49488148498148834A815A485BA2485BA2
5AA3485BA4B5FCAE7EA46C7FA37EA26C7FA26C5F806C5F6C6D5D6C6D5D017F93B5FC6D6C
6C0103806D6D49806D01F0D91FF7EBFFFE6D9039FE01FFE7010190B612876D6CECFE0702
1F14F8020314E09127003FFE00ECC0004F657BE35A>I<92380FFFC04AB512FC020FECFF
80023F15E091B712F80103D9FE037F499039F0007FFF011F01C0011F7F49496D7F4990C7
6C7F49486E7F48498048844A804884485B727E5A5C48717EA35A5C721380A2B5FCA391B9
FCA41A0002C0CBFCA67EA380A27EA27E6E160FF11F806C183F6C7FF17F006C7F6C6D16FE
6C17016D6C4B5A6D6D4A5A6D01E04A5A6D6DEC3FE0010301FC49B45A6D9026FFC01F90C7
FC6D6C90B55A021F15F8020715E0020092C8FC030713F041437CC14A>I<F107F8DB7FFE
EC3FFE020FB5D8F001B5FC027FDAFE03148049B7128F49DCDFFD13C0010FD9F00FEBFFC1
49D9800114014990C7EBFC0349486E6C7E4948EC3FFF48496E018113800780130048F0C0
3E97C7FC48496E7FA34884A96C60A36C6D4A5BA26C60A26C6D4A90C8FC6D6C4A5A6D6C4A
5A6D6D485BDBF00F5B4990B612C060D97C7F4AC9FCD9FC0F14F09126007FFECAFC92CCFC
1201A47FA27F8014F091B77E18FE6CEFFFC019F06D17FC19FF6D846D846D846D84013F84
90BAFC0003854801E0C712014890C9000F7F484816014848EE007F4848717E8512FF5B85
A56D5F007F616D173F003F616D177F6C6C4D5A6C01C003035B6C6D4B5B6C01F8031F5BC6
01FF92B5C7FC6D01F8011F5B011F90B712F8010717E0010094C8FC020F15F0DA003F01FC
C9FC4A607CC151>103 D<EB0FE0EB3FF8497E48B5FCA24880A24880A76C5CA26C91C7FC
A238007FFC6D5AEB0FE090C9FCAF903807FF80007FB5FCA6C6FC7F7FB3B3AEB712C0A622
657BE42C>105 D<903807FF80B6FCA6C6FC7F7FB3A90503B61280A6DD003FEB8000DE0F
FCC7FCF01FF04E5AF0FFC04D5B4D90C8FCEF07FC4D5AEF3FF04D5A4D5A4C90C9FC4C5AEE
0FFC4C5A4C5AEE7FC04C7E03837F03877F158F039F7F03BF7F92B5FC838403FC804B7E03
F0804B6C7F4B6C7F1580707F707F707FA270807080717FA2717F717F717FA2717F717F83
867180727F95B57EB7D8E00FECFFF0A64C647BE355>107 D<903807FF80B6FCA6C6FC7F
7FB3B3B3B3ADB712E0A623647BE32C>I<902607FF80EB1FFFB691B512F0040714FC041F
14FF4C8193267FE07F7F922781FE001F7FC6DA83F86D7F6DD987F07F6DD98FC0814C7F03
9FC78015BE03BC8003FC825DA25DA25DA45DB3B2B7D8F007B71280A651417BC05A>110
D<923807FFE092B6FC020715E0021F15F8027F15FE494848C66C6C7E010701F0010F13E0
4901C001037F49496D7F4990C87F49486F7E49486F7E48496F13804819C04A814819E048
496F13F0A24819F8A348496F13FCA34819FEA4B518FFAD6C19FEA46C6D4B13FCA36C19F8
A26C6D4B13F0A26C19E06C6D4B13C0A26C6D4B13806C6D4B13006D6C4B5A6D6D495B6D6D
495B010701F0010F13E06D01FE017F5B010090B7C7FC023F15FC020715E0020092C8FC03
0713E048437CC151>I<D90FFFEB0FFCB690383FFF8093B512E04B14F04B14F8923907FC
7FFC92390FE0FFFEC6EC1F806DD93F0113FF6D133E157E157C15F8A215F07013FEA24BEB
7FFCEF3FF8EF0FE04B90C7FCA55DB3B0B712F8A638417BC042>114
D<913A3FFF8007800107B5EAF81F011FECFE7F017F91B5FC48B8FC48EBE0014890C7121F
D80FFC1407D81FF0801600485A007F167F49153FA212FF171FA27F7F7F6D92C7FC13FF14
E014FF6C14F8EDFFC06C15FC16FF6C16C06C16F06C826C826C826C82013F1680010F16C0
1303D9007F15E0020315F0EC001F1500041F13F81607007C150100FC81177F6C163FA217
1F7EA26D16F0A27F173F6D16E06D157F6D16C001FEEDFF806D0203130002C0EB0FFE02FC
EB7FFC01DFB65A010F5DD8FE0315C026F8007F49C7FC48010F13E035437BC140>I<EC07
E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8FCA5
D8001F01E0C8FCB3AFEF0FC0AC171F6D6D1480A2173F6D16006F5B6D6D137E6D6D5B6DEB
FF836EEBFFF86E5C020F14C002035C9126003FFCC7FC325C7DDA3F>I<902607FFC0ED3F
FEB60207B5FCA6C6EE00076D826D82B3B3A260A360A2607F60183E6D6D147E4E7F6D6D49
48806D6DD907F0ECFF806D01FFEB3FE06D91B55A6E1500021F5C020314F8DA003F018002
F0C7FC51427BC05A>I<B700C00103B512FCA6C66C01C0C8381FFE006D6DED07F0A26D6D
5E190F6D6D5E191F6D606F153F6D95C7FC6F5DA26D6D157E19FE6D6E5C18016E5E701303
6E5E701307A26E6D5C180F6E6D5C181F6E6D5C183F6E93C8FC705BA26E6D13FEA26E6E5A
17816FEBC1F817C36F5C17E76F5C17FFA26F5CA26F5CA26F91C9FCA26F5BA36F5BA2705A
A2705AA2705AA2705A4E417DBF55>I E end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 268 302 a Ft(Solving)54 b(Resource-Constrained)d(Planning)k(T)
-13 b(asks)1606 542 y Fs(Jana)32 b(Ko)s(ehler)1409 659
y(Institut)g(f)s(\177)-51 b(ur)31 b(Informatik)1305 775
y(Alb)s(ert)h(Ludwigs)g(Univ)m(ersit\177)-49 b(at)1519
891 y(Am)32 b(Flughafen)g(17)1572 1007 y(79110)f(F)-8
b(reiburg)1150 1123 y(k)m(o)s(ehler@informatik.uni-freiburg.de)0
1449 y Fr(Abstract)0 1649 y Fq(This)28 b(pap)r(er)h(outlines)f(the)h
(basic)f(principles)g(underlying)0 1748 y(reasoning)e(ab)r(out)h
(resources)f(in)i Fp(IPP)p Fq(,)f(whic)n(h)h(is)f(a)h(classi-)0
1848 y(cal)f(planner)g(based)g(on)g(planning)g(graphs)g(originally)e
(in-)0 1948 y(tro)r(duced)32 b(with)h(the)g Fo(graphplan)g
Fq(system.)52 b(The)32 b(main)0 2047 y(idea)j(is)g(to)g(deal)g(with)g
(resources)e(in)j(a)e(strictly)h(action-)0 2147 y(cen)n(tered)44
b(w)n(a)n(y)-7 b(,)47 b(i.e.,)e(one)f(sp)r(eci\014es)g(ho)n(w)g(eac)n
(h)g(action)0 2246 y(consumes)h(or)h(pro)r(duces)f(resources,)k(but)d
(no)g(explicit)0 2346 y(temp)r(oral)37 b(mo)r(del)h(is)g(used.)67
b(This)38 b(a)n(v)n(oids)e(the)i(compu-)0 2446 y(tational)27
b(problems)f(of)i(solving)e(general)g(constrain)n(t)g(sat-)0
2545 y(isfaction)34 b(problems)f(b)n(y)h(using)g(instead)g(in)n(terv)-5
b(al)34 b(arith-)0 2645 y(metics)44 b(and)g(propagation)e(of)h
(resource)f(requiremen)n(ts)0 2745 y(o)n(v)n(er)26 b(time)i(steps)f(in)
h(the)g(planning)g(graph.)0 3070 y Fr(1)135 b(Actions)77
b(that)h(pro)l(vide,)86 b(pro-)202 3220 y(duce,)152 b(and)131
b(consume)g(Re-)202 3369 y(sources)0 3569 y Fq(The)24
b(starting)f(p)r(oin)n(t)h(for)f(the)h(language)e(extension)h(is)h(the)
0 3669 y(ADL)34 b(subset)f(that)g(is)g(a)n(v)-5 b(ailable)31
b(in)i Fp(IPP)h Fq(3.0)e([7)o(].)53 b(It)34 b(of-)0 3768
y(fers)j(univ)n(ersally)f(quan)n(ti\014ed)i(and)f(conditional)g
(e\013ects,)0 3868 y(atomic)28 b(negation,)g(equalit)n(y)g(as)g(w)n
(ell)g(as)g(quan)n(ti\014ed)g(and)0 3968 y(conditional)20
b(goals.)33 b(T)-7 b(o)21 b(reason)e(ab)r(out)i(resources,)g(an)f(ac-)0
4067 y(tion)143 4037 y Fn(1)208 4067 y Fq(description)27
b(is)g(extended)h(in)g(the)g(follo)n(wing)f(w)n(a)n(y:)60
4288 y(1.)41 b(F)-7 b(ollo)n(wing)25 b(the)i(\\ordinary)c
(preconditions")i(\(whic)n(h)166 4388 y(are)k(logical)f(facts\))i
Fm(r)l(esour)l(c)l(e)i(r)l(e)l(quir)l(ements)d Fq(can)g(b)r(e)166
4488 y(sp)r(eci\014ed.)60 4692 y(2.)41 b(E\013ect)57
b(descriptions)f(are)f(extended)i(to)g(sp)r(ecify)166
4792 y(whic)n(h)22 b(of)g(the)g(resource)e(v)-5 b(ariables)21
b(is)h Fm(pr)l(ovide)l(d)p Fq(,)j Fm(pr)l(o-)166 4892
y(duc)l(e)l(d)j Fq(or)f Fm(c)l(onsume)l(d)g Fq(b)n(y)h(the)g(action.)60
5096 y(3.)41 b(Database)28 b(query)h(sc)n(hemata)f(allo)n(w)g(for)h(a)g
(compact)166 5196 y(represen)n(tation)20 b(of)h(resource)e(requiremen)n
(ts)h(and)h(re-)166 5296 y(source)26 b(e\013ects.)p 0
5387 740 4 v 92 5441 a Fl(1)127 5464 y Fk(T)-6 b(o)24
b(a)n(v)n(oid)g(confusion,)f(w)n(e)h(sp)r(eak)g(of)g(actions)g(instead)
g(of)f(plan-)0 5543 y(ning)29 b(op)r(erators.)48 b(The)29
b(term)f(op)r(erator)i(is)e(reserv)n(ed)i(to)f(denote)i(a)0
5622 y(mathematical)23 b(op)r(erator)h(in)g(an)g(arithmetic)f
(expression.)2014 1449 y Fq(As)e(an)f(example,)h(consider)f(the)g
(follo)n(wing)g(t)n(w)n(o)f(actions)1931 1549 y(that)25
b(are)e(part)g(of)i(our)e(v)n(ersion)f(of)i(the)h Fm(airplane)h
Fq(example)1931 1648 y(used)i(b)n(y)f(the)h(ZENO)f(planner)g([9)o(].)
1931 1833 y Fj(\015y)p Fi(\(?x)43 b(?y:airport\))1931
1933 y(:p)g(at-plane\(?x\))c(\($gas)i Fh(\025)i Fi(distance\(?x)c
(?y\)/3\))1931 2032 y(:e)k(ADD)f(at-plane\(?y\))d(not)j
(at-plane\(?x\);)2062 2132 y(ALL)g(?p)h(passenger)d(boarded\(?p\))2413
2232 y(=>)i(ADD)h(at\(?p)e(?y\))i(not)f(at\(?p)g(?x\);)2062
2331 y($gas)99 b(-=)43 b(distance\(?x)c(?y\)/3;)2062
2431 y($time)55 b(+=)43 b(distance\(?x)c(?y\))k(*)g(\(3/20\))e(.)1931
2616 y Fj(refuel)p Fi(\(?x:location\))1931 2715 y(:p)i(at-plane\(?x\))
1931 2815 y(:e)g(ADD)f(full-plane\(\);)2062 2914 y($gas)99
b(:=)43 b(750;)2062 3014 y($time)55 b(+=)43 b(-0.08*$gas+60)38
b(|)44 b(60.)2014 3199 y Fq(The)36 b(action)f Fj(\015y)h
Fq(sp)r(eci\014es)f(what)h(happ)r(ens)f(when)h(an)1931
3298 y(airplane)42 b(\015ies)g(from)g(airp)r(ort)g Fg(x)g
Fq(to)h(airp)r(ort)e Fg(y)s Fq(.)81 b(As)43 b(a)1931
3398 y(precondition)36 b(it)g(needs)g(to)g(b)r(e)g(at)g(airp)r(ort)f
Fg(x)h Fq(and)g(as)f(a)1931 3497 y(resource)c(requiremen)n(t)g(there)h
(m)n(ust)h(b)r(e)f(enough)g(gas)f(in)1931 3597 y(the)20
b(tank)f(to)g(\015y)g(the)g(distance)g(b)r(et)n(w)n(een)g(the)h(t)n(w)n
(o)e(airp)r(orts)1931 3697 y(sp)r(eci\014ed)26 b(with)g
Fi($gas)42 b Fh(\025)h Fi(distance\(?x)c(?y\))j(/)h(3)p
Fq(.)36 b(W)-7 b(e)1931 3796 y(allo)n(w)35 b(the)i(distinguished)f
(binary)g(predicates)f(=)p Fg(;)14 b Fh(\024)p Fg(;)g
Fh(\025)p Fq(,)1931 3896 y(whic)n(h)45 b(mean)g(that)h(the)g(curren)n
(t)e(amoun)n(t)h(of)g(the)g(re-)1931 3996 y(source)25
b(v)-5 b(ariable)24 b Fi($gas)g Fq(sp)r(eci\014ed)i(as)f(the)g(\014rst)
h(argumen)n(t)1931 4095 y(m)n(ust)43 b(b)r(e)f(either)g
Fm(e)l(qual)p Fq(,)47 b Fm(lower-than)p Fq(,)f(or)c Fm(gr)l(e)l
(ater-than)1931 4195 y Fq(the)e(arithmetic)e(expression)g(follo)n(wing)
g(as)g(the)h(second)1931 4294 y(argumen)n(t.)44 b(An)30
b(arithmetic)g(expression)f(can)h(con)n(tain)f(a)1931
4394 y(database)35 b(query)f(sc)n(hema)h(suc)n(h)g(as)g
Fi(distance\(?x)k(?y\))1931 4494 y Fq(together)c(with)g(an)g
(arithmetic)g(term)g(built)h(out)f(of)g(the)1931 4593
y(four)e(basic)f(mathematical)h(op)r(erations)e(and)i(real)f(n)n(um-)
1931 4693 y(b)r(ers.)38 b(When)29 b(the)f(action)f(gets)h(instan)n
(tiated,)g(the)g(query)1931 4793 y(sc)n(hema)33 b(is)h(instan)n(tiated)
f(in)n(to)g(a)h(database)e(query)h(suc)n(h)1931 4892
y(as)h Fi(distance\(Basel)k(Paris\))32 b Fq(for)i(whic)n(h)h(the)f(sp)r
(eci\014c)1931 4992 y(v)-5 b(alue)25 b(is)g(found)g(in)g(the)g(asso)r
(ciated)f(database.)35 b(T)-7 b(ogether)1931 5091 y(with)34
b(the)g(arithmetic)f(term)g(it)h(can)f(b)r(e)g(simpli\014ed)h(to)f(a)
1931 5191 y(single)d(real)e(n)n(um)n(b)r(er)i(yielding)f
Fi($gas)42 b Fh(\025)i Fi(200)28 b Fq(as)h(the)h(re-)1931
5291 y(source)20 b(requiremen)n(t)g(of)h(the)g(action)f(instance)h
Fj(\015y\(Basel)1931 5390 y(P)m(aris\))p Fq(.)2203 5360
y Fn(2)p 1931 5466 V 2024 5520 a Fl(2)2058 5543 y Fk(F)-6
b(or)34 b(eac)n(h)h(resource)g(v)l(ariable)f(a)g(unit)g(measure)g(is)f
(assumed)1931 5622 y(that)25 b(remains)d(implicit)g(in)h(the)i
(planner.)p eop
%%Page: 2 2
2 1 bop 83 36 a Fq(As)28 b(an)f(e\013ect)h(of)g(the)g(action,)f
Fi($gas)f Fq(is)i(consumed)f(\(in-)0 135 y(dicated)i(b)n(y)g(the)g
(assignmen)n(t)f(op)r(erator)g Fi(-=)p Fq(\))g(and)h
Fi($time)0 235 y Fq(is)39 b(\\pro)r(duced")e(\(indicated)i(b)n(y)g
Fi(+=)p Fq(\),)i(i.e.,)e(it)g(adv)-5 b(ances)0 335 y(on)34
b(a)g(discrete)f(scale)g(of)i(time)f(units)h(when)f(actions)f(are)0
434 y(executed.)60 b(Pro)r(ducers)33 b(\()p Fi(+=)p Fq(\))i(and)g
(consumers)f(\()p Fi(-=)p Fq(\))h(in-)0 534 y(crease)27
b(or)g(decrease)g(a)h(resource)f(relativ)n(e)g(to)i(its)f(curren)n(t)0
634 y(v)-5 b(alue,)24 b(e.g.,)e(if)h Fi($gas)e Fq(is)i(decreased)f(b)n
(y)g(200)f(b)n(y)i(the)g(action)0 733 y Fj(\015y\(Basel)31
b(P)m(aris\))e Fq(and)e(its)h(curren)n(t)e(v)-5 b(alue)27
b(is)h(300)e(then)0 833 y(the)i(new)g(v)-5 b(alue)27
b(of)h Fi($gas)e Fq(results)h(with)h(100.)83 936 y(Tw)n(o)d(more)g
(kinds)h(of)f(e\013ects)h(are)f(allo)n(w)n(ed)f(and)i(sho)n(wn)0
1035 y(in)33 b(the)g(action)f Fj(refuel)p Fq(.)53 b(First,)34
b(it)f(assigns)e(to)i Fi($gas)e Fq(the)0 1135 y(absolute)41
b(v)-5 b(alue)42 b(of)g(750)f(indep)r(enden)n(tly)i(of)f(its)g(previ-)0
1235 y(ous)j(v)-5 b(alue)45 b(\(indicated)g(with)h(the)g(assignmen)n(t)
e(op)r(era-)0 1334 y(tor)e Fi(:=)p Fq(\),)47 b(i.e.,)c
Fj(refuel)f Fq(is)h(a)g Fm(pr)l(ovider)i Fq(of)d Fi($gas)p
Fq(.)82 b(Sec-)0 1434 y(ond,)53 b(the)c(time)g(for)e(refueling)h(dep)r
(ends)h(on)f(the)g(gas)0 1533 y(amoun)n(t)34 b(that)g(is)h(needed)f(b)n
(y)g(the)h(airplane.)56 b(W)-7 b(e)34 b(allo)n(w)0 1633
y(for)26 b(a)g(limited)h(form)g(of)f(in)n(terdep)r(endencies)h(b)r(et)n
(w)n(een)f(re-)0 1733 y(source)j(v)-5 b(ariables)29 b(where)g(one)h(v)
-5 b(ariable)29 b(can)h(dep)r(end)h(on)0 1832 y(atmost)20
b(another)f(one)h(via)f(a)h(linear)f(equation)h(of)g(the)h(form)0
1932 y Fg(y)35 b Fq(=)e Fg(mx)22 b Fq(+)g Fg(b)p Fq(.)54
b(E\013ects)33 b(without)h(resource)e(in)n(terdep)r(en-)0
2032 y(dencies)27 b(are)g(are)g(referred)f(to)i(as)e
Fm(simple)p Fq(.)83 2134 y(In)19 b(the)h(\014rst)e(protot)n(yp)r(e,)i
(w)n(e)f(do)g(not)g(allo)n(w)f(in)n(terdep)r(en-)0 2234
y(dency)27 b(c)n(hains)g(where)g Fi($x)g Fq(dep)r(ends)g(on)g
Fi($y)p Fq(,)g(whic)n(h)h(again)0 2334 y(could)i(dep)r(end)h(on)f
Fi($z)g Fq(etc.)45 b(The)30 b(action)g(also)f(sho)n(ws)h(an)0
2433 y(expression)25 b(of)h(the)h(form)f Fh(j)p Fp(NUMBER)o
Fq(,)h(whic)n(h)f(represen)n(ts)0 2533 y(a)35 b Fm(worst-c)l(ase)h
(value)p Fq(,)i(i.e.,)d Fi($time)e Fq(will)i(at)g(most)g(b)r(e)g(in-)0
2632 y(creased)27 b(b)n(y)i(60)e(min)n(utes)i(\(if)h(this)f(is)f(the)h
(assumed)f(unit\))0 2732 y(when)g(re\014lling)f(the)h(maxim)n(um)f
(amoun)n(t)g(of)h(750.)0 3023 y Fr(2)135 b(Planning)87
b(Problems)h(in)l(v)l(olv-)202 3173 y(ing)45 b(Resources)0
3361 y Fq(The)19 b(sp)r(eci\014cation)g(of)h(a)f(planning)g(problem)f
(includes)i(the)0 3460 y(usual)27 b(declaration)f(of)i(constan)n(ts)f
(and)g(their)h(t)n(yp)r(es,)f(i.e.,)0 3687 y Fi(passenger:)83
b(Dan)42 b(Ernie)g(Scott;)0 3786 y(location:)127 b(Paris)42
b(Basel)f(London;)0 3982 y Fq(a)48 b(declaration)f([dmin,dmax])i(of)f
(the)h(minim)n(um)g(and)0 4081 y(maxim)n(um)27 b(v)-5
b(alues)28 b(eac)n(h)e(resource)g(v)-5 b(ariable)27 b(can)g(tak)n(e)0
4308 y Fi($time:)85 b([0,)42 b Fh(1)p Fi(\);)0 4407 y($gas:)129
b([0,750];)0 4603 y Fq(and)29 b(the)g(database)f(information)h(\(since)
g(no)g(connection)0 4702 y(to)e(a)h(real)e(database)h(is)g(implemen)n
(ted)h(y)n(et\))g(suc)n(h)f(as)0 4929 y Fi(database:)83
b(distance\(Paris)38 b(Basel\))154 b(600)479 5028 y(distance\(Paris)38
b(London\))110 b(400)479 5128 y(distance\(Basel)38 b(Paris\))154
b(600)479 5228 y(distance\(Basel)38 b(London\))110 b(800.)0
5423 y Fq(The)40 b(sp)r(eci\014cation)g(of)g(the)g(initial)g(state)g
(sp)r(eci\014es)g(the)0 5523 y(usual)24 b(logical)f(facts)i(and)f
(assigns)f(v)-5 b(alues)24 b(to)g Fm(al)t(l)i Fq(resource)0
5622 y(v)-5 b(ariables)24 b(that)i(are)e(in)n(v)n(olv)n(ed)g(in)h(the)h
(planning)f(problem)1931 36 y Fi(initial:)84 b($time=0)41
b($gas=300)2367 135 y(checked-in\(Ernie\))c(checked-in\(Scot)o(t\))2367
235 y(at-plane\(Basel\))h(at\(Ernie)i(Paris\))2367 335
y(at\(Dan)h(Paris\))g(at\(Scott)g(Basel\).)1931 555 y
Fq(The)48 b(goal)e(sp)r(eci\014cation)i(con)n(tains)e(resource)g
(require-)1931 655 y(men)n(ts)28 b(together)g(with)g(logical)f(facts)h
(that)h(ha)n(v)n(e)e(to)h(hold)1931 754 y(in)g(the)g(goal)e(state:)1931
984 y Fi(goal:)85 b($time)42 b Fh(\024)h Fi(330)2236
1083 y(at\(Ernie)e(London\))f(at\(Scott)h(London\).)1931
1303 y Fq(This)25 b(states)f(the)h(planning)f(problem)g(to)g(\015y)h(t)
n(w)n(o)f(passen-)1931 1403 y(gers)29 b(from)i(t)n(w)n(o)e(di\013eren)n
(t)i(lo)r(cations)e(to)i(London)e(in)i(less)1931 1503
y(than)d(330)e(min)n(utes,)i(i.e.,)g(5)2821 1470 y Fn(1)p
2820 1484 34 4 v 2820 1531 a(2)2891 1503 y Fq(hours.)1931
1827 y Fr(3)135 b(Planning)76 b(Graphs)f(with)h(Re-)2133
1976 y(source)45 b(Time)g(Maps)1931 2176 y Fq(T)-7 b(o)27
b(build)i(planning)e(graphs,)f(all)h(v)-5 b(alid)28 b(instances)f(of)g
(ap-)1931 2275 y(plicable)32 b(actions)e(are)h(determined.)49
b(The)31 b(instan)n(tiation)1931 2375 y(of)i(a)g(database)f(query)g(sc)
n(hema)g(is)h(a)g(sp)r(eci\014c)g(query)f(re-)1931 2475
y(turning)g(the)g(v)-5 b(alue)32 b(from)f(the)i(database.)48
b(This)32 b(means,)1931 2574 y(an)39 b(instan)n(tiated)g(action)f(can)h
(only)g(require)f(a)g(sp)r(eci\014c)1931 2674 y(n)n(umerical)20
b(v)-5 b(alue)20 b(as)f(a)h(resource)e(requiremen)n(t)i(in)g(its)g
(pre-)1931 2773 y(conditions)30 b(suc)n(h)g(as)g($)p
Fg(time)c Fh(\024)h Fq(100)i(or)g($)p Fg(g)s(as)e Fq(=)g(50.)44
b(Re-)1931 2873 y(source)34 b(e\013ects)h(are)e(reduced)i(to)f(an)h(op)
r(erator)e(follo)n(w)n(ed)1931 2973 y(b)n(y)28 b(a)g(n)n(umerical)g(v)
-5 b(alue)28 b(or)g(to)g(an)g(op)r(erator)f(follo)n(w)n(ed)g(b)n(y)1931
3072 y(a)g(linear)g(equation)g(con)n(taining)g(one)g(resource)f(v)-5
b(ariable.)2014 3181 y(The)29 b(\014rst)f(la)n(y)n(er)f(in)i(the)g
(planning)g(graph)e(is)i(obtained)1931 3281 y(from)42
b(the)h(logical)f(facts)g(in)h(the)g(initial)f(state)h(sp)r(eci\014-)
1931 3381 y(cation.)62 b(T)-7 b(ogether)35 b(with)h(the)h(graph,)g(a)e
Fm(r)l(esour)l(c)l(e)i(time)1931 3480 y(map)e Fq(R)-7
b(TM)34 b(is)g(built)g(that)g(records)f(the)h(p)r(ossible)f(in)n(ter-)
1931 3580 y(v)-5 b(al)30 b(b)r(oundaries)g([tmin\(n,$r\),tmax\(n,$r\)])
g(for)g(eac)n(h)f(re-)1931 3679 y(source)e(v)-5 b(ariable)26
b($)p Fg(r)k Fq(at)e(eac)n(h)e(time)j(step)e Fg(n)p Fq(.)37
b(The)28 b(initial-)1931 3779 y(ization)34 b(of)h(the)f(in)n(terv)-5
b(als)34 b(at)g(time)h(step)g(0)f(is)g(based)g(on)1931
3879 y(the)i(sp)r(eci\014cation)g(of)f(the)h(initial)g(state.)61
b(F)-7 b(or)35 b(example)1931 3978 y Fi(>$money)41 b
Fh(\025)i Fi(200)24 b Fq(leads)h(to)g([200,)g(+)p Fh(1)p
Fq(\))g(and)g Fi($debts)41 b Fh(\024)1931 4078 y Fi(10,)i($debts)e
Fh(\025)i Fi(5)28 b Fq(leads)f(to)h([5,10].)38 b(This)28
b(w)n(a)n(y)-7 b(,)27 b(w)n(e)h(can)1931 4178 y(also)g(represen)n(t)g
(uncertain)n(t)n(y)g(ab)r(out)h(the)h(exact)e(amoun)n(t)1931
4277 y(of)g(a)f(resource)f(that)i(is)f(initially)h(a)n(v)-5
b(ailable.)2327 4501 y(time)28 b(step)p 2712 4531 4 100
v 180 w($gas)p 3130 4531 V 178 w($time)p 2277 4534 1158
4 v 2474 4604 a(0)p 2712 4634 4 100 v 247 w([300,300])p
3130 4634 V 123 w([0,0])2014 4825 y(F)-7 b(rom)57 b(eac)n(h)f(action)g
(instance)g Fg(a)h Fq(\(in)h(the)f(follo)n(w-)1931 4925
y(ing)63 b(denoted)f(with)h(action\),)72 b(its)62 b(sp)r(eci\014c)h
(require-)1931 5024 y(men)n(ts)40 b(for)f(resource)e($)p
Fg(r)42 b Fq(\(represen)n(ted)c(as)h(an)g(in)n(terv)-5
b(al)1931 5124 y([rmin\(a,$r\),rmax\(a,$r\)]\))45 b(and)i(a)g
(computational)g(in-)1931 5224 y(struction)26 b(for)g(eac)n(h)f
(resource)g(that)h(it)h(a\013ects)f(are)f(deter-)1931
5323 y(mined.)46 b(If)31 b(no)f(resource)f(requiremen)n(t)g(is)i(sp)r
(eci\014ed,)g(the)1931 5423 y(action)18 b(is)h(applicable)e(if)i(the)g
(resource)e(tak)n(es)g(an)i(arbitrary)1931 5523 y(v)-5
b(alue)26 b(sp)r(eci\014ed)h(b)n(y)f(\()p Fh(\0001)p
Fg(;)14 b Fq(+)p Fh(1)p Fq(\).)36 b(F)-7 b(or)26 b(the)h(example,)f(w)n
(e)1931 5622 y(obtain)p eop
%%Page: 3 3
3 2 bop 133 23 a Fq(action)p 565 52 4 100 v 262 w($gas)p
1242 52 V 517 w($time)p 83 56 1893 4 v 133 126 a Fj(\015y\(B)32
b(P\))p 565 155 4 100 v 142 w Fq(p:)37 b([200)p Fg(;)14
b Fq(+)p Fh(1)p Fq(\))p 1242 155 V 204 w(\()p Fh(\0001)p
Fg(;)g Fq(+)p Fh(1)p Fq(\))p 565 255 V 617 225 a(e:)37
b Fh(\000)22 b Fq(=)h(200)p 1242 255 V 278 w(+)g(=)f(90)133
325 y Fj(\015y\(B)32 b(L\))p 565 355 V 150 w Fq(p:)37
b([266)p Fg(:)p Fq(67)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))p
1242 355 V 97 w(\()p Fh(\0001)p Fg(;)g Fq(+)p Fh(1)p
Fq(\))p 565 454 V 617 424 a(e:)37 b Fh(\000)22 b Fq(=)h(266)p
Fg(:)p Fq(67)p 1242 454 V 171 w(+)g(=)f(120)133 524 y
Fj(\015y\(P)32 b(L\))p 565 554 V 153 w Fq(p:)37 b([133)p
Fg(:)p Fq(33)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))p 1242 554
V 97 w(\()p Fh(\0001)p Fg(;)g Fq(+)p Fh(1)p Fq(\))p 565
654 V 617 624 a(e:)37 b Fh(\000)22 b Fq(=)h(133)p Fg(:)p
Fq(33)p 1242 654 V 171 w(+)g(=)f(60)133 723 y Fj(refuel\(B\))p
565 753 V 106 w Fq(p:)37 b(\()p Fh(\0001)p Fg(;)14 b
Fq(+)p Fh(1)p Fq(\))p 1242 753 V 173 w(\()p Fh(\0001)p
Fg(;)g Fq(+)p Fh(1)p Fq(\))p 565 853 V 617 823 a(e:)37
b(:=)22 b(750)p 1242 853 V 343 w(+)h(=)f Fh(\000)p Fq(0)p
Fg(:)p Fq(08)17 b Fh(\003)h Fq($)p Fg(g)s(as)p 565 952
V 1242 952 V 1385 923 a Fq(+60)c Fh(j)g Fq(60)133 1022
y Fj(b)s(oard\(P\))p 565 1052 V 103 w Fq(p:)37 b(\()p
Fh(\0001)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))p 1242 1052
V 173 w(\()p Fh(\0001)p Fg(;)g Fq(+)p Fh(1)p Fq(\))133
1122 y Fj(b)s(oard\(B\))p 565 1152 V 100 w Fq(e:)p 1242
1152 V 616 w(+)23 b(=)f(30)83 1269 y(Pro)n(viders)58
b(can)i(assign)f(arbitrary)g(v)-5 b(alues)60 b(to)g(re-)0
1368 y(sources,)45 b(while)e(pro)r(ducers)e(and)i(consumers)f(are)f
(lim-)0 1468 y(ited)e(to)f(p)r(ositiv)n(e)g(v)-5 b(alues.)69
b(F)-7 b(or)38 b(example,)j(one)d(cannot)0 1568 y(declare)25
b Fi($gas)42 b(+=)h(-500)p Fq(,)25 b(i.e.,)i(that)g(an)f(action)g(is)g
(a)g(pro-)0 1667 y(ducer,)j(but)g(the)h(instruction)e(w)n(ould)h(in)g
(fact)g(decremen)n(t)0 1767 y(the)i(v)-5 b(alue)31 b(of)g(the)h
(resource.)46 b(Linear)30 b(equations)g(are)g(al-)0 1866
y(lo)n(w)n(ed)25 b(for)g(pro)n(viders,)g(pro)r(ducers,)g(and)h
(consumers,)f(but)0 1966 y(also)c(ha)n(v)n(e)h(to)g(return)g(p)r
(ositiv)n(e)h(v)-5 b(alues)22 b(for)g(the)h(latter)f(t)n(w)n(o)0
2066 y(action)27 b(t)n(yp)r(es.)0 2251 y Fj(De\014nition)k(1)41
b Fm(Given)115 b(a)g(r)l(esour)l(c)l(e)f(r)l(e)l(quir)l(ement)0
2350 y Fq([)p Fg(r)r(min)p Fq(\()p Fg(a;)14 b Fq($)p
Fg(r)r Fq(\))p Fg(;)g(r)r(max)p Fq(\()p Fg(a;)g Fq($)p
Fg(r)r Fq(\)])126 b Fm(of)e(an)f(action)h Fg(a)0 2450
y Fm(wrt.)95 b(a)g(r)l(esour)l(c)l(e)g Ff($)p Fm(r)f(and)h(the)g(R)-6
b(TM)95 b(inter-)0 2549 y(val)100 b Fq([)p Fg(tmin)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])101 b Fm(for)f Ff($)p
Fm(r)f(at)h Fg(n)p Fm(,)0 2649 y(the)c(r)l(esour)l(c)l(e)g(r)l(e)l
(quir)l(ement)f(is)i Fq(p)r(ossibly)i(satis-)0 2749 y(\014able)h
Fm(at)h Fg(n)f Fm(i\013)h Fq([)p Fg(r)r(min)p Fq(\()p
Fg(a;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(r)r(max)p Fq(\()p
Fg(a;)g Fq($)p Fg(r)r Fq(\)])72 b Fh(\\)0 2848 y Fq([)p
Fg(tmin)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])24 b Fh(6)p Fq(=)e
Fh(;)p Fm(.)0 3033 y Fj(De\014nition)31 b(2)41 b Fm(A)32
b(simple)i(r)l(esour)l(c)l(e)f(e\013e)l(ct)f Fq($)p Fg(r)j
Fp(OP)c(N)i Fm(is)0 3132 y Fq(imp)r(ossible)d Fm(i\013)253
3316 y Fg(tmin)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))k(+)g
Fp(N)23 b Fg(>)f(dmax)31 b Fm(if)f Fp(OP)g Fm(is)g Fq(+)23
b(=)253 3440 y Fg(tmax)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r
Fq(\))19 b Fh(\000)f Fp(N)23 b Fg(<)f(dmin)30 b Fm(if)g
Fp(OP)g Fm(is)g Fh(\000)23 b Fq(=)208 3565 y Fp(N)g Fh(62)g
Fq([)p Fg(dmax)p Fq(\($)p Fg(r)r Fq(\))p Fg(;)14 b(dmin)p
Fq(\($)p Fg(r)r Fq(\)])32 b Fm(if)e Fp(OP)g Fm(is)g Fq(:=)0
3749 y Fj(De\014nition)h(3)41 b Fm(A)n(n)d(action)h Fg(a)g
Fm(is)g Fq(applicable)f Fm(to)h(a)g(fact)0 3848 y(level)31
b Fg(n)e Fm(in)h(the)g(gr)l(aph)h(i\013)57 4016 y(1.)42
b(its)31 b(lo)l(gic)l(al)h(pr)l(e)l(c)l(onditions)g(ar)l(e)g
(non-exclusive)e(in)h Fg(n)166 4115 y Fm(and)57 4236
y(2.)42 b(al)t(l)29 b(its)f(r)l(esour)l(c)l(e)f(r)l(e)l(quir)l(ements)g
(ar)l(e)h Fq(p)r(ossibly)d(satis-)166 4335 y(\014able)k
Fm(in)h Fg(n)g Fm(and)57 4456 y(3.)42 b(none)30 b(of)g(its)g(simple)h
(e\013e)l(cts)e(is)h(imp)l(ossible.)83 4640 y Fq(The)19
b(exclusivit)n(y)f(relation)g(o)n(v)n(er)f(pairs)h(of)g(actions)g(is)h
(ex-)0 4740 y(tended)31 b(in)g(suc)n(h)g(a)f(w)n(a)n(y)g(that)h(a)f
(parallel)g(set)g(of)h(actions)0 4840 y(causes)26 b(the)h(same)f
(resource)f(e\013ects)i(indep)r(enden)n(tly)g(of)g(a)0
4939 y(particular)e(linearization)g(of)i(the)g(actions.)35
b(This)27 b(restric-)0 5039 y(tion)d(eliminates)g(all)g(p)r(ossible)g
(resource)f(con\015icts)h(within)0 5138 y(parallel)19
b(actions)h(and)g(leads)g(to)h(a)f(unique)h(resulting)f(state)0
5238 y(with)28 b(resp)r(ect)e(to)h(resources)f(indep)r(enden)n(tly)h
(of)g(the)h(exe-)0 5338 y(cution)g(order)e(of)h(the)h(actions.)0
5523 y Fj(De\014nition)j(4)41 b Fm(Two)27 b(actions)g(ar)l(e)g(marke)l
(d)g(as)f Fq(exclusiv)n(e)0 5622 y Fm(if)31 b(one)f(of)g(the)g(fol)t
(lowing)i(holds)1988 36 y(1.)42 b(they)e(ar)l(e)f(exclusive)h(wrt.)f
(their)h(lo)l(gic)l(al)g(e\013e)l(cts)f(or)2097 135 y(pr)l(e)l(c)l
(onditions)31 b([7)q(])1988 304 y(2.)42 b(they)33 b(b)l(elong)f(to)g
(di\013er)l(ent)g(action)h(typ)l(es,)g(i.e.,)h(c)l(on-)2097
404 y(sumers,)c(pr)l(oviders,)i(and)e(pr)l(o)l(duc)l(ers)g(ar)l(e)h
(exclusive)1988 572 y(3.)42 b(b)l(oth)27 b(actions)h(ar)l(e)f(pr)l
(oviders)i(of)f(the)e(same)i(r)l(esour)l(c)l(e)1988 741
y(4.)42 b(one)e(a\013e)l(cts)f(a)h(r)l(esour)l(c)l(e)f(variable)j(that)
d(o)l(c)l(curs)g(in)2097 840 y(the)30 b(line)l(ar)h(e)l(quation)f(of)g
(the)g(other's)h(e\013e)l(cts)1988 1009 y(5.)42 b(their)52
b(c)l(ombine)l(d)g(simple)g(e\013e)l(cts)e(ar)l(e)i(imp)l(ossible)2097
1108 y(b)l(ase)l(d)31 b(on)f(De\014nition)f(2.)1988 1277
y(6.)42 b(b)l(oth)32 b(have)g(c)l(ontr)l(adictory)h(r)l(esour)l(c)l(e)e
(r)l(e)l(quir)l(ements,)2097 1376 y(i.e.,)26 b(the)d(interse)l(ction)h
(of)g(the)f(c)l(orr)l(esp)l(onding)i(inter-)2097 1476
y(vals)31 b(for)f(the)g(same)g(r)l(esour)l(c)l(e)g(is)g(empty.)2014
1661 y Fq(The)c(next)g(fact)g(lev)n(el)g(in)g(the)g(graph)f(is)h(built)
h(as)e(usual,)1931 1761 y(i.e.,)i(all)f(e\013ects)g(whose)g(e\013ect)g
(conditions)g(can)g(probably)1931 1860 y(b)r(e)38 b(made)g(true)g(are)f
(added)g(to)h(the)g(lev)n(el)f(and)h(the)g(ap-)1931 1960
y(propriate)27 b(ADD)j(and)e(DEL)g(edges)g(are)f(dra)n(wn.)38
b(Logical)1931 2060 y(facts)26 b(are)f(mark)n(ed)f(as)h(exclusiv)n(e)g
(as)h(b)r(efore,)f(see)h([7)o(].)37 b(Re-)1931 2159 y(source)27
b(e\013ects)i(up)r(date)g(the)f(resource)f(time)i(map)f(at)g(the)1931
2259 y(next)g(lev)n(el)f(based)g(on)h(the)g(follo)n(wing)e(rules:)1931
2445 y Fj(De\014nition)31 b(5)41 b Fm(Given)51 b Fq([)p
Fg(tmin)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])51 b Fm(as)1931
2544 y(the)f(interval)g(for)g(a)f(r)l(esour)l(e)g Ff($)p
Fm(r)g(at)g(time)g(step)g Fg(n)g Fm(in)1931 2644 y(the)38
b(R)-6 b(TM,)38 b(to)f(c)l(ompute)g(the)h(new)f(interval)h
Fq([)p Fg(tmin)p Fq(\()p Fg(n)24 b Fq(+)1931 2743 y(1)p
Fg(;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p Fq(\()p
Fg(n)i Fq(+)g(1)p Fg(;)e Fq($)p Fg(r)r Fq(\)])28 b Fm(for)i
Ff($)p Fm(r)e(at)h(time)f(step)h Fg(n)16 b Fq(+)f(1)28
b Fm(we)1931 2843 y(do)j(the)f(fol)t(lowing:)1931 2943
y(\(1\))40 b(If)f(no)g(action)h Fg(a)f Fm(a\013e)l(cts)g(the)h(r)l
(esour)l(c)l(e)f Ff($)p Fm(r)f(at)h(time)1931 3043 y(step)45
b Fg(n)f Fm(then)h Fq([)p Fg(tmin)p Fq(\()p Fg(n)29 b
Fq(+)g(1)p Fg(;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n)29 b Fq(+)g(1)p Fg(;)14 b Fq($)p Fg(r)r
Fq(\)])50 b(=)1931 3143 y([)p Fg(tmin)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p Fq(\()p Fg(n;)g
Fq($)p Fg(r)r Fq(\)])p Fm(.)1931 3243 y(\(2\))36 b(Otherwise,)i(for)e
(al)t(l)h(actions)f Fg(a)f Fm(that)h(a\013e)l(ct)f(the)h(r)l(e-)1931
3342 y(sour)l(c)l(e)h Ff($)p Fm(r:)54 b(If)37 b(the)h(e\013e)l(ct)f(of)
h Fg(a)f Fm(on)h Ff($)p Fm(r)e(c)l(ontains)i(a)f(lin-)1931
3442 y(e)l(ar)31 b(e)l(quation,)g(it)g(is)g(r)l(eplac)l(e)l(d)g(by)g
(the)g(worst-c)l(ase)f(value,)1931 3542 y(i.e.,)i(e)l(ach)f(r)l(esour)l
(c)l(e)e(e\013e)l(ct)h(is)g(simpli\014e)l(d)h(to)f Fp(OP)23
b(N)3583 3557 y Fn(\()p Fe(a)p Fn(\))3668 3542 y Fm(.)1931
3642 y(If)39 b Ff($)p Fm(r)f(is)g(the)g(distinguishe)l(d)i(r)l(esour)l
(c)l(e)e(variable)i Fi($time)p Fm(,)1931 3741 y(which)32
b(c)l(an)d(only)i(b)l(e)f(\\pr)l(o)l(duc)l(e)l(d")2014
3867 y Fg(tmin)p Fq(\()p Fg(n)18 b Fq(+)g(1)p Fg(;)c
Fq($)p Fg(r)r Fq(\))23 b(=)g Fg(tmin)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))2014 3967 y Fg(tmax)p Fq(\()p Fg(n)19
b Fq(+)f(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))23 b(=)g Fj(MAX)2810
4017 y Fd(a)2962 3967 y Fq([)p Fg(tmax)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))19 b(+)f Fp(N)3572 3982 y Fn(\()p
Fe(a)p Fn(\))3657 3967 y Fq(])1931 4122 y Fm(F)-6 b(or)54
b(al)t(l)g(other)g(r)l(esour)l(c)l(e)f(variables)j Ff($)p
Fm(r)d(we)g(c)l(ompute)1931 4222 y(the)44 b(interval)g(b)l(oundaries)h
(for)f(maximal)h(sets)e(of)h(non-)1931 4322 y(exclusive)37
b(actions)g(that)f(a\013e)l(ct)g(a)h(r)l(esour)l(c)l(e,)h(i.e.,)g
(given)1931 4421 y(an)26 b(action)h(the)f(se)l(ar)l(ch)h(algorithm)h
(adds)f(to)f(it)g(al)t(l)h(actions)1931 4521 y(that)35
b(ar)l(e)h(non-exclusive)f(and)h(whose)g(c)l(ombine)l(d)g(simple)1931
4620 y(r)l(esour)l(c)l(e)e(e\013e)l(cts)f(ar)l(e)h(p)l(ossible.)53
b(This)35 b(set)e(c)l(onstruction)1931 4720 y(is)39 b(r)l(ep)l(e)l(ate)
l(d)f(for)h(al)t(l)g(actions)f(that)g(o)l(c)l(cur)g(at)g(an)g(action)
1931 4820 y(level)31 b(in)f(the)g(gr)l(aph.)1931 4920
y(F)-6 b(or)30 b(e)l(ach)g(set)f Fg(s)g Fm(of)h Fg(k)i
Fm(non-exclusive)d Fq(pro)r(ducers)e Fm(of)j Ff($)p Fm(r)f(a)1931
5020 y(new)h(upp)l(er)g(interval)h(b)l(oundary)2014 5145
y Fg(tmax)p Fq(\()p Fg(n)19 b Fq(+)f(1)p Fg(;)c Fq($)p
Fg(r)r Fq(\))2584 5157 y Fd(s)2643 5145 y Fq(=)22 b Fg(tmax)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))19 b(+)3259 5083
y Fc(P)3346 5104 y Fd(k)3346 5170 y(a)p Fn(=1)3484 5145
y Fp(N)3543 5160 y Fn(\()p Fe(a)p Fn(\))1931 5271 y Fm(F)-6
b(or)28 b(e)l(ach)g(set)e Fg(s)h Fm(of)h Fg(k)i Fm(non-exclusive)d
Fq(consumers)f Fm(of)i Ff($)p Fm(r)e(a)1931 5371 y(new)k(lower)h
(interval)f(b)l(oundary)2014 5496 y Fg(tmin)p Fq(\()p
Fg(n)18 b Fq(+)g(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))2571
5508 y Fd(s)2630 5496 y Fq(=)22 b Fg(tmin)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))19 b Fh(\000)3233 5434 y Fc(P)3320
5455 y Fd(k)3320 5521 y(a)p Fn(=1)3458 5496 y Fp(N)3517
5511 y Fn(\()p Fe(a)p Fn(\))1931 5622 y Fm(F)-6 b(or)30
b(al)t(l)h Fq(pro)n(viders)d Fg(a)h Fm(of)i Ff($)p Fm(r)p
eop
%%Page: 4 4
4 3 bop 83 36 a Fg(tmin)p Fq(\()p Fg(n)18 b Fq(+)g(1)p
Fg(;)c Fq($)p Fg(r)r Fq(\))640 48 y Fd(s)698 36 y Fq(=)23
b Fj(MIN)885 86 y Fd(a)1019 36 y Fp(N)1078 51 y Fn(\()p
Fe(a)p Fn(\))83 167 y Fg(tmax)p Fq(\()p Fg(n)c Fq(+)f(1)p
Fg(;)c Fq($)p Fg(r)r Fq(\))653 179 y Fd(s)711 167 y Fq(=)23
b Fj(MAX)914 216 y Fd(a)1066 167 y Fp(N)1125 182 y Fn(\()p
Fe(a)p Fn(\))0 319 y Fm(We)39 b(obtain)g(individual)h(interval)g(b)l
(oundaries)f(for)g(e)l(ach)0 419 y(maximal)46 b(set)e(of)i
(non-exclusive)f(pr)l(o)l(duc)l(ers)g(and)g(c)l(on-)0
519 y(sumers)24 b(and)i(the)f(lar)l(gest)g(absolute)g(incr)l(e)l(ase)g
(or)g(de)l(cr)l(e)l(ase)0 618 y(of)43 b(a)g(r)l(esour)l(c)l(e)f(that)g
(c)l(an)g(b)l(e)h(achieve)l(d)h(when)f(a)g(single)0 718
y(pr)l(ovider)32 b(is)e(sele)l(cte)l(d.)83 819 y(F)-6
b(urthermor)l(e,)26 b(the)f(interval)h(b)l(oundaries)g(at)f(time)g
(step)0 919 y Fg(n)i Fm(ar)l(e)g(pr)l(op)l(agate)l(d)i(to)e(time)g
(step)g Fg(n)12 b Fq(+)g(1)26 b Fm(to)h(yield)h(another)0
1019 y(p)l(air)j(of)f(interval)h(b)l(oundaries)83 1147
y Fg(tmin)p Fq(\()p Fg(n)18 b Fq(+)g(1)p Fg(;)c Fq($)p
Fg(r)r Fq(\))640 1159 y Fd(s)698 1147 y Fq(=)23 b Fg(tmin)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))83 1249 y Fg(tmax)p
Fq(\()p Fg(n)19 b Fq(+)f(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))653
1261 y Fd(s)711 1249 y Fq(=)23 b Fg(tmax)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))0 1377 y Fm(The)39 b(new)f(interval)h(for)g(the)f
(r)l(esour)l(c)l(e)g Ff($)p Fm(r)f(at)h(time)g(step)0
1477 y Fg(n)18 b Fq(+)g(1)30 b Fm(in)f(the)h(R)-6 b(TM)30
b(is)g(now)g(obtaine)l(d)h(as)83 1605 y Fq([)p Fg(tmin)p
Fq(\()p Fg(n)18 b Fq(+)g(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))p
Fg(;)g(tmax)p Fq(\()p Fg(n)19 b Fq(+)f(1)p Fg(;)c Fq($)p
Fg(r)r Fq(\)])83 1707 y(=)23 b([)p Fg(dmin)p Fq(\($)p
Fg(r)r Fq(\))p Fg(;)14 b(dmax)p Fq(\($)p Fg(r)r Fq(\)])24
b Fh(\\)83 1808 y Fq([)p Fj(MIN)207 1858 y Fd(s)339 1808
y Fg(tmin)p Fq(\()p Fg(n)14 b Fq(+)h(1)p Fg(;)f Fq($)p
Fg(r)r Fq(\))889 1820 y Fd(s)924 1808 y Fg(;)g Fj(MAX)1079
1858 y Fd(s)1228 1808 y Fg(tmax)p Fq(\()p Fg(n)h Fq(+)f(1)p
Fg(;)g Fq($)p Fg(r)r Fq(\))1790 1820 y Fd(s)1825 1808
y Fq(])83 2023 y(The)27 b(in)n(tersection)e(b)r(et)n(w)n(een)i(an)f(R)
-7 b(TM)27 b(in)n(terv)-5 b(al)25 b(and)i(a)0 2123 y(predeclared)35
b(in)n(terv)-5 b(al)35 b(is)h(nev)n(er)e(empt)n(y)i(if)h(it)f(w)n(as)f
(non-)0 2222 y(empt)n(y)k(in)h(the)f(initial)h(state)f(b)r(ecause)g(R)
-7 b(TM)39 b(in)n(terv)-5 b(als)0 2322 y(gro)n(w)37 b(monotonically)g
(and)h(an)g(empt)n(y)h(in)n(tersection)e(in)0 2422 y(the)43
b(initial)g(state)g(is)g(in)n(terpreted)f(as)g(an)h(inconsisten)n(t)0
2521 y(planning)35 b(problem)g(sp)r(eci\014cation)g(for)g(whic)n(h)g
(no)g(plan-)0 2621 y(ning)27 b(tak)n(es)g(place.)83 2723
y(Let)d(us)f(consider)f(the)i(follo)n(wing)f(example:)34
b(In)24 b(the)f(ini-)0 2822 y(tial)g(state)g(\(fact)g(lev)n(el)f(0\),)i
(the)f(follo)n(wing)f(actions)g(are)g(ap-)0 2922 y(plicable:)55
b Fj(\015y\(Basel)42 b(P)m(aris\))p Fq(,)d Fj(\015y\(Basel)j(London\))p
Fq(,)0 3021 y Fj(refuel\(Basel\))p Fq(,)26 b Fj(b)s(oard\(Basel\))p
Fq(.)36 b(F)-7 b(or)26 b Fi($time)f Fq(w)n(e)h(only)0
3121 y(ha)n(v)n(e)35 b(pro)r(ducers)f(whic)n(h)i(add)g(30,)h(60,)g(90)e
(or)g(120)f(min-)0 3221 y(utes)h(eac)n(h,)g(i.e.,)g(at)g(fact)f(lev)n
(el)h(1)f(w)n(e)g(end)h(up)g(with)g(the)0 3320 y(in)n(terv)-5
b(al)34 b([0,120])f(taking)i(the)g(maximal)f(increase.)57
b(The)0 3420 y(amoun)n(t)27 b(of)h(gas)e(is)i(set)g(to)f(750)g(b)n(y)g
(refueling,)h(whic)n(h)f(is)h(a)0 3520 y(pro)n(vider,)f(but)h(\015ying)
g(actions)f(are)g(consumers)g(decreas-)0 3619 y(ing)19
b(the)i(v)-5 b(ariable)18 b(b)n(y)i(either)f(266.67,)g(200)g(or)f
(133.33.)32 b(The)0 3719 y Fm(\015ying)g Fq(actions)f(are)g(mark)n(ed)f
(as)h(exclusiv)n(e)g(for)g(t)n(w)n(o)g(rea-)0 3818 y(sons:)40
b(\014rst,)30 b(they)g(in)n(terfere)f(with)h(resp)r(ect)f(to)h(their)f
(log-)0 3918 y(ical)36 b(e\013ects)h(and)g(second,)h(their)f(com)n
(bined)f(simple)h(re-)0 4018 y(source)23 b(e\013ects)i(fall)g(b)r(elo)n
(w)f(the)h(v)-5 b(alid)25 b(in)n(terv)-5 b(al)24 b(minim)n(um)0
4117 y(of)e(0)g(for)g Fi($gas)p Fq(.)33 b(Therefore,)22
b(three)g(individual)h(new)f(lo)n(w)n(er)0 4217 y(b)r(ounds)j(are)f
(obtained)h({)f(one)h(for)f(eac)n(h)h(\015ying)f(action,)h(of)0
4317 y(whic)n(h)20 b(the)g(minim)n(um)g(is)f(selected.)35
b(This)19 b(means)g(w)n(e)h(ha)n(v)n(e)0 4416 y([)p Fg(tmin)p
Fq(\(1)p Fg(;)14 b Fq($)p Fg(g)s(as)p Fq(\))p Fg(;)g(tmax)p
Fq(\(1)p Fg(;)g Fq($)p Fg(g)s(as)p Fq(\)])20 b(=)j([0)p
Fg(;)14 b Fq(750])21 b Fh(\\)0 4516 y Fq([)p Fj(MIN)p
Fq(\(300)c Fh(\000)h Fq(200)p Fg(;)c Fq(300)h Fh(\000)j
Fq(133)p Fg(:)p Fq(33)p Fg(;)c Fq(300)h Fh(\000)j Fq(266)p
Fg(:)p Fq(67)p Fg(;)c Fq(750\))p Fg(;)0 4615 y Fq(750])22
b(=)g([33)p Fg(:)p Fq(33)p Fg(;)14 b Fq(750])83 5021
y Fj(R)-8 b(TM:)440 4770 y Fq(fact)27 b(lev)n(el)p 813
4800 4 100 v 212 w($gas)p 1295 4800 V 227 w($time)p 390
4803 1243 4 v 581 4873 a(0)p 813 4903 4 100 v 274 w([300,300])p
1295 4903 V 170 w([0,0])581 4973 y(1)p 813 5002 V 241
w([33.33,750])p 1295 5002 V 97 w([0,120])581 5072 y(2)p
813 5102 V 315 w([0,750])p 1295 5102 V 172 w([0,240])581
5172 y(3)p 813 5202 V 315 w([0,750])p 1295 5202 V 172
w([0,360])581 5271 y(4)p 813 5301 V 315 w([0,750])p 1295
5301 V 172 w([0,480])83 5423 y(This)f(w)n(a)n(y)-7 b(,)25
b(the)i(graph)e(is)h(expanded)g(un)n(til)g(the)h(logical)0
5523 y(goals)34 b(are)h(reac)n(hed)f(for)h(the)h(\014rst)f(time)h
(without)g(b)r(eing)0 5622 y(exclusiv)n(e.)44 b(F)-7
b(or)30 b(the)h(resource)d(requiremen)n(ts)h(w)n(e)h(test)h(if)1931
36 y(the)f(in)n(terv)-5 b(al)29 b(from)g(the)h(time)g(map)f(and)g(the)h
(goal)e(in)n(ter-)1931 135 y(v)-5 b(al)27 b(ha)n(v)n(e)f(a)g(non-empt)n
(y)h(in)n(tersection.)36 b(In)27 b(the)g(example,)1931
235 y(b)r(oth)h(tests)g(are)f(satis\014ed)g(at)g(fact)h(lev)n(el)f(3.)
1931 534 y Fr(4)135 b(Finding)80 b(a)g(V)-11 b(alid)80
b(Choice)g(of)2133 684 y(Resource-constrained)39 b(P)l(aral-)2133
833 y(lel)46 b(Actions)1931 1024 y Fq(Recall)31 b(that)g(only)f(a)h
(set)g(of)g(non-exclusiv)n(e)e(actions)h(can)1931 1123
y(b)r(e)24 b(selected)f(at)g(eac)n(h)f(time)i(step)f(when)h(w)n(e)e
(are)g(searc)n(hing)1931 1223 y(from)37 b(the)h(goal)f(lev)n(el)g(bac)n
(k)f(to)i(the)g(initial)g(state.)66 b(F)-7 b(or)1931
1322 y(resources,)29 b(this)i(implies)g(that)f(at)h(eac)n(h)e(time)i
(step)f(a)g(re-)1931 1422 y(source)k(can)g(either)g(b)r(e)h(consumed,)h
(pro)r(duced,)g(or)e(pro-)1931 1522 y(vided)41 b(and)g(that)g(nev)n(er)
f(a)g(dep)r(endency)h(resource)e(can)1931 1621 y(b)r(e)32
b(c)n(hanged)e(sim)n(ultaneously)h(with)h(the)g(dep)r(ending)f(re-)1931
1721 y(source.)2014 1825 y(The)19 b(planning)f(algorithm)g(comprises)f
(t)n(w)n(o)h(parts:)32 b(The)1931 1925 y Fm(c)l(andidate)38
b(gener)l(ation)p Fq(,)e(whic)n(h)e(searc)n(hes)e(the)j(planning)1931
2024 y(graph)20 b(and)h(R)-7 b(TM)21 b(for)f(a)h(plan)f(that)h(is)g
Fm(p)l(ossibly)i Fq(a)d(solution)1931 2124 y(to)j(the)g(planning)f
(problem)h(and)f(the)h Fm(symb)l(olic)k(exe)l(cution)1931
2224 y Fq(that)j(pro)n(v)n(es)e(that)h(the)h(generated)f(candidate)g
(is)g(indeed)1931 2323 y(correct.)2014 2428 y(The)34
b(generation)f(algorithm)g(searc)n(hes)f(the)i(planning)1931
2527 y(graph)19 b(lev)n(el)f(b)n(y)i(lev)n(el)f(starting)f(from)h(the)h
(goals.)33 b(It)19 b(w)n(orks)1931 2627 y(in)34 b(t)n(w)n(o)e(phases:)
48 b(In)33 b(a)g(\014rst)g(action)g(selection)g(phase,)h(it)1931
2726 y(c)n(ho)r(oses)c(a)h(minimal,)h(non-exclusiv)n(e,)f(and)g
(con\015ict-free)1931 2826 y(set)37 b(of)g(parallel)f(actions)g(to)h
(ac)n(hiev)n(e)f(the)h(logical)f(goals)1931 2926 y(whic)n(h)30
b(leads)e(to)i(resource)d(requiremen)n(ts)h(that)i(are)e(con-)1931
3025 y(sisten)n(t)d(with)h(the)g(individual)f(requiremen)n(ts)f(of)h
(eac)n(h)f(ac-)1931 3125 y(tion)e(and)g(the)h(p)r(ossible)f(v)-5
b(alues)21 b(of)h(resources)e(as)i(re\015ected)1931 3225
y(in)28 b(the)g(R)-7 b(TM.)28 b(If)f(a)g(con\015ict)h(o)r(ccurs,)f
(additional)f(actions)1931 3324 y(are)j(added)h(to)g(the)g(minimal)g
(set)g(in)g(order)f(to)g(ac)n(hiev)n(e)g(a)1931 3424
y(con\015ict)h(resolution.)42 b(In)29 b(the)h(follo)n(wing,)f(w)n(e)h
(solely)e(con-)1931 3523 y(cen)n(trate)35 b(on)g(the)h(resource-side)d
(of)i(eac)n(h)g(action)f(selec-)1931 3623 y(tion,)28
b(ho)n(w)f(the)h(pro)r(cess)f(pro)r(ceeds)g(for)g(the)h(logical)e
(goals)1931 3723 y(is)i(describ)r(ed)f(in)h([7].)2014
3827 y(A)n(t)21 b(eac)n(h)f(time)i(step)f Fg(n)5 b Fq(+)g(1,)21
b(the)g(algorithm)f(is)g(giv)n(en)g(the)1931 3927 y(logical)33
b(goals)f Fg(G)2475 3939 y Fd(n)p Fn(+1)2639 3927 y Fq(and)h(a)h
(resource)e(goal)g([)p Fg(g)s(min)p Fq(\()p Fg(n)22 b
Fq(+)1931 4026 y(1)p Fg(;)14 b Fq($)p Fg(r)r Fq(\))p
Fg(;)g(g)s(max)p Fq(\()p Fg(n)c Fq(+)g(1)p Fg(;)k Fq($)p
Fg(r)r Fq(\)])24 b(for)f(eac)n(h)f(resource)g(v)-5 b(ariable)22
b($r)1931 4126 y(that)30 b(o)r(ccurs)f(in)h(the)h(planning)e(problem.)
44 b(It)30 b(is)f(initially)1931 4225 y(called)34 b(starting)f(at)h
(the)g Fg(max)g Fq(time)h(step)f(of)f(the)i(graph)1931
4325 y(with)21 b(the)g(logical)e(goals)g(that)i(ha)n(v)n(e)e(b)r(een)i
(sp)r(eci\014ed)g(in)f(the)1931 4425 y(planning)30 b(problem.)43
b(If)30 b(an)n(y)f(resource)f(goals)h(ha)n(v)n(e)f(b)r(een)1931
4524 y(sp)r(eci\014ed)37 b(to)r(o,)h(they)e(are)f(in)n(tersected)g
(with)i(the)g(corre-)1931 4624 y(sp)r(onding)32 b(R)-7
b(TM)31 b(in)n(terv)-5 b(al)31 b(to)h(yield)f(the)h(resource)e(goals)
1931 4724 y(at)24 b(time)g(step)g Fg(max)p Fq(.)36 b(If)24
b(no)f(sp)r(eci\014c)h(v)-5 b(alue)24 b(for)f(a)g(resource)1931
4823 y(is)c(required)e(in)i(the)g(goal)e(state,)j(then)f(the)g
(resource)e(goal)g(is)1931 4923 y(initialized)k(with)h(the)f(v)-5
b(alue)21 b(of)g(the)g(resource)e(as)h(recorded)1931
5022 y(in)i(the)f(R)-7 b(TM)21 b(at)g(time)h(step)f Fg(max)p
Fq(.)35 b(Action)21 b(selection)g(pro-)1931 5122 y(ceeds)28
b(as)e(follo)n(ws:)1934 5323 y Fj(\(1\))41 b Fq(W)-7
b(e)34 b(start)f(with)i(an)e(initialization:)49 b(the)34
b(set)g(of)f(se-)2097 5423 y(lected)23 b(actions)e(\001)2677
5435 y Fd(n)2744 5423 y Fq(is)h(initially)g(empt)n(y)g(and)g(all)g(new)
2097 5523 y(goals)k(at)i(time)g(step)g Fg(n)g Fq(for)f(all)h(resources)
d(are)i(equal)2097 5622 y(to)h(the)g(goals)e(at)h(time)h(step)g
Fg(n)18 b Fq(+)g(1.)p eop
%%Page: 5 5
5 4 bop 166 36 a Fq(\001)235 48 y Fd(n)303 36 y Fq(=)23
b Fh(;)166 175 y(8)f Fq($)p Fg(r)k Fq(:)d([)p Fg(g)s(min)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])23 b(:=)520 275
y([)p Fg(g)s(min)p Fq(\()p Fg(n)18 b Fq(+)g(1)p Fg(;)c
Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p Fq(\()p Fg(n)k
Fq(+)g(1)p Fg(;)c Fq($)p Fg(r)r Fq(\)])3 455 y Fj(\(2\))41
b Fq(An)19 b(action)f Fg(a)h Fq(is)f(selected)g(that)h(ac)n(hiev)n(es)e
(a)h(goal)g(from)166 554 y Fg(G)231 566 y Fd(n)p Fn(+1)392
554 y Fq(and)31 b(that)h(is)f(non-exclusiv)n(e)f(to)h(the)h(actions)166
654 y(already)d(con)n(tained)i(in)g(\001)1011 666 y Fd(n)1087
654 y Fq(and)g(\001)1321 666 y Fd(n)1394 654 y Fq(=)d(\001)1556
666 y Fd(n)1622 654 y Fh([)21 b(f)p Fg(a)p Fh(g)p Fq(.)166
754 y(If)29 b(no)f(selection)g(is)g(p)r(ossible)g(the)h(searc)n(h)d
(algorithm)166 853 y(bac)n(ktrac)n(ks)f(to)j(action)f(lev)n(el)g
Fg(n)18 b Fq(+)g(1.)3 1033 y Fj(\(3\))41 b Fq(F)-7 b(or)41
b(eac)n(h)f(resource)f($r,)44 b(the)e(follo)n(wing)e(tests)h(are)166
1132 y(p)r(erformed)34 b(with)g(the)h(selected)f(action)g
Fg(a)g Fq(and)g(the)166 1232 y(resource)43 b(e\013ects)i(of)g
Fg(a)g Fq(to)g(up)r(date)g(the)g(resource)166 1332 y(goals:)166
1493 y Fj(if)27 b Fg(a)h Fq(do)r(es)f(not)h(a\013ect)g($r:)36
b(do)27 b(nothing)166 1593 y Fj(elsif)f Fg(a)i Fq(is)f(pro)n(vider)f
(of)i($r)166 1693 y Fj(then)g(if)f Fg(g)s(min)p Fq(\()p
Fg(n)18 b Fq(+)g(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))23 b
Fh(\024)f Fp(N)h Fh(\024)g Fg(g)s(max)p Fq(\()p Fg(n)18
b Fq(+)g(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))464 1792 y Fj(then)28
b Fg(g)s(min)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))22
b(:=)h Fh(\0001)679 1892 y Fg(g)s(max)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))23 b(:=)g(+)p Fh(1)464 1992 y Fj(else)j
Fq(bac)n(ktrac)n(k)g(to)h(select)h(a)f(new)h(action)166
2091 y Fj(else)166 2191 y Fg(a)g Fq(is)f(simple-e\013ect)h(pro)r
(ducer/consumer)166 2290 y(and)f($)p Fg(r)f Fh(6)p Fq(=)c($)p
Fg(time)p Fq(:)166 2395 y Fg(g)s(min)p Fq(\()p Fg(n;)14
b Fq($)p Fg(r)r Fq(\))23 b(:=)f Fg(g)s(min)p Fq(\()p
Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p 1176 2327 115 4 v 23
w Fp(OP)23 b(N)1372 2410 y Fn(\()p Fe(a)p Fn(\))166 2499
y Fg(g)s(max)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))23
b(:=)g Fg(g)s(max)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r
Fq(\))p 1202 2431 V 24 w Fp(OP)23 b(N)1398 2514 y Fn(\()p
Fe(a)p Fn(\))166 2646 y Fg(a)28 b Fq(is)f(simple-e\013ect)h(pro)r
(ducer)f(and)g($)p Fg(r)e Fq(=)e($)p Fg(time)p Fq(:)166
2745 y Fg(g)s(min)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r
Fq(\))23 b(:=)f Fg(g)s(min)p Fq(\()p Fg(n)c Fq(+)g(1)p
Fg(;)c Fq($)p Fg(r)r Fq(\))k Fh(\000)g Fj(MAX)1443 2799
y Fd(a)p Fb(2)p Fn(\001)1579 2807 y Fa(n)1664 2745 y
Fp(N)1723 2760 y Fn(\()p Fd(a)p Fn(\))166 2885 y Fg(g)s(max)p
Fq(\()p Fg(n;)c Fq($)p Fg(r)r Fq(\))23 b(:=)g Fg(g)s(max)p
Fq(\()p Fg(n)c Fq(+)f(1)p Fg(;)c Fq($)p Fg(r)r Fq(\))k
Fh(\000)g Fj(MAX)1468 2939 y Fd(a)p Fb(2)p Fn(\001)1604
2947 y Fa(n)1690 2885 y Fp(N)1749 2900 y Fn(\()p Fd(a)p
Fn(\))166 3025 y Fg(a)28 b Fq(is)f(not)h(a)f(simple-e\013ect)h(pro)r
(ducer/consumer)166 3125 y(\(e\013ect)g(con)n(tains)f(linear)g
(equation\):)36 b(do)28 b(nothing)166 3370 y(with)p 375
3303 V 48 w Fp(OP)47 b Fq(b)r(eing)g(the)g(in)n(v)n(erse)f(op)r(erator)
f(to)i Fp(OP)p Fq(,)166 3470 y(i.e.,)e(w)n(e)g(use)g(+)f(instead)h(of)g
Fh(\000)g Fq(and)f(vice)h(v)n(ersa.)166 3569 y Fp(N)225
3584 y Fn(\()p Fe(a)p Fn(\))338 3569 y Fq(is)28 b(the)g(n)n(umerical)f
(v)-5 b(alue)27 b(from)g(the)i(simple)e(ef-)166 3669
y(fect.)35 b(F)-7 b(or)18 b(example,)i(if)f(the)g(old)g(goal)e(w)n(as)h
([100)p Fg(;)c Fq(+)p Fh(1)p Fq(\))166 3769 y(and)32
b(the)h(e\013ect)f(is)g Fp(-=)g(50)f Fq(then)i(w)n(e)f(obtain)g([100)20
b(+)166 3868 y(50)p Fg(;)14 b Fq(+)p Fh(1)6 b Fq(+)g(50\))19
b(whic)n(h)i(yields)h(the)f(new)h(goal)e(in)n(terv)-5
b(al)166 3968 y([150)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\).)3
4147 y Fj(\(4\))41 b Fq(This)k(w)n(a)n(y)-7 b(,)48 b(actions)43
b(are)h(selected)h(un)n(til)g(a)f(mini-)166 4247 y(mal)37
b(action)f(set)i(is)e(found)i(that)f(ac)n(hiev)n(es)f(all)g(log-)166
4347 y(ical)48 b(goals.)96 b(The)48 b(up)r(dated)g(resource)f(goals)f
(for)166 4446 y(the)26 b(curren)n(t)f(c)n(hoice)f(of)i(actions)e(are)h
(tested)h(against)166 4546 y(the)37 b(resource)f(requiremen)n(ts)g(of)h
(eac)n(h)f(action)g(and)166 4646 y(the)47 b(R)-7 b(TM)47
b(in)n(terv)-5 b(als)45 b(at)i(time)f(step)h Fg(n)p Fq(.)93
b(A)47 b(test)166 4745 y(against)33 b(the)h(predeclared)e(in)n(terv)-5
b(al)34 b(b)r(oundaries)e(is)166 4845 y(not)24 b(needed)f(as)g(these)g
(are)g(already)f(re\015ected)h(in)h(the)166 4944 y(R)-7
b(TM)28 b(in)n(terv)-5 b(als.)166 5084 y(T)e(est)28 b(\(1\):)166
5184 y Fh(9)23 b Fq($)p Fg(r)n(;)14 b(a)23 b Fh(2)g Fq(\001)563
5196 y Fd(n)632 5184 y Fq(:)g([)p Fg(g)s(min)p Fq(\()p
Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p Fq(\()p
Fg(n;)g Fq($)p Fg(r)r Fq(\)])23 b Fh(\\)166 5283 y Fq([)p
Fg(r)r(min)p Fq(\()p Fg(a;)14 b Fq($)p Fg(r)r Fq(\))p
Fg(;)g(r)r(max)p Fq(\()p Fg(a;)g Fq($)p Fg(r)r Fq(\)])25
b(=)e Fh(;)166 5423 y Fq(T)-7 b(est)28 b(\(2\):)166 5523
y Fh(9)23 b Fq($)p Fg(r)j Fq(:)d([)p Fg(g)s(min)p Fq(\()p
Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p Fq(\()p
Fg(n;)g Fq($)p Fg(r)r Fq(\)])23 b Fh(\\)166 5622 y Fq([)p
Fg(tmin)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])24 b(=)e Fh(;)2097
36 y Fq(If)34 b(the)g(tests)f(fail,)i(i.e.,)f(all)f(in)n(tersections)f
(are)g(non-)2097 135 y(empt)n(y)-7 b(,)49 b(the)c(\014nal)f(new)g
(resource)f(goals)g(for)g(this)2097 235 y(minimal)22
b(action)f(set)h(are)f(obtained)g(b)n(y)h(actually)f(de-)2097
335 y(termining)27 b(the)g(in)n(tersection)e(of)i(the)g(goals)e(with)i
(all)2097 434 y(resource)g(requiremen)n(t)g(in)n(terv)-5
b(als)27 b(of)h(all)g(actions)f(in)2097 534 y(\001)2166
546 y Fd(n)2239 534 y Fq(and)h(the)g(R)-7 b(TM)28 b(in)n(terv)-5
b(al:)2097 673 y([)p Fg(g)s(min)p Fq(\()p Fg(n;)14 b
Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p Fq(\()p Fg(n;)g
Fq($)p Fg(r)r Fq(\)])23 b(:=)2243 772 y([)p Fg(g)s(min)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(g)s(max)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])23 b Fh(\\)2243
810 y Fc(T)2312 897 y Fd(a)p Fb(2)p Fn(\001)2448 905
y Fa(n)2492 872 y Fq([)p Fg(r)r(min)p Fq(\()p Fg(a;)14
b Fq($)p Fg(r)r Fq(\))p Fg(;)g(r)r(max)p Fq(\()p Fg(a;)g
Fq($)p Fg(r)r Fq(\)])26 b Fh(\\)2243 971 y Fq([)p Fg(tmin)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\()p Fg(n;)g Fq($)p Fg(r)r Fq(\)])2014 1165 y(T)-7
b(ogether)18 b(with)h(the)g(new)g(logical)e(goals)g(resulting)h(from)
1931 1265 y(the)35 b(preconditions)e(and)h(e\013ect)g(conditions)g(of)g
(selected)1931 1365 y(actions,)j(these)e(resource)f(goals)f(are)h(forw)
n(arded)g(to)h(the)1931 1464 y(next)28 b(lev)n(el)f(of)h(the)g
(planning)f(graph.)2014 1567 y(The)58 b(algorithm)e(terminates)h
(successfully)g(in)g(the)1931 1666 y(initial)62 b(state)g(if)g(the)g
(in)n(terv)-5 b(al)62 b(that)g(sp)r(eci\014es)f(ho)n(w)1931
1766 y(m)n(uc)n(h)i(of)g(a)f(resource)g(is)g(initially)i(a)n(v)-5
b(ailable)61 b(is)i(a)1931 1866 y(subin)n(terv)-5 b(al)70
b(of)g(the)g(resource)e(goal)h(for)g(the)i(ini-)1931
1965 y(tial)f(state,)79 b(i.e.,)70 b(if)f([)p Fg(tmin)p
Fq(\(0)p Fg(;)14 b Fq($)p Fg(r)r Fq(\))p Fg(;)g(tmax)p
Fq(\(0)p Fg(;)g Fq($)p Fg(r)r Fq(\)])93 b Fh(\022)1931
2065 y Fq([)p Fg(g)s(min)p Fq(\(0)p Fg(;)14 b Fq($)p
Fg(r)r Fq(\))p Fg(;)g(g)s(max)p Fq(\(0)p Fg(;)g Fq($)p
Fg(r)r Fq(\)])27 b(for)g(all)h($)p Fg(r)r Fq(.)2014 2167
y(In)c(the)f(case)f(of)h(linear)f(equations,)h(the)h(resource)d
(e\013ect)1931 2267 y(of)35 b(an)g(action)f(is)h(ignored)f(b)r(ecause)g
(it)i(is)f(unclear)f(what)1931 2367 y(the)24 b(sp)r(eci\014c)g(impact)g
(on)f(the)i(resource)c(w)n(ould)j(b)r(e)g(un)n(til)g(a)1931
2466 y(complete)i(plan)f(is)g(found)h(and)f(the)g(sp)r(eci\014c)h(v)-5
b(alue)25 b(of)g(the)1931 2566 y(dep)r(endency)36 b(v)-5
b(ariable)34 b(in)h(a)g(particular)f(state)h(is)g(\014xed.)1931
2666 y(Only)40 b(its)h(resource)d(requiremen)n(ts)h(are)h(considered)f
(b)n(y)1931 2765 y(the)29 b(planner)e(b)r(ecause)h(these)g(m)n(ust)g(b)
r(e)g(satis\014ed)g(b)n(y)f(an)n(y)1931 2865 y(solution)22
b(plan.)35 b(The)22 b(planner)g(could)g(use)g(the)h(w)n(orst-case)1931
2964 y(estimate,)i(but)f(this)g(w)n(ould)f(mak)n(e)g(the)h(planning)g
(pro)r(cess)1931 3064 y(m)n(uc)n(h)f(more)g(complicated)g(if)g
(completeness)g(needs)g(to)g(b)r(e)1931 3164 y(retained.)2014
3266 y(If)d(an)n(y)f(of)g(the)h(tests)g(succeeds)f(for)g(a)g(minimal)g
(set)h(of)f(ac-)1931 3366 y(tions,)k(the)f(planner)f(needs)g(to)g
(resolv)n(e)f(resource)g(con\015icts)1931 3465 y(b)n(y)29
b(adding)g(more)g(actions)f(suc)n(h)h(that)h(the)g(new)f(goals)f(of)
1931 3565 y(the)34 b(\014nal)f(action)g(set)h(will)f(fall)h(within)g
(predeclared)e(in-)1931 3665 y(terv)-5 b(al)28 b(b)r(oundaries)g(and)g
(the)h(recorded)e(R)-7 b(TM)28 b(in)n(terv)-5 b(als,)1931
3764 y(and)34 b(are)f(consisten)n(t)h(with)h(the)f(resource)f
(requiremen)n(ts)1931 3864 y(of)f(eac)n(h)f(action.)48
b(Dep)r(ending)33 b(on)e(wh)n(y)g(a)g(test)h(w)n(as)f(suc-)1931
3964 y(cessful,)d(a)f(con\015ict)h(resolution)e(p)r(olicy)i(is)f
(determined:)2014 4066 y(\(A\))35 b(If)f Fg(g)s(max)p
Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))33 b Fg(<)f(T)45
b Fq(where)33 b(T)g(stands)g(for)g(the)1931 4166 y(in)n(terv)-5
b(al)32 b(against)e(whic)n(h)i(the)h(goals)d(are)h(tested,)j(then)e(a)
1931 4265 y(consumer)i(or)f(pro)n(vider)g(of)i($r)e(is)i(added)f(to)g
(\001)3480 4277 y Fd(n)3560 4265 y Fq(in)h(the)1931 4365
y Fm(next)27 b Fq(selection.)2014 4467 y(\(B\))52 b(If)h
Fg(g)s(min)p Fq(\()p Fg(n;)14 b Fq($)p Fg(r)r Fq(\))62
b Fg(>)h(T)g Fq(then)52 b(a)g(pro)r(ducer)e(or)1931 4567
y(pro)n(vider)26 b(of)i($r)e(is)i(added)f(to)h(\001)2954
4579 y Fd(n)3027 4567 y Fq(in)g(the)g Fm(next)e Fq(selection.)1966
5118 y @beginspecial 0 @llx 0 @lly 427 @urx 103 @ury
2134 @rwi @setspecial
%%BeginDocument: empty-2spaltig.eps
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-155.0 214.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
n -1000 4387 m -1000 -1000 l 10237 -1000 l 10237 4387 l cp clip
 0.06299 0.06299 sc
% Polyline
30.000 slw
n 7410 2265 m 8985 2265 l gs col0 s gr 
% Polyline
n 8985 2040 m 8985 2490 l gs col0 s gr 
% Polyline
n 7410 2040 m 7410 2490 l gs col0 s gr 
/Times-BoldItalic ff 240.00 scf sf
7635 2490 m
gs 1 -1 sc (goal interval) col0 sh gr
% Polyline
n 5175 2475 m 6525 2475 l gs col0 s gr 
% Polyline
n 5175 2250 m 5175 2700 l gs col0 s gr 
% Polyline
n 6525 2250 m 6525 2700 l gs col0 s gr 
/Times-BoldItalic ff 240.00 scf sf
5265 2700 m
gs 1 -1 sc (test interval ) col0 sh gr
% Polyline
 [120] 0 sd
n 6300 1800 m 6300 2250 l gs col4 s gr  [] 0 sd
% Polyline
 [120] 0 sd
n 6300 2025 m 7875 2025 l gs col4 s gr  [] 0 sd
% Polyline
 [120] 0 sd
n 7875 1800 m 7875 2250 l gs col4 s gr  [] 0 sd
% Polyline
 [120] 0 sd
n 3825 1800 m 3825 2250 l gs col4 s gr  [] 0 sd
% Polyline
 [120] 0 sd
n 5400 1800 m 5400 2250 l gs col4 s gr  [] 0 sd
% Polyline
 [120] 0 sd
n 3825 2025 m 5400 2025 l gs col4 s gr  [] 0 sd
% Polyline
n 2700 2250 m 4275 2250 l gs col0 s gr 
% Polyline
n 2700 2025 m 2700 2475 l gs col0 s gr 
% Polyline
n 4275 2070 m 4275 2520 l gs col0 s gr 
% Polyline
7.500 slw
n 2475 1800 m 9225 1800 l 9225 3375 l 2475 3375 l cp gs col0 s gr 
/Times-BoldItalic ff 240.00 scf sf
2925 2475 m
gs 1 -1 sc (goal interval ) col0 sh gr
/Times-BoldItalic ff 240.00 scf sf
6075 3150 m
gs 1 -1 sc (conflict B: producer/provider) col0 sh gr
/Times-BoldItalic ff 240.00 scf sf
2700 3150 m
gs 1 -1 sc (conflict A: consumer/provider ) col0 sh gr
$F2psEnd
rs
%%EndDocument
 @endspecial 1931 5218 a(Figure)35 b(1:)51 b(Pushing)34
b(goal)g(in)n(terv)-5 b(als)34 b(to)h(obtain)g(a)f(non-)1931
5318 y(empt)n(y)28 b(in)n(tersection)f(with)h(the)g(test)g(in)n(terv)-5
b(al.)2014 5523 y(This)35 b(means)f(that)h(it)g(is)g(no)f(longer)f
(su\016cien)n(t)i(to)f(re-)1931 5622 y(strict)27 b(the)g(searc)n(h)e
(space)h(of)g(the)h(planner)f(to)h(action)f(sets)p eop
%%Page: 6 6
6 5 bop 0 36 a Fq(that)33 b(are)g(minimal)g(wrt.)g(the)h(logical)e
(goals.)52 b(It)33 b(is)g(easy)0 135 y(to)25 b(see)f(that)i(there)e
(can)h(b)r(e)g(actions)f(that)i(m)n(ust)f(solely)f(b)r(e)0
235 y(selected)k(to)h(ac)n(hiev)n(e)e(resource)g(goals,)g(but)i(are)f
(not)h(nec-)0 335 y(essary)e(at)i(all)g(to)g(ac)n(hiev)n(e)e(the)j
(logical)d(goals.)40 b(If)29 b(actions)0 434 y(exist)39
b(in)h(the)g(graph)f(with)h(only)f(resource)f(e\013ects)h(and)0
534 y(without)f(logical)e(e\013ects,)k(sev)n(eral)35
b(copies)i(of)g(the)h(same)0 634 y(action)e(can)f(b)r(e)i(selected)f
(for)g(parallel)f(execution.)62 b(F)-7 b(or)0 733 y(example)27
b(if)h(there)g(is)f(an)g(action)0 933 y Fj(get-sheet-of-pap)s(er)0
1032 y Fi(:p)43 b(at-paper-tray)0 1132 y(:e)g($sheets)98
b(+=)43 b(1.)83 1328 y Fq(taking)37 b(10)g(sheets)h(can)g(b)r(e)g(done)
g(in)g(parallel.)66 b(This)0 1428 y(leads)32 b(to)h(more)f(parallelism)
g(in)h(plans)f(and)h(in)g(the)g(case)0 1527 y(that)24
b(temp)r(oral)g(restrictions)f(ha)n(v)n(e)g(to)h(b)r(e)g(met,)i(it)e
(can)g(b)r(e)0 1627 y(the)j(only)f(w)n(a)n(y)g(ho)n(w)g(a)g(solution)g
(to)g(a)h(planning)f(problem)0 1727 y(b)r(ecomes)h(p)r(ossible.)83
1830 y(T)-7 b(o)23 b(ac)n(hiev)n(e)f(completeness,)i(all)f(p)r(ossible)
g(minimal)h(ac-)0 1929 y(tion)j(sets)g(that)h(ac)n(hiev)n(e)e(a)h(set)g
(of)g(logical)f(goals)g(are)g(gen-)0 2029 y(erated)36
b(and)h(for)f(eac)n(h)g(of)h(the)g(sets)g(all)g(p)r(ossibilities)f(to)0
2128 y(add)30 b(con\015ict)g(resolv)n(ers)d(ha)n(v)n(e)h(to)i(b)r(e)g
(explored.)43 b(The)30 b(al-)0 2228 y(gorithm)e(returns)f(the)i
(\014rst)f(con\015ict-free)g(set)g(of)g(actions)0 2328
y(that)23 b(it)f(\014nds,)i(whic)n(h)e(do)r(es)g(not)h(need)f(to)g(b)r
(e)h(the)g(smallest)0 2427 y(set)g(in)g(terms)f(of)h(the)g(n)n(um)n(b)r
(er)g(of)g(actions.)34 b(F)-7 b(urthermore,)0 2527 y(if)28
b(a)g(con\015ict)g(cannot)f(b)r(e)i(resolv)n(ed)d(at)i(time)g(step)g
Fg(n)g Fq(then)0 2627 y(the)c(planner)g(has)f(to)h(explore)f(if)h(it)g
(can)g(prev)n(en)n(t)f(the)h(con-)0 2726 y(\015ict)f(at)e(lev)n(els)h
Fg(i)g Fh(\025)h Fg(n)p Fq(,)g(i.e.,)g(a)e(bac)n(ktrac)n(king)f(pro)r
(cess)h(tries)0 2826 y(if)i(adding)g(actions)f(at)h(later)f(lev)n(els)h
(in)g(the)g(plan)g(and)g(then)0 2925 y(searc)n(hing)31
b(forw)n(ard)h(again)g(resolv)n(es)f(the)j(con\015ict.)53
b(The)0 3025 y(con\015icting)29 b(resource)e(v)-5 b(ariable)29
b(is)g(stored)f(in)i(a)f(separate)0 3125 y(data)23 b(structure)g
(together)g(with)i(the)f(p)r(olicy)f(to)h(resolv)n(e)e(it)0
3224 y(\(i.e.,)29 b(the)g(t)n(yp)r(e)g(of)f(action)h(that)f(has)h(to)f
(b)r(e)h(considered\).)0 3324 y(When)23 b(the)g(planner)f(returns)g(to)
g(an)h(action)f(lev)n(el,)h(it)g(do)r(es)0 3424 y(not)29
b(immediately)g(consider)f(a)g(new)h(set)g(of)g(actions,)g(but)0
3523 y(tries)k(to)h(extend)g(the)g(curren)n(t)e(set)i(b)n(y)f(one)h
(action)f(suc)n(h)0 3623 y(that)22 b(at)f(least)g(one)g(con\015ict)g
(from)g(the)h(agenda)e(is)i(reduced)0 3723 y(or)32 b(resolv)n(ed.)49
b(Then)33 b(it)g(searc)n(hes)d(forw)n(ard)h(again.)50
b(This)0 3822 y(w)n(a)n(y)-7 b(,)31 b(all)f(maximal)h(p)r(ossible)f
(sets)h(of)g(non-exclusiv)n(e)e(ac-)0 3922 y(tions)23
b(are)e(considered)h(for)g(a)h(giv)n(en)e(goal,)i(b)r(efore)f(another)0
4021 y(minimal)28 b(action)f(set)h(is)f(considered.)83
4124 y(The)j(necessit)n(y)f(to)h(explore)f(all)h(p)r(ossibilities)g
(for)f(con-)0 4224 y(\015ict)23 b(resolution)f(b)n(y)h(addition)f(of)h
(actions)f(at)h(v)-5 b(arious)22 b(lev-)0 4324 y(els)i(in)g(the)h
(graph)e(leads)g(to)h(a)g(large)e(searc)n(h)h(space)g(that)h(is)0
4423 y(only)18 b(limited)i(b)n(y)f(the)g(rather)f(strict)g(exclusivit)n
(y)h(relations)0 4523 y(that)28 b(w)n(e)e(form)n(ulated)h(o)n(v)n(er)f
(actions,)g(the)i(n)n(um)n(b)r(er)f(of)g(ac-)0 4623 y(tions)i(at)h(eac)
n(h)f(time)h(step)f(in)h(the)g(planning)f(graph,)g(and)0
4722 y(the)c(depth)h(of)f(the)g(graph)f(-)h(more)f(precisely)g(the)i(n)
n(um)n(b)r(er)0 4822 y(of)c(actions)g(lev)n(els)g(b)r(et)n(w)n(een)g
Fg(max)h Fq(and)g(the)f(lev)n(el)g Fg(n)h Fq(where)0
4921 y(the)k(con\015ict)g(w)n(as)e(detected.)37 b(If)27
b(no)g(linear)f(equations)f(in-)0 5021 y(v)n(olving)g(resource)f(dep)r
(endencies)i(o)r(ccur)f(in)h(the)g(c)n(ho)r(osen)0 5121
y(actions)c(then)h(this)g(algorithm)e(is)i(a)f(sound)g(and)g(complete)0
5220 y(planner.)52 b(Otherwise,)34 b(the)f(sym)n(b)r(olic)f(execution)h
(phase)0 5320 y(needs)k(to)h(v)n(erify)f(that)g(a)h(generated)e(plan)h
(is)h(indeed)g(a)0 5420 y(solution.)83 5523 y(If)h(the)f(complete)g
(searc)n(h)f(o)n(v)n(er)f(a)i(graph)f(of)h(depth)g Fg(t)0
5622 y Fq(has)g(failed)g(in)g(generating)f(v)-5 b(alid)38
b(plans,)i(the)f(planning)1931 36 y(graph)34 b(and)h(R)-7
b(TM)36 b(are)e(extended)i(to)f(depth)g Fg(t)24 b Fq(+)f(1)35
b(and)1931 135 y(the)28 b(planner)f(searc)n(hes)f(again)g(the)i
(extended)g(graph.)2014 235 y(In)47 b(the)g(airplane)e(example,)51
b(action)46 b(selection)g(pro-)1931 335 y(ceeds)35 b(as)g(follo)n(ws:)
51 b(W)-7 b(e)36 b(start)f(with)h(the)f(goal)f(in)n(terv)-5
b(als)1931 434 y(for)31 b Fi($time)f Fq(\(0)p Fg(;)14
b Fq(330])30 b(and)h Fi($gas)f Fq(\(0)p Fg(;)14 b Fq(750\))30
b(at)h(fact)h(lev)n(el)f(4)1931 534 y(\(the)42 b(planner)f(has)f
(unsuccessfully)h(tried)g(to)g(searc)n(h)f(a)1931 634
y(plan)31 b(starting)f(from)h(lev)n(el)f(3,)i(i.e.,)f(the)g(planning)g
(graph)1931 733 y(and)38 b(R)-7 b(TM)38 b(w)n(ere)f(extended)g(b)n(y)h
(one)f(more)g(lev)n(el\).)67 b(T)-7 b(o)1931 833 y(ac)n(hiev)n(e)21
b(the)i(goals)e Fi(at\(Ernie)40 b(London\))20 b Fq(and)i
Fi(at\(Scott)1931 933 y(London\))i Fq(the)k(action)e
Fj(\015y\(P)m(aris)33 b(London\))27 b Fq(is)g(selected)1931
1032 y(at)d(time)h(step)g(3,)f(whic)n(h)g(leads)g(to)g(the)h(follo)n
(wing)e(goals)g(at)1931 1132 y(fact)28 b(lev)n(el)f(3:)1931
1299 y Fj(f)32 b(3:)87 b Fi($time)41 b Fh(2)j Fi([0,270])d($gas)h
Fh(2)i Fi([133.33,750])2154 1399 y(boarded\(Ernie\))37
b(boarded\(Scott\))2154 1498 y(at-plane\(Paris\))2014
1666 y Fq(F)-7 b(or)35 b Fi($time)f Fq(the)i(planner)f(computes)g(\(0)
23 b Fh(\000)h Fq(60)p Fg(;)14 b Fq(330)21 b Fh(\000)1931
1765 y Fq(60])62 b(in)n(tersected)g(with)g(the)h(resource)e(requiremen)
n(ts)1931 1865 y(\()p Fh(\0001)p Fg(;)14 b Fq(+)p Fh(1)p
Fq(\))41 b(and)f(the)i(R)-7 b(TM)41 b(in)n(terv)-5 b(al)40
b(at)h(fact)g(lev)n(el)f(3)1931 1964 y([0)p Fg(;)14 b
Fq(360].)111 b(F)-7 b(or)52 b Fi($gas)g Fq(the)h(planner)f(computes)h
(\(0)35 b(+)1931 2064 y(133)p Fg(:)p Fq(33)p Fg(;)14
b Fq(750)21 b(+)j(133)p Fg(:)p Fq(33\),)38 b(whic)n(h)f(gets)g(in)n
(tersected)f(with)1931 2164 y(the)51 b(resource)d(requiremen)n(ts)h
([133)p Fg(:)p Fq(33)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))47
b(and)j(the)1931 2263 y(R)-7 b(TM)28 b(in)n(terv)-5 b(al)27
b([0)p Fg(;)14 b Fq(750].)2014 2363 y(T)-7 b(o)45 b(\015y)h(Ernie)e
(and)h(Scott)h(from)f(P)n(aris)e(to)i(London)1931 2463
y(b)r(oth)h(ha)n(v)n(e)e(to)h(b)r(e)h(on)f(b)r(oard)g(the)g(aircraft)f
(b)r(eing)i(at)1931 2562 y(P)n(aris.)33 b(Flying,)22
b(b)r(oarding,)f(and)g(refueling)g(are)e(exclusiv)n(e,)1931
2662 y(but)28 b(refueling)f(and)g(b)r(oarding)e(can)i(b)r(e)h(done)e
(in)i(parallel.)1931 2761 y(Let)35 b(us)g(assume)g(that)g(the)h
(planner)e(selects)h(the)g(action)1931 2861 y Fj(b)s(oard\(P)m(aris\))e
Fq(to)e(ha)n(v)n(e)g(Ernie)f(en)n(tering)h(the)h(aircraft,)1931
2961 y(while)38 b Fi(boarded\(Scott\))32 b Fq(and)37
b Fi(at-plane\(Paris\))32 b Fq(are)1931 3060 y(added)49
b(b)n(y)f(a)h(no-op.)99 b(Boarding)47 b(tak)n(es)h(30)f(min)n(utes)1931
3160 y(and)c(consumes)g(no)g(gas,)j(i.e.,)d(the)h(new)f(time)h(goal)e
(is)1931 3260 y([0)22 b Fh(\000)g Fq(30)p Fg(;)14 b Fq(270)19
b Fh(\000)j Fq(30])32 b(in)n(tersected)h(with)h(\()p
Fh(\0001)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))33 b(and)1931
3359 y([0)p Fg(;)14 b Fq(240].)1931 3526 y Fj(f)32 b(2:)87
b Fi($time)41 b Fh(2)j Fi([0,240])d($gas)h Fh(2)i Fi([133.33,750])2154
3626 y(checked-in\(Erni)o(e\))37 b(at\(Ernie)k(Paris\))2154
3726 y(at-plane\(Paris\))c(boarded\(Scott\))2014 3893
y Fq(No-ops)j(are)f(selected)i(to)f(ac)n(hiev)n(e)g(all)g(subgoals)f
(ex-)1931 3993 y(cept)32 b Fi(at-plane\(Paris\))25 b
Fq(that)31 b(is)g(ac)n(hiev)n(ed)f(b)n(y)h(the)g(ac-)1931
4092 y(tion)c Fj(\015y\(Basel)k(P)m(aris\))d Fq(whic)n(h)f(requires)f
(200)f(amoun)n(ts)1931 4192 y(of)31 b(gas)f(and)g(tak)n(es)g(90)g(min)n
(utes)h(time,)h(i.e.,)f(the)g(planner)1931 4291 y(gets)d(for)f
Fi($time)f Fq(the)i(in)n(tersection)g(of)g([0)18 b Fh(\000)g
Fq(90)p Fg(;)c Fq(240)i Fh(\000)i Fq(90])1931 4391 y(with)43
b(\()p Fh(\0001)p Fg(;)14 b Fq(+)p Fh(1)p Fq(\))43 b(and)f([0)p
Fg(;)14 b Fq(120].)80 b(F)-7 b(or)41 b Fi($gas)g Fq(it)i(in)n(ter-)1931
4491 y(sects)30 b([133)p Fg(:)p Fq(33)18 b(+)h(200)p
Fg(;)14 b Fq(750)j(+)j(200])29 b(with)h([200)p Fg(;)14
b Fq(+)p Fh(1)p Fq(\))29 b(and)1931 4590 y([33)p Fg(:)p
Fq(33)p Fg(;)14 b Fq(750])25 b(whic)n(h)i(yields)h([333)p
Fg(:)p Fq(33)p Fg(;)14 b Fq(750].)1931 4758 y Fj(f)32
b(1:)87 b Fi($time)41 b Fh(2)j Fi([0,)e(120])g($gas)g
Fh(2)i Fi([333.33,750])2154 4857 y(checked-in\(Erni)o(e\))37
b(at\(Ernie)k(Paris\))2154 4957 y(at-plane\(Basel\))c(boarded\(Scott\))
2014 5124 y Fq(Finally)-7 b(,)28 b(Scott)g(needs)g(to)g(b)r(oard)f(in)h
(Basel)f(b)r(efore)g(the)1931 5224 y(airplane)h(tak)n(es)f(o\013)h(for)
g(P)n(aris,)f(i.e.,)h(the)h(planner)f(selects)1931 5323
y Fj(b)s(oard\(Basel\))j Fq(as)f(the)h(action)f(that)h(will)g(b)r(e)h
(executed)1931 5423 y(in)42 b(the)g(initial)g(state.)78
b(F)-7 b(or)41 b Fi($time)e Fq(the)j(new)g(goal)e(in-)1931
5523 y(terv)-5 b(al)38 b(in)h(the)g(initial)g(state)f(is)h([0)25
b Fh(\000)g Fq(30)p Fg(;)14 b Fq(120)24 b Fh(\000)h Fq(30])38
b(in-)1931 5622 y(tersected)f(with)h(\()p Fh(\0001)p
Fg(;)14 b Fq(+)p Fh(1)p Fq(\))38 b(and)f([0)p Fg(;)14
b Fq(0],)39 b(whic)n(h)f(yields)p eop
%%Page: 7 7
7 6 bop 0 36 a Fq([0)p Fg(;)14 b Fq(0].)44 b(F)-7 b(or)30
b Fi($gas)f Fq(the)i(planner)e(in)n(tersects)h([333)p
Fg(:)p Fq(33)p Fg(;)14 b Fq(750])0 135 y(with)44 b([300)p
Fg(;)14 b Fq(300],)44 b(whic)n(h)f(is)g(empt)n(y)-7 b(.)84
b(This)44 b(alerts)e(the)0 235 y(planner)h(that)g(a)g(resource)f
(con\015ict)h(has)f(o)r(ccurred)h(on)0 335 y Fi($gas)p
Fq(.)78 b(Since)42 b(the)g(goal)e(in)n(terv)-5 b(al)42
b(lies)f(\\righ)n(t")f(of)i(the)0 434 y(R)-7 b(TM)43
b(in)n(terv)-5 b(al,)46 b(a)c(pro)r(ducer)g(or)g(pro)n(vider)f(has)h
(to)h(b)r(e)0 534 y(considered)25 b(for)h(con\015ict)g(resolution.)35
b(The)26 b(refueling)g(ac-)0 634 y(tion)36 b(is)f(the)i(only)e(pro)n
(vider)f(of)i Fi($gas)e Fq(and)i(fortunately)-7 b(,)0
733 y(it)26 b(is)g(non-exclusiv)n(e)e(of)h(b)r(oarding)g(and)g
(satis\014es)g(the)h(test)0 833 y(333)p Fg(:)p Fq(33)21
b Fh(\024)h Fq(750)g Fh(\024)h Fq(750.)34 b(The)25 b(new)g(goal)f(for)g
(this)h(resource)0 933 y(is)39 b(recomputed)f(as)g([)p
Fh(\0001)p Fg(;)14 b Fq(+)p Fh(1)p Fq(],)41 b(whic)n(h)e(is)g(in)n
(tersected)0 1032 y(with)28 b([300)p Fg(;)14 b Fq(300])24
b(to)j(yield)g(the)g(resource)f(goal)f(in)j(the)f(ini-)0
1132 y(tial)39 b(state.)73 b(Ob)n(viously)-7 b(,)41 b(this)f(goal)e(in)
n(terv)-5 b(al)39 b(coincides)0 1231 y(p)r(erfectly)c(with)g(the)g
(amoun)n(t)f(of)g(gas)f(that)i(is)g(a)n(v)-5 b(ailable)0
1331 y(in)28 b(the)g(initial)g(state.)83 1435 y(F)-7
b(or)27 b Fi($time)e Fq(w)n(e)i(do)g(not)h(need)f(to)h(recompute)e(the)
i(new)0 1534 y(goal)i(b)r(ecause)h(the)g(new)g(pro)r(ducer)g(c)n
(hanges)e(it)j(dep)r(end-)0 1634 y(ing)h(on)h(a)f(linear)f(equation.)55
b(All)34 b(goals)e(at)h(time)h(step)g(0)0 1734 y(are)27
b(sup)r(ersets)h(of)g(the)g(resource)f(in)n(terv)-5 b(als)27
b(in)i(the)f(initial)0 1833 y(state)23 b(and)g(the)h(planner)e
(terminates)h(with)h(a)f(plan)g(candi-)0 1933 y(date.)36
b(But)26 b(since)f(a)h(non-simple)f(resource)f(e\013ect)i(is)f(used)0
2032 y(b)n(y)30 b(the)i(plan,)f(this)g(candidate)f(has)h(to)f(b)r(e)h
(v)n(eri\014ed)f(b)n(y)h(a)0 2132 y(subsequen)n(t)c(sym)n(b)r(olic)g
(execution)h(phase.)0 2335 y Fj(\015)k(0:)86 b Fi($time[0,0])40
b($gas[300,300])246 2435 y(checked-in\(Ernie\))d(at\(Ernie)j(Paris\))
246 2534 y(at-plane\(Basel\))e(checked-in\(Scot)o(t\))0
2830 y Fr(5)135 b(V)-11 b(eri\014cation)67 b(of)f(Plan)h(Candi-)202
2980 y(dates)46 b(through)f(Sym)l(b)t(olic)g(Ex-)202
3129 y(ecution)0 3319 y Fq(During)c(graph)f(searc)n(h)g(and)h(action)g
(selection,)j(e\013ects)0 3418 y(based)20 b(on)g(linear)f(equations)h
(are)f(ignorered,)h(b)r(ecause)g(the)0 3518 y(sp)r(eci\014c)36
b(impact)f(of)g(the)h(e\013ect)g(can)f(only)g(b)r(e)h(correctly)0
3617 y(determined)25 b(after)f(the)h(exact)g(v)-5 b(alue)24
b(of)h(the)g(dep)r(endency)0 3717 y(v)-5 b(ariable)30
b(is)i(kno)n(wn.)47 b(But)32 b(this)g(b)r(ecomes)f(p)r(ossible)g(only)0
3817 y(after)36 b(a)g(complete)g(plan)g(has)g(b)r(een)g(generated,)i
(i.e.,)e(as)0 3916 y(so)r(on)e(as)h(the)g(planner)g(selects)g(an)g
(action)f(with)i(a)f(non-)0 4016 y(simple)42 b(resource)e(e\013ect,)47
b(soundness)41 b(can)h(b)r(e)g(a\013ected)0 4116 y(and)e(a)f(v)n
(eri\014cation)g(of)g(the)i(plan)e(candidate)h(b)r(ecomes)0
4215 y(necessary)-7 b(.)83 4319 y(T)g(o)27 b(a)n(v)n(oid)f(the)i(sym)n
(b)r(olic)f(execution)g(one)g(had)g(to)g(gen-)0 4419
y(erate)c(a)h(plan)g(that)g(is)g(sound)g(wrt.)g(b)r(est-case)f(and)h(w)
n(orst-)0 4518 y(case)31 b(estimates,)h(i.e.,)g(the)g(linear)f
(equations)g(had)g(to)h(b)r(e)0 4618 y(equipp)r(ed)i(with)f(t)n(w)n(o)g
(estimates)f(that)i(ha)n(v)n(e)e(to)h(b)r(e)g(con-)0
4717 y(sidered)d(during)g(planning.)45 b(F)-7 b(or)30
b(some)g(practical)g(appli-)0 4817 y(cations)25 b(this)h(could)f(b)r(e)
h(useful,)h(but)f(in)g(the)g(general)e(case)0 4917 y(it)k(w)n(ould)f
(rule)g(out)h(to)r(o)f(man)n(y)g(solutions.)83 5020 y(The)22
b(sym)n(b)r(olic)g(execution)f(tak)n(es)h(as)f(input)i(a)f(plan)f(and)0
5120 y(the)34 b(initial)f(and)h(goal)e(sp)r(eci\014cation)h(for)g
(resource)e(v)-5 b(ari-)0 5220 y(ables)33 b(and)h(returns)f(true)h(if)g
(and)g(only)f(if)h(the)g(plan)g(is)g(a)0 5319 y(solution)27
b(to)h(the)g(giv)n(en)e(planning)i(problem.)83 5423 y(In)20
b(the)g(initial)h(state,)g(an)e(in)n(terv)-5 b(al)20
b(is)g(sp)r(eci\014ed)g(for)f(eac)n(h)0 5523 y(resource,)j(whic)n(h)h
(can)g(also)f(b)r(e)i(in\014nite.)36 b(If)24 b(no)f(in)n(terv)-5
b(al)22 b(is)0 5622 y(giv)n(en)j(for)f(a)h(resource,)g(it)g(is)h
(initialized)f(with)h(the)g(prede-)1931 36 y(clared)j(in)n(terv)-5
b(al)30 b(b)r(oundaries.)42 b(F)-7 b(urthermore,)30 b(the)g(plan-)1931
135 y(ner)38 b(tests)g(if)g(all)g(initial)g(in)n(terv)-5
b(als)37 b(are)g(subin)n(terv)-5 b(als)38 b(of)1931 235
y(the)h(predeclared)d(in)n(terv)-5 b(als,)40 b(otherwise,)g(the)e
(planning)1931 335 y(problem)27 b(is)h(rejected)f(as)g(inconsisten)n
(t.)2014 467 y(The)e(plan)f(candidate)g(determines)h(whic)n(h)f
(actions)g(are)1931 567 y(to)g(b)r(e)g(executed)g(in)g(eac)n(h)f(state)
g(and)h(with)g(that)g(w)n(e)f(kno)n(w)1931 667 y(whic)n(h)i(resource)d
(e\013ects)j(will)g(o)r(ccur)e(b)r(ecause)h(all)g(actions)1931
766 y(are)c(executable)f(-)h(their)h(logical)e(preconditions)g(are)g
(guar-)1931 866 y(an)n(teed)31 b(to)g(b)r(e)g(satis\014ed)g(in)g(the)h
(state)e(and)h(resource)f(ef-)1931 965 y(fects)22 b(are)f
(unconditional.)34 b(The)22 b(resource)e(e\013ects)i(in)f(eac)n(h)1931
1065 y(action)39 b(sp)r(ecify)g(whic)n(h)g(resource)e(v)-5
b(ariable)38 b(they)i(a\013ect)1931 1165 y(and)c(a)g(computational)f
(instruction)h(sa)n(ys)f(ho)n(w)g(the)h(re-)1931 1264
y(source)29 b(v)-5 b(ariable)29 b(will)i(c)n(hange.)43
b(F)-7 b(urthermore,)30 b(eac)n(h)f(ac-)1931 1364 y(tion)f(has)f
(atmost)g(one)g(e\013ect)h(p)r(er)g(resource.)2014 1496
y(Since)67 b(parallel)f(action)g(sets)h(ha)n(v)n(e)e(to)i(b)r(e)g(non-)
1931 1596 y(exclusiv)n(e,)33 b(eac)n(h)f(p)r(ossible)g(linearization)f
(has)h(the)h(same)1931 1696 y(impact)f(on)g(resources)e(except)h(on)h
($time)g(for)f(whic)n(h)h(w)n(e)1931 1795 y(assume)e(true)h(parallel)f
(execution.)46 b(This)30 b(means,)h(times)1931 1895 y(do)i(not)f(sum)h
(up,)h(but)f(only)f(the)h(maximal)f(use)h(of)f(time)1931
1995 y(determines)24 b(the)h(total)f(adv)-5 b(ance)23
b(on)h(the)g(time)h(scale)e(that)1931 2094 y(is)28 b(caused)f(b)n(y)g
(a)g(parallel)g(set)g(of)h(actions.)2014 2227 y(The)19
b(sym)n(b)r(olic)g(execution)g(algorithm)f(tak)n(es)g(the)h(in)n(ter-)
1931 2326 y(v)-5 b(als)28 b(from)f(the)h(curren)n(t)f(state)g(and)h
(the)g(resource)d(e\013ects)1931 2426 y(of)34 b(all)f(actions)g(in)h(a)
f(parallel)f(action)h(set)h(as)e(input)j(and)1931 2526
y(determines)d(the)h(new)f(resulting)f(state.)50 b(It)32
b(is)g(based)g(on)1931 2625 y(the)23 b(seman)n(tics)e(of)h(resources)d
(as)j(de\014ned)g(in)g([6])g(and)g(tests)1931 2725 y(if)33
b(eac)n(h)f(new)g(state)g(is)h(v)-5 b(alid)32 b(and)g(if)h(the)g
(\014nal)f(resulting)1931 2825 y(state)c(satis\014es)e(the)i(goals.)
2014 2957 y(The)61 b(sym)n(b)r(olic)g(execution)f(itself)i(causes)e
(only)g(a)1931 3057 y(marginal)20 b(computational)g(o)n(v)n(erhead,)g
(but)h(the)g(necessit)n(y)1931 3156 y(to)32 b(construct)g(a)g(complete)
g(plan)g(b)r(efore)g(execution)g(can)1931 3256 y(start)i(leads)g(to)g
(a)g(m)n(uc)n(h)g(larger)e(searc)n(h)h(space.)56 b(There-)1931
3356 y(fore,)37 b(resource)d(dep)r(endencies)h(should)h(b)r(e)f(used)h
(rather)1931 3455 y(sparsely)26 b(in)i(actions)f(whenev)n(er)g(p)r
(ossible.)2014 3588 y(As)i(an)g(example,)g(let)g(us)g(consider)f(the)h
(airplane)f(plan)1931 3687 y(with)f(the)g(tigh)n(ter)f(time)h
(requiremen)n(t)e Fi($time)42 b Fh(\024)h Fi(215)25 b
Fq(as)1931 3787 y(a)35 b(goal.)57 b(This)35 b(w)n(ould)g(lead)f(to)h
(the)h(follo)n(wing)d(resource)1931 3887 y(goals)26 b(at)i(eac)n(h)f
(time)h(step:)1981 4312 y(time)100 b(time)188 b(gas)421
b(actions)p 1931 4345 1933 4 v 1981 4415 a(0:)196 b([0)p
Fg(;)14 b Fq(0])182 b([300)p Fg(;)14 b Fq(300])203 b(b)r(oard\(B\))27
b(refuel\(B\))1981 4515 y(1:)196 b([0)p Fg(;)14 b Fq(35])140
b([333)p Fg(:)p Fq(33)p Fg(;)14 b Fq(750])96 b(\015y\(B)27
b(P\))1981 4614 y(2:)196 b([0)p Fg(;)14 b Fq(125])98
b([133)p Fg(:)p Fq(33)p Fg(;)14 b Fq(750])96 b(b)r(oard\(P\))1981
4714 y(3:)196 b([0)p Fg(;)14 b Fq(155])98 b([133)p Fg(:)p
Fq(33)p Fg(;)14 b Fq(750])96 b(\015y\(P)27 b(L\))1981
4813 y(4:)196 b([0)p Fg(;)14 b Fq(215])98 b([0)p Fg(;)14
b Fq(750])2014 5124 y(This)29 b(plan)g(ignores)e(the)j(increase)d(in)i
(time)h(caused)e(b)n(y)1931 5224 y(the)36 b(refuel)f(action)g(and)g(is)
g(therefore)f(incorrect.)59 b(Sym-)1931 5323 y(b)r(olic)25
b(execution)f(rev)n(eals)f(this)i(problem)g(b)r(ecause)f(refuel-)1931
5423 y(ing)i(requires)e(36)h(min)n(utes)h(and)g(therefore)f(a)g
(violation)g(of)1931 5523 y(the)j(time)g(requiremen)n(ts)f(at)g(fact)h
(lev)n(el)f(1)g(and)g(all)g(subse-)1931 5622 y(quen)n(t)h(lev)n(els)f
(o)r(ccurs.)p eop
%%Page: 8 8
8 7 bop 155 23 a Fq(time)100 b(time)g(gas)214 b(actions)p
105 56 1638 4 v 155 126 a(0:)196 b(0)219 b(300)205 b(b)r(oard\(B\))27
b(refuel\(B\))155 225 y(1:)196 b(36)177 b(750)205 b(\015y\(B)27
b(P\))155 325 y(2:)196 b(126)135 b(550)205 b(b)r(oard\(P\))155
424 y(3:)196 b(156)135 b(550)205 b(\015y\(P)27 b(L\))155
524 y(4:)196 b(216)135 b(416.67)83 727 y(F)-7 b(ailures)61
b(during)g(execution)g(could)g(b)r(e)h(analyzed)0 827
y(to)40 b(deriv)n(e)g(information)g(that)h(guides)f(the)h(subsequen)n
(t)0 926 y(searc)n(h)28 b(pro)r(cess)g(for)h(a)f(new)i(plan)f
(candidate.)41 b(Ho)n(w)n(ev)n(er,)0 1026 y(suc)n(h)21
b(failures)f(can)h(ha)n(v)n(e)e(man)n(y)i(p)r(ossible)f(sources)g(and)h
(of-)0 1125 y(fer)i(a)f(h)n(uge)h(range)e(of)i(solution)g(p)r
(ossibilities.)35 b(It)23 b(is)g(there-)0 1225 y(fore)j(not)g(ob)n
(vious)g(ho)n(w)g(to)g(deriv)n(e)g(con)n(trol)f(information.)0
1325 y(In)37 b(the)g(example,)i(one)e(can)f(only)h(conclude)f(that)i
(refu-)0 1424 y(eling)f(this)h(sp)r(eci\014c)g(amoun)n(t)f(of)h(gas)e
(violates)h(all)g(time)0 1524 y(requiremen)n(ts)23 b(in)i(subsequen)n
(t)f(states.)36 b(Th)n(us,)24 b(one)h(could)0 1624 y(try)h(to)g(reduce)
f(gas)g(consumption,)h(or)g(try)f(to)h(refuel)g(in)h(a)0
1723 y(di\013eren)n(t)j(w)n(a)n(y)-7 b(,)29 b(or)f(relax)h(temp)r(oral)
g(constrain)n(ts)f(caused)0 1823 y(b)n(y)e Fm(\015ying)h
Fq(actions,)f(etc.)37 b(All)27 b(these)g(p)r(ossibilities)f(are)g(ex-)0
1923 y(plored)d(during)h(the)h(systematic)e(searc)n(h)g(of)h(the)h
(planning)0 2022 y(graph)36 b(and)i(it)g(seems)f(to)g(b)r(e)h(imp)r
(ossible)f(to)h(decide)f(in)0 2122 y(adv)-5 b(ance)27
b(whic)n(h)g(of)h(them)g(should)g(b)r(e)g(fa)n(v)n(ored.)0
2428 y Fr(6)135 b(Conclusion)0 2621 y Fq(This)40 b(pap)r(er)f(describ)r
(es)h(the)g(\014rst)g(attempt)g(of)g(dealing)0 2721 y(with)51
b(resources)d(in)i Fp(IPP)p Fq(.)g(The)g(approac)n(h)f(is)h(strictly)0
2821 y(action-cen)n(tered)38 b(and)h(follo)n(ws)g(the)h(classical)e
(planning)0 2920 y(paradigm,)43 b(i.e.,)e(a)g(logical)f(goal)f(is)i(ac)
n(hiev)n(ed)f(b)n(y)h(con-)0 3020 y(structing)32 b(a)f(v)-5
b(alid)32 b(plan,)h(but)f(resources)e(are)h(no)h(longer)0
3119 y(unlimited.)j(In)19 b(this)g(formalism,)h(w)n(e)f(cannot)f(sp)r
(ecify)h(that)0 3219 y(a)41 b(resource)f(has)h(a)g(certain)g(v)-5
b(alue)42 b(at)f(a)g(sp)r(eci\014c)h(time)0 3319 y(p)r(oin)n(t)e(b)r
(ecause)f(no)g(explicit)h(time)g(mo)r(del)f(is)h(a)n(v)-5
b(ailable)0 3418 y(as)30 b(for)g(example)g(in)g([1,)g(10)o(,)h(9,)f(3,)
g(4,)g(8,)g(2].)45 b(W)-7 b(e)31 b(decided)0 3518 y(to)24
b(adopt)g(this)h(limitation)g(in)g(order)e(to)h(a)n(v)n(oid)f(the)i
(neces-)0 3618 y(sit)n(y)40 b(to)h(solv)n(e)f(general)f(constrain)n(t)g
(satisfaction)h(prob-)0 3717 y(lems)25 b(during)f(planning)h(since)f
(the)h(a)n(v)-5 b(ailable)24 b(algorithms)0 3817 y(are)k(excellen)n(t)g
(satis\014abilit)n(y)f(c)n(hec)n(k)n(ers,)g(but)i(usually)f(fail)0
3916 y(in)c(their)h(generativ)n(e)d(capabilities,)j(i.e.,)f(in)g
(actually)g(con-)0 4016 y(structing)33 b(solution)g(plans.)55
b(First)33 b(empirical)g(test)h(with)0 4116 y(the)27
b(curren)n(t)f(protot)n(yp)r(e)f(sho)n(w)h(quite)h(go)r(o)r(d)f(run)n
(time)g(b)r(e-)0 4215 y(ha)n(vior)h(of)i(our)f(algorithm.)39
b(F)-7 b(or)28 b(example,)g(the)h(airplane)0 4315 y(problem)d(as)f
(describ)r(ed)h(in)g(this)h(pap)r(er)e(is)h(solv)n(ed)f(b)n(y)h
Fp(IPP)0 4415 y Fq(in)e(0.02)f(seconds)h(\(without)h(an)n(y)e(user)g
(in)n(teraction\))h(com-)0 4514 y(pared)37 b(to)h(2-3)f(min)n(utes)h
(for)f(ZENO)g(with)h(user-guided)0 4614 y(goal)26 b(selection.)83
4719 y(W)-7 b(e)21 b(allo)n(w)f(for)g(a)g(limited)h(form)g(of)f(temp)r
(oral)g(reasoning)0 4819 y(b)n(y)35 b(treating)g(time)h(as)f(a)h
(distinguished)f(resource.)59 b(Ac-)0 4919 y(tions)42
b(pro)r(duce)f(time,)46 b(but)c(they)g(are)f(still)h(treated)f(as)0
5018 y(instan)n(taneous)g(in)h(the)h(planning)f(graphs.)78
b(It)43 b(has)e(to)0 5118 y(b)r(e)34 b(noted)g(that)g(this)g(can)f(b)r
(e)h(adequate)f(only)h(for)f(some)0 5218 y(applications.)49
b(W)-7 b(e)33 b(consider)e(it)h(as)g(a)f(preliminary)g(step)0
5317 y(to)n(w)n(ards)f(an)i(extension)g(of)g(planning)g(graphs)e(to)i
(mo)r(del)0 5417 y(action)27 b(duration.)83 5523 y(Curren)n(tly)-7
b(,)33 b(w)n(e)g(are)f(concen)n(trating)f(on)h(the)h(dev)n(elop-)0
5622 y(men)n(t)28 b(of)h(an)f(e\016cien)n(t)g(termination)g(test)g(for)
g(unsolv)-5 b(able)1931 36 y(problems)38 b(and)h(tec)n(hniques)g(to)g
(further)g(sp)r(eed)g(up)g(the)1931 135 y(planner.)1931
410 y Fr(References)1973 592 y Fq([1])i(J.)30 b(Allen,)i(H.)f(Kautz,)g
(R.)g(P)n(ela)n(vin,)f(and)g(J.)h(T)-7 b(enen-)2102 692
y(b)r(erg.)60 b Fm(R)l(e)l(asoning)37 b(ab)l(out)g(Plans)p
Fq(.)60 b(Morgan)34 b(Kauf-)2102 791 y(mann,)28 b(USA,)g(1991.)1973
957 y([2])41 b(B.)k(Drabble)g(and)f(A.)i(T)-7 b(ate.)88
b(The)45 b(use)g(of)g(opti-)2102 1057 y(mistic)35 b(and)g(p)r
(essimistic)g(resource)e(pro\014les)h(to)h(in-)2102 1156
y(form)h(searc)n(h)e(in)i(an)g(activit)n(y)g(based)f(planner.)61
b(In)2102 1256 y(Hammond)28 b([5)o(],)g(pages)e(243{248.)1973
1422 y([3])41 b(A.)51 b(El-Kholy)d(and)i(Barry)f(Ric)n(hards.)103
b(T)-7 b(emp)r(o-)2102 1522 y(ral)43 b(and)g(resource)f(reasoning)g(in)
i(planning:)68 b(the)2102 1621 y(parcPLAN)35 b(appro)r(c)n(h.)60
b(In)36 b(W.)g(W)-7 b(ahlster,)38 b(editor,)2102 1721
y Fm(Pr)l(o)l(c)l(e)l(e)l(dings)i(of)h(the)e(12th)i(Eur)l(op)l(e)l(an)f
(Confer)l(enc)l(e)2102 1821 y(on)30 b(A)n(rti\014cial)g(Intel)t(ligenc)
l(e)p Fq(,)f(pages)e(614{618.)d(John)2102 1920 y(Wiley)k(&)f(Sons,)g
(Chic)n(hester,)g(New)h(Y)-7 b(ork,)27 b(1996.)1973 2086
y([4])41 b(M.)c(Ghallab)g(and)g(H.)h(Laruelle.)64 b(Represen)n(tation)
2102 2186 y(and)31 b(con)n(trol)f(in)i(IxT)-7 b(eT,)32
b(a)f(temp)r(oral)g(planner.)47 b(In)2102 2286 y(Hammond)28
b([5)o(],)g(pages)e(61{67.)1973 2452 y([5])41 b(K.)34
b(Hammond,)i(editor.)56 b Fm(Pr)l(o)l(c)l(e)l(e)l(dings)36
b(of)h(the)f(2nd)2102 2551 y(International)h(Confer)l(enc)l(e)g(on)g(A)
n(rti\014cial)g(Intel)t(li-)2102 2651 y(genc)l(e)i(Planning)g(Systems)p
Fq(.)e(AAAI)h(Press,)h(Menlo)2102 2750 y(P)n(ark,)26
b(1994.)1973 2917 y([6])41 b(J.)53 b(Ko)r(ehler.)111
b(Planning)52 b(under)h(resource)e(con-)2102 3016 y(strain)n(ts)35
b(in)i(IPP.)62 b(T)-7 b(ec)n(hnical)36 b(rep)r(ort,)i(Univ)n(ersit)n(y)
2102 3116 y(of)27 b(F)-7 b(reiburg,)27 b(1998.)35 b(forthcoming.)1973
3282 y([7])41 b(J.)27 b(Ko)r(ehler,)e(B.)i(Neb)r(el,)h(J.)e
(Ho\013mann,)i(and)e(Y.)h(Di-)2102 3381 y(mop)r(oulos.)68
b(Extending)38 b(planning)g(graphs)f(to)h(an)2102 3481
y(ADL)26 b(subset.)33 b(In)26 b(S.)f(Steel,)i(editor,)e
Fm(Pr)l(o)l(c)l(e)l(e)l(dings)k(of)2102 3581 y(the)d(4th)g(Eur)l(op)l
(e)l(an)g(Confer)l(enc)l(e)g(on)g(Planning)p Fq(,)f(v)n(ol-)2102
3680 y(ume)37 b(1348)e(of)i Fm(LNAI)p Fq(,)f(pages)g(273{285.)e
(Springer,)2102 3780 y(1997.)1973 3946 y([8])41 b(P)-7
b(.)43 b(Lab)r(orie)f(and)i(M.)f(Ghallab.)84 b(Planning)42
b(with)2102 4046 y(sharable)35 b(resource)g(constrain)n(ts.)61
b(In)37 b Fm(Pr)l(o)l(c)l(e)l(e)l(dings)2102 4145 y(of)d(the)f(14th)h
(International)f(Joint)g(Confer)l(enc)l(e)g(on)2102 4245
y(A)n(rti\014cial)38 b(Intel)t(ligenc)l(e)p Fq(,)h(pages)c(1643{1649.)d
(Mor-)2102 4344 y(gan)27 b(Kaufmann,)g(San)g(F)-7 b(rancisco,)27
b(CA,)h(1995.)1973 4511 y([9])41 b(J.)g(P)n(en)n(b)r(erth)n(y)e(and)i
(D.)g(W)-7 b(eld.)77 b(T)-7 b(emp)r(oral)40 b(plan-)2102
4610 y(ning)22 b(with)h(con)n(tin)n(uous)f(c)n(hange.)27
b(In)c Fm(Pr)l(o)l(c)l(e)l(e)l(dings)j(of)2102 4710 y(the)k(12th)h
(National)g(Confer)l(enc)l(e)f(of)h(the)f(A)n(meric)l(an)2102
4809 y(Asso)l(ciation)51 b(for)f(A)n(rti\014cial)g(Intel)t(ligenc)l(e)p
Fq(,)56 b(pages)2102 4909 y(1010{1015.)23 b(AAAI)29 b(Press,)d(MIT)i
(Press,)e(1994.)1931 5075 y([10])41 b(D.)48 b(Wilkins.)95
b Fm(Pr)l(actic)l(al)48 b(Planning:)75 b(Extending)2102
5175 y(the)35 b(Classic)l(al)h(AI)e(Planning)h(Par)l(adigm)p
Fq(.)54 b(Morgan)2102 5274 y(Kaufmann,)27 b(San)h(F)-7
b(rancisco,)26 b(1988.)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
